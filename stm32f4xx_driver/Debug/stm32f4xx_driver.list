
stm32f4xx_driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000021dc  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000104  0800238c  0800238c  0001238c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002490  08002490  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08002490  08002490  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002490  08002490  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002490  08002490  00012490  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002494  08002494  00012494  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08002498  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020070  2**0
                  CONTENTS
 10 .bss          000000dc  20000070  20000070  00020070  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000014c  2000014c  00020070  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001478  00000000  00000000  0002009a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000446  00000000  00000000  00021512  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000150  00000000  00000000  00021958  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000118  00000000  00000000  00021aa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002a7a  00000000  00000000  00021bc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000017de  00000000  00000000  0002463a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000a450  00000000  00000000  00025e18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00030268  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001064  00000000  00000000  000302b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000070 	.word	0x20000070
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08002374 	.word	0x08002374

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000074 	.word	0x20000074
 80001ec:	08002374 	.word	0x08002374

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <delay>:
//arduino led

#define LED_PIN  9

void delay(void)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 500000/2 ; i ++);
 80002a6:	2300      	movs	r3, #0
 80002a8:	607b      	str	r3, [r7, #4]
 80002aa:	e002      	b.n	80002b2 <delay+0x12>
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	3301      	adds	r3, #1
 80002b0:	607b      	str	r3, [r7, #4]
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	4a04      	ldr	r2, [pc, #16]	; (80002c8 <delay+0x28>)
 80002b6:	4293      	cmp	r3, r2
 80002b8:	d9f8      	bls.n	80002ac <delay+0xc>
}
 80002ba:	bf00      	nop
 80002bc:	bf00      	nop
 80002be:	370c      	adds	r7, #12
 80002c0:	46bd      	mov	sp, r7
 80002c2:	bc80      	pop	{r7}
 80002c4:	4770      	bx	lr
 80002c6:	bf00      	nop
 80002c8:	0003d08f 	.word	0x0003d08f

080002cc <SPI1_GPIOInits>:
void SPI1_GPIOInits(void)
{
 80002cc:	b580      	push	{r7, lr}
 80002ce:	b084      	sub	sp, #16
 80002d0:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOA;
 80002d2:	4b14      	ldr	r3, [pc, #80]	; (8000324 <SPI1_GPIOInits+0x58>)
 80002d4:	607b      	str	r3, [r7, #4]
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 80002d6:	2302      	movs	r3, #2
 80002d8:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
 80002da:	2305      	movs	r3, #5
 80002dc:	737b      	strb	r3, [r7, #13]
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80002de:	2302      	movs	r3, #2
 80002e0:	72bb      	strb	r3, [r7, #10]
	SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80002e2:	2300      	movs	r3, #0
 80002e4:	733b      	strb	r3, [r7, #12]
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80002e6:	2300      	movs	r3, #0
 80002e8:	72fb      	strb	r3, [r7, #11]

	//SCLK
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80002ea:	2305      	movs	r3, #5
 80002ec:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 80002ee:	1d3b      	adds	r3, r7, #4
 80002f0:	4618      	mov	r0, r3
 80002f2:	f000 fa23 	bl	800073c <GPIO_Init>

	//MOSI
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
 80002f6:	2307      	movs	r3, #7
 80002f8:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 80002fa:	1d3b      	adds	r3, r7, #4
 80002fc:	4618      	mov	r0, r3
 80002fe:	f000 fa1d 	bl	800073c <GPIO_Init>

	//MISO
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
 8000302:	2306      	movs	r3, #6
 8000304:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000306:	1d3b      	adds	r3, r7, #4
 8000308:	4618      	mov	r0, r3
 800030a:	f000 fa17 	bl	800073c <GPIO_Init>

	//NSS
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_4;
 800030e:	2304      	movs	r3, #4
 8000310:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000312:	1d3b      	adds	r3, r7, #4
 8000314:	4618      	mov	r0, r3
 8000316:	f000 fa11 	bl	800073c <GPIO_Init>
}
 800031a:	bf00      	nop
 800031c:	3710      	adds	r7, #16
 800031e:	46bd      	mov	sp, r7
 8000320:	bd80      	pop	{r7, pc}
 8000322:	bf00      	nop
 8000324:	40020000 	.word	0x40020000

08000328 <SPI2_GPIOInits>:

void SPI2_GPIOInits(void)
{
 8000328:	b580      	push	{r7, lr}
 800032a:	b084      	sub	sp, #16
 800032c:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOB;
 800032e:	4b14      	ldr	r3, [pc, #80]	; (8000380 <SPI2_GPIOInits+0x58>)
 8000330:	607b      	str	r3, [r7, #4]
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8000332:	2302      	movs	r3, #2
 8000334:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
 8000336:	2305      	movs	r3, #5
 8000338:	737b      	strb	r3, [r7, #13]
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800033a:	2302      	movs	r3, #2
 800033c:	72bb      	strb	r3, [r7, #10]
	SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800033e:	2300      	movs	r3, #0
 8000340:	733b      	strb	r3, [r7, #12]
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000342:	2300      	movs	r3, #0
 8000344:	72fb      	strb	r3, [r7, #11]

	//SCLK
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000346:	230d      	movs	r3, #13
 8000348:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 800034a:	1d3b      	adds	r3, r7, #4
 800034c:	4618      	mov	r0, r3
 800034e:	f000 f9f5 	bl	800073c <GPIO_Init>

	//MOSI
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000352:	230f      	movs	r3, #15
 8000354:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000356:	1d3b      	adds	r3, r7, #4
 8000358:	4618      	mov	r0, r3
 800035a:	f000 f9ef 	bl	800073c <GPIO_Init>

	//MISO
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 800035e:	230e      	movs	r3, #14
 8000360:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000362:	1d3b      	adds	r3, r7, #4
 8000364:	4618      	mov	r0, r3
 8000366:	f000 f9e9 	bl	800073c <GPIO_Init>

	//NSS
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800036a:	230c      	movs	r3, #12
 800036c:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 800036e:	1d3b      	adds	r3, r7, #4
 8000370:	4618      	mov	r0, r3
 8000372:	f000 f9e3 	bl	800073c <GPIO_Init>
}
 8000376:	bf00      	nop
 8000378:	3710      	adds	r7, #16
 800037a:	46bd      	mov	sp, r7
 800037c:	bd80      	pop	{r7, pc}
 800037e:	bf00      	nop
 8000380:	40020400 	.word	0x40020400

08000384 <GPIO_ButtonInit>:

void GPIO_ButtonInit(void)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	b086      	sub	sp, #24
 8000388:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIOBtn,GpioLed;

	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOA;
 800038a:	4b09      	ldr	r3, [pc, #36]	; (80003b0 <GPIO_ButtonInit+0x2c>)
 800038c:	60fb      	str	r3, [r7, #12]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800038e:	2300      	movs	r3, #0
 8000390:	743b      	strb	r3, [r7, #16]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000392:	2300      	movs	r3, #0
 8000394:	747b      	strb	r3, [r7, #17]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000396:	2302      	movs	r3, #2
 8000398:	74bb      	strb	r3, [r7, #18]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800039a:	2300      	movs	r3, #0
 800039c:	74fb      	strb	r3, [r7, #19]

	GPIO_Init(&GPIOBtn);
 800039e:	f107 030c 	add.w	r3, r7, #12
 80003a2:	4618      	mov	r0, r3
 80003a4:	f000 f9ca 	bl	800073c <GPIO_Init>
//
//	GPIO_PeriClockControl(GPIOD,ENABLE);
//
//	GPIO_Init(&GpioLed);

}
 80003a8:	bf00      	nop
 80003aa:	3718      	adds	r7, #24
 80003ac:	46bd      	mov	sp, r7
 80003ae:	bd80      	pop	{r7, pc}
 80003b0:	40020000 	.word	0x40020000

080003b4 <SPI1_Inits>:

void SPI1_Inits(void)
{
 80003b4:	b580      	push	{r7, lr}
 80003b6:	b088      	sub	sp, #32
 80003b8:	af00      	add	r7, sp, #0
	SPI_Handle_t SPI1handle;

	SPI1handle.pSPIx = SPI1;
 80003ba:	4b0c      	ldr	r3, [pc, #48]	; (80003ec <SPI1_Inits+0x38>)
 80003bc:	603b      	str	r3, [r7, #0]
	SPI1handle.SPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 80003be:	2301      	movs	r3, #1
 80003c0:	717b      	strb	r3, [r7, #5]
	SPI1handle.SPIConfig.SPI_DeviceMode= SPI_DEVICE_MODE_SLAVE;
 80003c2:	2300      	movs	r3, #0
 80003c4:	713b      	strb	r3, [r7, #4]
	SPI1handle.SPIConfig.SPI_SclkSpeed= SPI_SCLK_SPEED_DIV4; //generate 8MHz
 80003c6:	2301      	movs	r3, #1
 80003c8:	71bb      	strb	r3, [r7, #6]
	SPI1handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
 80003ca:	2300      	movs	r3, #0
 80003cc:	71fb      	strb	r3, [r7, #7]
	SPI1handle.SPIConfig.SPI_CPOL= SPI_CPOL_LOW;//default
 80003ce:	2300      	movs	r3, #0
 80003d0:	723b      	strb	r3, [r7, #8]
	SPI1handle.SPIConfig.SPI_CPHA= SPI_CPHA_LOW;//default
 80003d2:	2300      	movs	r3, #0
 80003d4:	727b      	strb	r3, [r7, #9]
	SPI1handle.SPIConfig.SPI_SSM= SPI_SSM_EN;//software slave management enabled for NSS pin
 80003d6:	2301      	movs	r3, #1
 80003d8:	72bb      	strb	r3, [r7, #10]
	SPI_Init(&SPI1handle);
 80003da:	463b      	mov	r3, r7
 80003dc:	4618      	mov	r0, r3
 80003de:	f000 fbb7 	bl	8000b50 <SPI_Init>
}
 80003e2:	bf00      	nop
 80003e4:	3720      	adds	r7, #32
 80003e6:	46bd      	mov	sp, r7
 80003e8:	bd80      	pop	{r7, pc}
 80003ea:	bf00      	nop
 80003ec:	40013000 	.word	0x40013000

080003f0 <SPI2_Inits>:

void SPI2_Inits(void)
{
 80003f0:	b580      	push	{r7, lr}
 80003f2:	b088      	sub	sp, #32
 80003f4:	af00      	add	r7, sp, #0
	SPI_Handle_t SPI2handle;

	SPI2handle.pSPIx = SPI2;
 80003f6:	4b0c      	ldr	r3, [pc, #48]	; (8000428 <SPI2_Inits+0x38>)
 80003f8:	603b      	str	r3, [r7, #0]
	SPI2handle.SPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 80003fa:	2301      	movs	r3, #1
 80003fc:	717b      	strb	r3, [r7, #5]
	SPI2handle.SPIConfig.SPI_DeviceMode= SPI_DEVICE_MODE_MASTER;
 80003fe:	2301      	movs	r3, #1
 8000400:	713b      	strb	r3, [r7, #4]
	SPI2handle.SPIConfig.SPI_SclkSpeed= SPI_SCLK_SPEED_DIV4; //generate 8MHz
 8000402:	2301      	movs	r3, #1
 8000404:	71bb      	strb	r3, [r7, #6]
	SPI2handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
 8000406:	2300      	movs	r3, #0
 8000408:	71fb      	strb	r3, [r7, #7]
	SPI2handle.SPIConfig.SPI_CPOL= SPI_CPOL_LOW;//default
 800040a:	2300      	movs	r3, #0
 800040c:	723b      	strb	r3, [r7, #8]
	SPI2handle.SPIConfig.SPI_CPHA= SPI_CPHA_LOW;//default
 800040e:	2300      	movs	r3, #0
 8000410:	727b      	strb	r3, [r7, #9]
	SPI2handle.SPIConfig.SPI_SSM= SPI_SSM_EN;//software slave management enabled for NSS pin
 8000412:	2301      	movs	r3, #1
 8000414:	72bb      	strb	r3, [r7, #10]
	SPI_Init(&SPI2handle);
 8000416:	463b      	mov	r3, r7
 8000418:	4618      	mov	r0, r3
 800041a:	f000 fb99 	bl	8000b50 <SPI_Init>
}
 800041e:	bf00      	nop
 8000420:	3720      	adds	r7, #32
 8000422:	46bd      	mov	sp, r7
 8000424:	bd80      	pop	{r7, pc}
 8000426:	bf00      	nop
 8000428:	40003800 	.word	0x40003800

0800042c <main>:
		return 1;
	}
	return 0;
}
int main(void)
{
 800042c:	b580      	push	{r7, lr}
 800042e:	b082      	sub	sp, #8
 8000430:	af00      	add	r7, sp, #0
	uint8_t dummy_write = 0xff;
 8000432:	23ff      	movs	r3, #255	; 0xff
 8000434:	71bb      	strb	r3, [r7, #6]
	uint8_t dummy_read;

	initialise_monitor_handles();
 8000436:	f001 ff1b 	bl	8002270 <initialise_monitor_handles>

	printf("Application is running\n");
 800043a:	4831      	ldr	r0, [pc, #196]	; (8000500 <main+0xd4>)
 800043c:	f000 fd5e 	bl	8000efc <puts>

	GPIO_ButtonInit();
 8000440:	f7ff ffa0 	bl	8000384 <GPIO_ButtonInit>

	//this function is used to initialize the GPIO pins to behave as SPI2 pins
	SPI2_GPIOInits();
 8000444:	f7ff ff70 	bl	8000328 <SPI2_GPIOInits>

	SPI1_GPIOInits();
 8000448:	f7ff ff40 	bl	80002cc <SPI1_GPIOInits>
	//This function is used to initialize the SPI2 peripheral parameters
	SPI2_Inits();
 800044c:	f7ff ffd0 	bl	80003f0 <SPI2_Inits>

	SPI1_Inits();
 8000450:	f7ff ffb0 	bl	80003b4 <SPI1_Inits>
	* making SSOE 1 does NSS output enable.
	* The NSS pin is automatically managed by the hardware.
	* i.e when SPE=1 , NSS will be pulled to low
	* and NSS pin will be high when SPE=0
	*/
	SPI_SSOEConfig(SPI2,ENABLE);
 8000454:	2101      	movs	r1, #1
 8000456:	482b      	ldr	r0, [pc, #172]	; (8000504 <main+0xd8>)
 8000458:	f000 fc83 	bl	8000d62 <SPI_SSOEConfig>
	SPI_SSOEConfig(SPI1,1);
 800045c:	2101      	movs	r1, #1
 800045e:	482a      	ldr	r0, [pc, #168]	; (8000508 <main+0xdc>)
 8000460:	f000 fc7f 	bl	8000d62 <SPI_SSOEConfig>
	while(1)
	{
		//wait till button is pressed
		while( ! GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_NO_0) );
 8000464:	bf00      	nop
 8000466:	2100      	movs	r1, #0
 8000468:	4828      	ldr	r0, [pc, #160]	; (800050c <main+0xe0>)
 800046a:	f000 fb03 	bl	8000a74 <GPIO_ReadFromInputPin>
 800046e:	4603      	mov	r3, r0
 8000470:	2b00      	cmp	r3, #0
 8000472:	d0f8      	beq.n	8000466 <main+0x3a>

		//to avoid button de-bouncing related issues 200ms of delay
		delay();
 8000474:	f7ff ff14 	bl	80002a0 <delay>

		//enable the SPI2 peripheral
		SPI_PeripheralControl(SPI2,ENABLE);
 8000478:	2101      	movs	r1, #1
 800047a:	4822      	ldr	r0, [pc, #136]	; (8000504 <main+0xd8>)
 800047c:	f000 fc56 	bl	8000d2c <SPI_PeripheralControl>

		SPI_PeripheralControl(SPI1,ENABLE);
 8000480:	2101      	movs	r1, #1
 8000482:	4821      	ldr	r0, [pc, #132]	; (8000508 <main+0xdc>)
 8000484:	f000 fc52 	bl	8000d2c <SPI_PeripheralControl>
	    //1. CMD_LED_CTRL  	<pin no(1)>     <value(1)>

		uint8_t commandcode = 0x50;
 8000488:	2350      	movs	r3, #80	; 0x50
 800048a:	717b      	strb	r3, [r7, #5]
		uint8_t slave_rx = 0x00;
 800048c:	2300      	movs	r3, #0
 800048e:	713b      	strb	r3, [r7, #4]
		uint8_t slave_tx = 0xF5;
 8000490:	23f5      	movs	r3, #245	; 0xf5
 8000492:	71fb      	strb	r3, [r7, #7]
		uint8_t ackbyte;

		//send command
		SPI_SendData(SPI2,&commandcode,1);
 8000494:	1d7b      	adds	r3, r7, #5
 8000496:	2201      	movs	r2, #1
 8000498:	4619      	mov	r1, r3
 800049a:	481a      	ldr	r0, [pc, #104]	; (8000504 <main+0xd8>)
 800049c:	f000 fbc6 	bl	8000c2c <SPI_SendData>

		//do dummy read to clear off the RXNE
//		SPI_ReceiveData(SPI2,&dummy_read,1);

		printf("command code %x\n",commandcode);
 80004a0:	797b      	ldrb	r3, [r7, #5]
 80004a2:	4619      	mov	r1, r3
 80004a4:	481a      	ldr	r0, [pc, #104]	; (8000510 <main+0xe4>)
 80004a6:	f000 fca3 	bl	8000df0 <iprintf>
		SPI_SendData(SPI1,&dummy_write,1);
 80004aa:	1dbb      	adds	r3, r7, #6
 80004ac:	2201      	movs	r2, #1
 80004ae:	4619      	mov	r1, r3
 80004b0:	4815      	ldr	r0, [pc, #84]	; (8000508 <main+0xdc>)
 80004b2:	f000 fbbb 	bl	8000c2c <SPI_SendData>
		SPI_ReceiveData(SPI1,&slave_rx,1);
 80004b6:	1d3b      	adds	r3, r7, #4
 80004b8:	2201      	movs	r2, #1
 80004ba:	4619      	mov	r1, r3
 80004bc:	4812      	ldr	r0, [pc, #72]	; (8000508 <main+0xdc>)
 80004be:	f000 fbed 	bl	8000c9c <SPI_ReceiveData>

		printf("slave rx %x\n",slave_rx);
 80004c2:	793b      	ldrb	r3, [r7, #4]
 80004c4:	4619      	mov	r1, r3
 80004c6:	4813      	ldr	r0, [pc, #76]	; (8000514 <main+0xe8>)
 80004c8:	f000 fc92 	bl	8000df0 <iprintf>
////			printf("COMMAND_LED_CTRL Executed\n");
//		}
		//end of COMMAND_LED_CTRL

		//lets confirm SPI is not busy
		while( SPI_GetFlagStatus(SPI2,SPI_BUSY_FLAG) );
 80004cc:	bf00      	nop
 80004ce:	2180      	movs	r1, #128	; 0x80
 80004d0:	480c      	ldr	r0, [pc, #48]	; (8000504 <main+0xd8>)
 80004d2:	f000 fb98 	bl	8000c06 <SPI_GetFlagStatus>
 80004d6:	4603      	mov	r3, r0
 80004d8:	2b00      	cmp	r3, #0
 80004da:	d1f8      	bne.n	80004ce <main+0xa2>
		while( SPI_GetFlagStatus(SPI1,SPI_BUSY_FLAG) );
 80004dc:	bf00      	nop
 80004de:	2180      	movs	r1, #128	; 0x80
 80004e0:	4809      	ldr	r0, [pc, #36]	; (8000508 <main+0xdc>)
 80004e2:	f000 fb90 	bl	8000c06 <SPI_GetFlagStatus>
 80004e6:	4603      	mov	r3, r0
 80004e8:	2b00      	cmp	r3, #0
 80004ea:	d1f8      	bne.n	80004de <main+0xb2>
		//Disable the SPI2 peripheral
		SPI_PeripheralControl(SPI2,DISABLE);
 80004ec:	2100      	movs	r1, #0
 80004ee:	4805      	ldr	r0, [pc, #20]	; (8000504 <main+0xd8>)
 80004f0:	f000 fc1c 	bl	8000d2c <SPI_PeripheralControl>
		SPI_PeripheralControl(SPI1,DISABLE);
 80004f4:	2100      	movs	r1, #0
 80004f6:	4804      	ldr	r0, [pc, #16]	; (8000508 <main+0xdc>)
 80004f8:	f000 fc18 	bl	8000d2c <SPI_PeripheralControl>
	{
 80004fc:	e7b2      	b.n	8000464 <main+0x38>
 80004fe:	bf00      	nop
 8000500:	0800238c 	.word	0x0800238c
 8000504:	40003800 	.word	0x40003800
 8000508:	40013000 	.word	0x40013000
 800050c:	40020000 	.word	0x40020000
 8000510:	080023a4 	.word	0x080023a4
 8000514:	080023b8 	.word	0x080023b8

08000518 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000518:	480d      	ldr	r0, [pc, #52]	; (8000550 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800051a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800051c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000520:	480c      	ldr	r0, [pc, #48]	; (8000554 <LoopForever+0x6>)
  ldr r1, =_edata
 8000522:	490d      	ldr	r1, [pc, #52]	; (8000558 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000524:	4a0d      	ldr	r2, [pc, #52]	; (800055c <LoopForever+0xe>)
  movs r3, #0
 8000526:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000528:	e002      	b.n	8000530 <LoopCopyDataInit>

0800052a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800052a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800052c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800052e:	3304      	adds	r3, #4

08000530 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000530:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000532:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000534:	d3f9      	bcc.n	800052a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000536:	4a0a      	ldr	r2, [pc, #40]	; (8000560 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000538:	4c0a      	ldr	r4, [pc, #40]	; (8000564 <LoopForever+0x16>)
  movs r3, #0
 800053a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800053c:	e001      	b.n	8000542 <LoopFillZerobss>

0800053e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800053e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000540:	3204      	adds	r2, #4

08000542 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000542:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000544:	d3fb      	bcc.n	800053e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000546:	f000 fc27 	bl	8000d98 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800054a:	f7ff ff6f 	bl	800042c <main>

0800054e <LoopForever>:

LoopForever:
    b LoopForever
 800054e:	e7fe      	b.n	800054e <LoopForever>
  ldr   r0, =_estack
 8000550:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000554:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000558:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 800055c:	08002498 	.word	0x08002498
  ldr r2, =_sbss
 8000560:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 8000564:	2000014c 	.word	0x2000014c

08000568 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000568:	e7fe      	b.n	8000568 <ADC_IRQHandler>
	...

0800056c <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 800056c:	b480      	push	{r7}
 800056e:	b083      	sub	sp, #12
 8000570:	af00      	add	r7, sp, #0
 8000572:	6078      	str	r0, [r7, #4]
 8000574:	460b      	mov	r3, r1
 8000576:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000578:	78fb      	ldrb	r3, [r7, #3]
 800057a:	2b01      	cmp	r3, #1
 800057c:	d162      	bne.n	8000644 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	4a64      	ldr	r2, [pc, #400]	; (8000714 <GPIO_PeriClockControl+0x1a8>)
 8000582:	4293      	cmp	r3, r2
 8000584:	d106      	bne.n	8000594 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000586:	4b64      	ldr	r3, [pc, #400]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000588:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800058a:	4a63      	ldr	r2, [pc, #396]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 800058c:	f043 0301 	orr.w	r3, r3, #1
 8000590:	6313      	str	r3, [r2, #48]	; 0x30
		{
			GPIOI_PCLK_DI();
		}
	}

}
 8000592:	e0b9      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	4a61      	ldr	r2, [pc, #388]	; (800071c <GPIO_PeriClockControl+0x1b0>)
 8000598:	4293      	cmp	r3, r2
 800059a:	d106      	bne.n	80005aa <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 800059c:	4b5e      	ldr	r3, [pc, #376]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 800059e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005a0:	4a5d      	ldr	r2, [pc, #372]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80005a2:	f043 0302 	orr.w	r3, r3, #2
 80005a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005a8:	e0ae      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	4a5c      	ldr	r2, [pc, #368]	; (8000720 <GPIO_PeriClockControl+0x1b4>)
 80005ae:	4293      	cmp	r3, r2
 80005b0:	d106      	bne.n	80005c0 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80005b2:	4b59      	ldr	r3, [pc, #356]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80005b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005b6:	4a58      	ldr	r2, [pc, #352]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80005b8:	f043 0304 	orr.w	r3, r3, #4
 80005bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005be:	e0a3      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	4a58      	ldr	r2, [pc, #352]	; (8000724 <GPIO_PeriClockControl+0x1b8>)
 80005c4:	4293      	cmp	r3, r2
 80005c6:	d106      	bne.n	80005d6 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80005c8:	4b53      	ldr	r3, [pc, #332]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80005ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005cc:	4a52      	ldr	r2, [pc, #328]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80005ce:	f043 0308 	orr.w	r3, r3, #8
 80005d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005d4:	e098      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	4a53      	ldr	r2, [pc, #332]	; (8000728 <GPIO_PeriClockControl+0x1bc>)
 80005da:	4293      	cmp	r3, r2
 80005dc:	d106      	bne.n	80005ec <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80005de:	4b4e      	ldr	r3, [pc, #312]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80005e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005e2:	4a4d      	ldr	r2, [pc, #308]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80005e4:	f043 0310 	orr.w	r3, r3, #16
 80005e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80005ea:	e08d      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	4a4f      	ldr	r2, [pc, #316]	; (800072c <GPIO_PeriClockControl+0x1c0>)
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d106      	bne.n	8000602 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80005f4:	4b48      	ldr	r3, [pc, #288]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80005f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005f8:	4a47      	ldr	r2, [pc, #284]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80005fa:	f043 0320 	orr.w	r3, r3, #32
 80005fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000600:	e082      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	4a4a      	ldr	r2, [pc, #296]	; (8000730 <GPIO_PeriClockControl+0x1c4>)
 8000606:	4293      	cmp	r3, r2
 8000608:	d106      	bne.n	8000618 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800060a:	4b43      	ldr	r3, [pc, #268]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 800060c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800060e:	4a42      	ldr	r2, [pc, #264]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000610:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000614:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000616:	e077      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	4a46      	ldr	r2, [pc, #280]	; (8000734 <GPIO_PeriClockControl+0x1c8>)
 800061c:	4293      	cmp	r3, r2
 800061e:	d106      	bne.n	800062e <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000620:	4b3d      	ldr	r3, [pc, #244]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000622:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000624:	4a3c      	ldr	r2, [pc, #240]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000626:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800062a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800062c:	e06c      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	4a41      	ldr	r2, [pc, #260]	; (8000738 <GPIO_PeriClockControl+0x1cc>)
 8000632:	4293      	cmp	r3, r2
 8000634:	d168      	bne.n	8000708 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000636:	4b38      	ldr	r3, [pc, #224]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000638:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800063a:	4a37      	ldr	r2, [pc, #220]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 800063c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000640:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000642:	e061      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	4a33      	ldr	r2, [pc, #204]	; (8000714 <GPIO_PeriClockControl+0x1a8>)
 8000648:	4293      	cmp	r3, r2
 800064a:	d106      	bne.n	800065a <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 800064c:	4b32      	ldr	r3, [pc, #200]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 800064e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000650:	4a31      	ldr	r2, [pc, #196]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000652:	f023 0301 	bic.w	r3, r3, #1
 8000656:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000658:	e056      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	4a2f      	ldr	r2, [pc, #188]	; (800071c <GPIO_PeriClockControl+0x1b0>)
 800065e:	4293      	cmp	r3, r2
 8000660:	d106      	bne.n	8000670 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 8000662:	4b2d      	ldr	r3, [pc, #180]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000664:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000666:	4a2c      	ldr	r2, [pc, #176]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000668:	f023 0302 	bic.w	r3, r3, #2
 800066c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800066e:	e04b      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	4a2b      	ldr	r2, [pc, #172]	; (8000720 <GPIO_PeriClockControl+0x1b4>)
 8000674:	4293      	cmp	r3, r2
 8000676:	d106      	bne.n	8000686 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000678:	4b27      	ldr	r3, [pc, #156]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 800067a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800067c:	4a26      	ldr	r2, [pc, #152]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 800067e:	f023 0304 	bic.w	r3, r3, #4
 8000682:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000684:	e040      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	4a26      	ldr	r2, [pc, #152]	; (8000724 <GPIO_PeriClockControl+0x1b8>)
 800068a:	4293      	cmp	r3, r2
 800068c:	d106      	bne.n	800069c <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 800068e:	4b22      	ldr	r3, [pc, #136]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000690:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000692:	4a21      	ldr	r2, [pc, #132]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000694:	f023 0308 	bic.w	r3, r3, #8
 8000698:	6313      	str	r3, [r2, #48]	; 0x30
}
 800069a:	e035      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	4a22      	ldr	r2, [pc, #136]	; (8000728 <GPIO_PeriClockControl+0x1bc>)
 80006a0:	4293      	cmp	r3, r2
 80006a2:	d106      	bne.n	80006b2 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80006a4:	4b1c      	ldr	r3, [pc, #112]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80006a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006a8:	4a1b      	ldr	r2, [pc, #108]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80006aa:	f023 0310 	bic.w	r3, r3, #16
 80006ae:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006b0:	e02a      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	4a1d      	ldr	r2, [pc, #116]	; (800072c <GPIO_PeriClockControl+0x1c0>)
 80006b6:	4293      	cmp	r3, r2
 80006b8:	d106      	bne.n	80006c8 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 80006ba:	4b17      	ldr	r3, [pc, #92]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80006bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006be:	4a16      	ldr	r2, [pc, #88]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80006c0:	f023 0320 	bic.w	r3, r3, #32
 80006c4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006c6:	e01f      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	4a19      	ldr	r2, [pc, #100]	; (8000730 <GPIO_PeriClockControl+0x1c4>)
 80006cc:	4293      	cmp	r3, r2
 80006ce:	d106      	bne.n	80006de <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 80006d0:	4b11      	ldr	r3, [pc, #68]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80006d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006d4:	4a10      	ldr	r2, [pc, #64]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80006d6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80006da:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006dc:	e014      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	4a14      	ldr	r2, [pc, #80]	; (8000734 <GPIO_PeriClockControl+0x1c8>)
 80006e2:	4293      	cmp	r3, r2
 80006e4:	d106      	bne.n	80006f4 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 80006e6:	4b0c      	ldr	r3, [pc, #48]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80006e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ea:	4a0b      	ldr	r2, [pc, #44]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80006ec:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80006f0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006f2:	e009      	b.n	8000708 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	4a10      	ldr	r2, [pc, #64]	; (8000738 <GPIO_PeriClockControl+0x1cc>)
 80006f8:	4293      	cmp	r3, r2
 80006fa:	d105      	bne.n	8000708 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 80006fc:	4b06      	ldr	r3, [pc, #24]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 80006fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000700:	4a05      	ldr	r2, [pc, #20]	; (8000718 <GPIO_PeriClockControl+0x1ac>)
 8000702:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000706:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000708:	bf00      	nop
 800070a:	370c      	adds	r7, #12
 800070c:	46bd      	mov	sp, r7
 800070e:	bc80      	pop	{r7}
 8000710:	4770      	bx	lr
 8000712:	bf00      	nop
 8000714:	40020000 	.word	0x40020000
 8000718:	40023800 	.word	0x40023800
 800071c:	40020400 	.word	0x40020400
 8000720:	40020800 	.word	0x40020800
 8000724:	40020c00 	.word	0x40020c00
 8000728:	40021000 	.word	0x40021000
 800072c:	40021400 	.word	0x40021400
 8000730:	40021800 	.word	0x40021800
 8000734:	40021c00 	.word	0x40021c00
 8000738:	40022000 	.word	0x40022000

0800073c <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800073c:	b580      	push	{r7, lr}
 800073e:	b086      	sub	sp, #24
 8000740:	af00      	add	r7, sp, #0
 8000742:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 8000744:	2300      	movs	r3, #0
 8000746:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	2101      	movs	r1, #1
 800074e:	4618      	mov	r0, r3
 8000750:	f7ff ff0c 	bl	800056c <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	795b      	ldrb	r3, [r3, #5]
 8000758:	2b03      	cmp	r3, #3
 800075a:	d820      	bhi.n	800079e <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	795b      	ldrb	r3, [r3, #5]
 8000760:	461a      	mov	r2, r3
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	791b      	ldrb	r3, [r3, #4]
 8000766:	005b      	lsls	r3, r3, #1
 8000768:	fa02 f303 	lsl.w	r3, r2, r3
 800076c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	681a      	ldr	r2, [r3, #0]
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	791b      	ldrb	r3, [r3, #4]
 8000778:	005b      	lsls	r3, r3, #1
 800077a:	2103      	movs	r1, #3
 800077c:	fa01 f303 	lsl.w	r3, r1, r3
 8000780:	43db      	mvns	r3, r3
 8000782:	4619      	mov	r1, r3
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	681b      	ldr	r3, [r3, #0]
 8000788:	400a      	ands	r2, r1
 800078a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	6819      	ldr	r1, [r3, #0]
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	697a      	ldr	r2, [r7, #20]
 8000798:	430a      	orrs	r2, r1
 800079a:	601a      	str	r2, [r3, #0]
 800079c:	e0cb      	b.n	8000936 <GPIO_Init+0x1fa>

	}else
	{
		//this part will code later . ( interrupt mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	795b      	ldrb	r3, [r3, #5]
 80007a2:	2b04      	cmp	r3, #4
 80007a4:	d117      	bne.n	80007d6 <GPIO_Init+0x9a>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007a6:	4b4b      	ldr	r3, [pc, #300]	; (80008d4 <GPIO_Init+0x198>)
 80007a8:	68db      	ldr	r3, [r3, #12]
 80007aa:	687a      	ldr	r2, [r7, #4]
 80007ac:	7912      	ldrb	r2, [r2, #4]
 80007ae:	4611      	mov	r1, r2
 80007b0:	2201      	movs	r2, #1
 80007b2:	408a      	lsls	r2, r1
 80007b4:	4611      	mov	r1, r2
 80007b6:	4a47      	ldr	r2, [pc, #284]	; (80008d4 <GPIO_Init+0x198>)
 80007b8:	430b      	orrs	r3, r1
 80007ba:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007bc:	4b45      	ldr	r3, [pc, #276]	; (80008d4 <GPIO_Init+0x198>)
 80007be:	689b      	ldr	r3, [r3, #8]
 80007c0:	687a      	ldr	r2, [r7, #4]
 80007c2:	7912      	ldrb	r2, [r2, #4]
 80007c4:	4611      	mov	r1, r2
 80007c6:	2201      	movs	r2, #1
 80007c8:	408a      	lsls	r2, r1
 80007ca:	43d2      	mvns	r2, r2
 80007cc:	4611      	mov	r1, r2
 80007ce:	4a41      	ldr	r2, [pc, #260]	; (80008d4 <GPIO_Init+0x198>)
 80007d0:	400b      	ands	r3, r1
 80007d2:	6093      	str	r3, [r2, #8]
 80007d4:	e035      	b.n	8000842 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	795b      	ldrb	r3, [r3, #5]
 80007da:	2b05      	cmp	r3, #5
 80007dc:	d117      	bne.n	800080e <GPIO_Init+0xd2>
		{
			//1 . configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007de:	4b3d      	ldr	r3, [pc, #244]	; (80008d4 <GPIO_Init+0x198>)
 80007e0:	689b      	ldr	r3, [r3, #8]
 80007e2:	687a      	ldr	r2, [r7, #4]
 80007e4:	7912      	ldrb	r2, [r2, #4]
 80007e6:	4611      	mov	r1, r2
 80007e8:	2201      	movs	r2, #1
 80007ea:	408a      	lsls	r2, r1
 80007ec:	4611      	mov	r1, r2
 80007ee:	4a39      	ldr	r2, [pc, #228]	; (80008d4 <GPIO_Init+0x198>)
 80007f0:	430b      	orrs	r3, r1
 80007f2:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80007f4:	4b37      	ldr	r3, [pc, #220]	; (80008d4 <GPIO_Init+0x198>)
 80007f6:	68db      	ldr	r3, [r3, #12]
 80007f8:	687a      	ldr	r2, [r7, #4]
 80007fa:	7912      	ldrb	r2, [r2, #4]
 80007fc:	4611      	mov	r1, r2
 80007fe:	2201      	movs	r2, #1
 8000800:	408a      	lsls	r2, r1
 8000802:	43d2      	mvns	r2, r2
 8000804:	4611      	mov	r1, r2
 8000806:	4a33      	ldr	r2, [pc, #204]	; (80008d4 <GPIO_Init+0x198>)
 8000808:	400b      	ands	r3, r1
 800080a:	60d3      	str	r3, [r2, #12]
 800080c:	e019      	b.n	8000842 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT )
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	795b      	ldrb	r3, [r3, #5]
 8000812:	2b06      	cmp	r3, #6
 8000814:	d115      	bne.n	8000842 <GPIO_Init+0x106>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000816:	4b2f      	ldr	r3, [pc, #188]	; (80008d4 <GPIO_Init+0x198>)
 8000818:	689b      	ldr	r3, [r3, #8]
 800081a:	687a      	ldr	r2, [r7, #4]
 800081c:	7912      	ldrb	r2, [r2, #4]
 800081e:	4611      	mov	r1, r2
 8000820:	2201      	movs	r2, #1
 8000822:	408a      	lsls	r2, r1
 8000824:	4611      	mov	r1, r2
 8000826:	4a2b      	ldr	r2, [pc, #172]	; (80008d4 <GPIO_Init+0x198>)
 8000828:	430b      	orrs	r3, r1
 800082a:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800082c:	4b29      	ldr	r3, [pc, #164]	; (80008d4 <GPIO_Init+0x198>)
 800082e:	68db      	ldr	r3, [r3, #12]
 8000830:	687a      	ldr	r2, [r7, #4]
 8000832:	7912      	ldrb	r2, [r2, #4]
 8000834:	4611      	mov	r1, r2
 8000836:	2201      	movs	r2, #1
 8000838:	408a      	lsls	r2, r1
 800083a:	4611      	mov	r1, r2
 800083c:	4a25      	ldr	r2, [pc, #148]	; (80008d4 <GPIO_Init+0x198>)
 800083e:	430b      	orrs	r3, r1
 8000840:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 8000842:	687b      	ldr	r3, [r7, #4]
 8000844:	791b      	ldrb	r3, [r3, #4]
 8000846:	089b      	lsrs	r3, r3, #2
 8000848:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	791b      	ldrb	r3, [r3, #4]
 800084e:	f003 0303 	and.w	r3, r3, #3
 8000852:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000854:	687b      	ldr	r3, [r7, #4]
 8000856:	681b      	ldr	r3, [r3, #0]
 8000858:	4a1f      	ldr	r2, [pc, #124]	; (80008d8 <GPIO_Init+0x19c>)
 800085a:	4293      	cmp	r3, r2
 800085c:	d04e      	beq.n	80008fc <GPIO_Init+0x1c0>
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	681b      	ldr	r3, [r3, #0]
 8000862:	4a1e      	ldr	r2, [pc, #120]	; (80008dc <GPIO_Init+0x1a0>)
 8000864:	4293      	cmp	r3, r2
 8000866:	d032      	beq.n	80008ce <GPIO_Init+0x192>
 8000868:	687b      	ldr	r3, [r7, #4]
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	4a1c      	ldr	r2, [pc, #112]	; (80008e0 <GPIO_Init+0x1a4>)
 800086e:	4293      	cmp	r3, r2
 8000870:	d02b      	beq.n	80008ca <GPIO_Init+0x18e>
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	681b      	ldr	r3, [r3, #0]
 8000876:	4a1b      	ldr	r2, [pc, #108]	; (80008e4 <GPIO_Init+0x1a8>)
 8000878:	4293      	cmp	r3, r2
 800087a:	d024      	beq.n	80008c6 <GPIO_Init+0x18a>
 800087c:	687b      	ldr	r3, [r7, #4]
 800087e:	681b      	ldr	r3, [r3, #0]
 8000880:	4a19      	ldr	r2, [pc, #100]	; (80008e8 <GPIO_Init+0x1ac>)
 8000882:	4293      	cmp	r3, r2
 8000884:	d01d      	beq.n	80008c2 <GPIO_Init+0x186>
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	681b      	ldr	r3, [r3, #0]
 800088a:	4a18      	ldr	r2, [pc, #96]	; (80008ec <GPIO_Init+0x1b0>)
 800088c:	4293      	cmp	r3, r2
 800088e:	d016      	beq.n	80008be <GPIO_Init+0x182>
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	681b      	ldr	r3, [r3, #0]
 8000894:	4a16      	ldr	r2, [pc, #88]	; (80008f0 <GPIO_Init+0x1b4>)
 8000896:	4293      	cmp	r3, r2
 8000898:	d00f      	beq.n	80008ba <GPIO_Init+0x17e>
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	4a15      	ldr	r2, [pc, #84]	; (80008f4 <GPIO_Init+0x1b8>)
 80008a0:	4293      	cmp	r3, r2
 80008a2:	d008      	beq.n	80008b6 <GPIO_Init+0x17a>
 80008a4:	687b      	ldr	r3, [r7, #4]
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	4a13      	ldr	r2, [pc, #76]	; (80008f8 <GPIO_Init+0x1bc>)
 80008aa:	4293      	cmp	r3, r2
 80008ac:	d101      	bne.n	80008b2 <GPIO_Init+0x176>
 80008ae:	2308      	movs	r3, #8
 80008b0:	e025      	b.n	80008fe <GPIO_Init+0x1c2>
 80008b2:	2300      	movs	r3, #0
 80008b4:	e023      	b.n	80008fe <GPIO_Init+0x1c2>
 80008b6:	2307      	movs	r3, #7
 80008b8:	e021      	b.n	80008fe <GPIO_Init+0x1c2>
 80008ba:	2306      	movs	r3, #6
 80008bc:	e01f      	b.n	80008fe <GPIO_Init+0x1c2>
 80008be:	2305      	movs	r3, #5
 80008c0:	e01d      	b.n	80008fe <GPIO_Init+0x1c2>
 80008c2:	2304      	movs	r3, #4
 80008c4:	e01b      	b.n	80008fe <GPIO_Init+0x1c2>
 80008c6:	2303      	movs	r3, #3
 80008c8:	e019      	b.n	80008fe <GPIO_Init+0x1c2>
 80008ca:	2302      	movs	r3, #2
 80008cc:	e017      	b.n	80008fe <GPIO_Init+0x1c2>
 80008ce:	2301      	movs	r3, #1
 80008d0:	e015      	b.n	80008fe <GPIO_Init+0x1c2>
 80008d2:	bf00      	nop
 80008d4:	40013c00 	.word	0x40013c00
 80008d8:	40020000 	.word	0x40020000
 80008dc:	40020400 	.word	0x40020400
 80008e0:	40020800 	.word	0x40020800
 80008e4:	40020c00 	.word	0x40020c00
 80008e8:	40021000 	.word	0x40021000
 80008ec:	40021400 	.word	0x40021400
 80008f0:	40021800 	.word	0x40021800
 80008f4:	40021c00 	.word	0x40021c00
 80008f8:	40022000 	.word	0x40022000
 80008fc:	2300      	movs	r3, #0
 80008fe:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000900:	4b59      	ldr	r3, [pc, #356]	; (8000a68 <GPIO_Init+0x32c>)
 8000902:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000904:	4a58      	ldr	r2, [pc, #352]	; (8000a68 <GPIO_Init+0x32c>)
 8000906:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800090a:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 800090c:	7c7a      	ldrb	r2, [r7, #17]
 800090e:	7cbb      	ldrb	r3, [r7, #18]
 8000910:	009b      	lsls	r3, r3, #2
 8000912:	fa02 f103 	lsl.w	r1, r2, r3
 8000916:	4a55      	ldr	r2, [pc, #340]	; (8000a6c <GPIO_Init+0x330>)
 8000918:	7cfb      	ldrb	r3, [r7, #19]
 800091a:	3302      	adds	r3, #2
 800091c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000920:	4b53      	ldr	r3, [pc, #332]	; (8000a70 <GPIO_Init+0x334>)
 8000922:	681b      	ldr	r3, [r3, #0]
 8000924:	687a      	ldr	r2, [r7, #4]
 8000926:	7912      	ldrb	r2, [r2, #4]
 8000928:	4611      	mov	r1, r2
 800092a:	2201      	movs	r2, #1
 800092c:	408a      	lsls	r2, r1
 800092e:	4611      	mov	r1, r2
 8000930:	4a4f      	ldr	r2, [pc, #316]	; (8000a70 <GPIO_Init+0x334>)
 8000932:	430b      	orrs	r3, r1
 8000934:	6013      	str	r3, [r2, #0]
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000936:	687b      	ldr	r3, [r7, #4]
 8000938:	799b      	ldrb	r3, [r3, #6]
 800093a:	461a      	mov	r2, r3
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	791b      	ldrb	r3, [r3, #4]
 8000940:	005b      	lsls	r3, r3, #1
 8000942:	fa02 f303 	lsl.w	r3, r2, r3
 8000946:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000948:	687b      	ldr	r3, [r7, #4]
 800094a:	681b      	ldr	r3, [r3, #0]
 800094c:	689a      	ldr	r2, [r3, #8]
 800094e:	687b      	ldr	r3, [r7, #4]
 8000950:	791b      	ldrb	r3, [r3, #4]
 8000952:	005b      	lsls	r3, r3, #1
 8000954:	2103      	movs	r1, #3
 8000956:	fa01 f303 	lsl.w	r3, r1, r3
 800095a:	43db      	mvns	r3, r3
 800095c:	4619      	mov	r1, r3
 800095e:	687b      	ldr	r3, [r7, #4]
 8000960:	681b      	ldr	r3, [r3, #0]
 8000962:	400a      	ands	r2, r1
 8000964:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000966:	687b      	ldr	r3, [r7, #4]
 8000968:	681b      	ldr	r3, [r3, #0]
 800096a:	6899      	ldr	r1, [r3, #8]
 800096c:	687b      	ldr	r3, [r7, #4]
 800096e:	681b      	ldr	r3, [r3, #0]
 8000970:	697a      	ldr	r2, [r7, #20]
 8000972:	430a      	orrs	r2, r1
 8000974:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000976:	687b      	ldr	r3, [r7, #4]
 8000978:	79db      	ldrb	r3, [r3, #7]
 800097a:	461a      	mov	r2, r3
 800097c:	687b      	ldr	r3, [r7, #4]
 800097e:	791b      	ldrb	r3, [r3, #4]
 8000980:	005b      	lsls	r3, r3, #1
 8000982:	fa02 f303 	lsl.w	r3, r2, r3
 8000986:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000988:	687b      	ldr	r3, [r7, #4]
 800098a:	681b      	ldr	r3, [r3, #0]
 800098c:	68da      	ldr	r2, [r3, #12]
 800098e:	687b      	ldr	r3, [r7, #4]
 8000990:	791b      	ldrb	r3, [r3, #4]
 8000992:	005b      	lsls	r3, r3, #1
 8000994:	2103      	movs	r1, #3
 8000996:	fa01 f303 	lsl.w	r3, r1, r3
 800099a:	43db      	mvns	r3, r3
 800099c:	4619      	mov	r1, r3
 800099e:	687b      	ldr	r3, [r7, #4]
 80009a0:	681b      	ldr	r3, [r3, #0]
 80009a2:	400a      	ands	r2, r1
 80009a4:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80009a6:	687b      	ldr	r3, [r7, #4]
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	68d9      	ldr	r1, [r3, #12]
 80009ac:	687b      	ldr	r3, [r7, #4]
 80009ae:	681b      	ldr	r3, [r3, #0]
 80009b0:	697a      	ldr	r2, [r7, #20]
 80009b2:	430a      	orrs	r2, r1
 80009b4:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80009b6:	687b      	ldr	r3, [r7, #4]
 80009b8:	7a1b      	ldrb	r3, [r3, #8]
 80009ba:	461a      	mov	r2, r3
 80009bc:	687b      	ldr	r3, [r7, #4]
 80009be:	791b      	ldrb	r3, [r3, #4]
 80009c0:	fa02 f303 	lsl.w	r3, r2, r3
 80009c4:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80009c6:	687b      	ldr	r3, [r7, #4]
 80009c8:	681b      	ldr	r3, [r3, #0]
 80009ca:	685a      	ldr	r2, [r3, #4]
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	791b      	ldrb	r3, [r3, #4]
 80009d0:	4619      	mov	r1, r3
 80009d2:	2301      	movs	r3, #1
 80009d4:	408b      	lsls	r3, r1
 80009d6:	43db      	mvns	r3, r3
 80009d8:	4619      	mov	r1, r3
 80009da:	687b      	ldr	r3, [r7, #4]
 80009dc:	681b      	ldr	r3, [r3, #0]
 80009de:	400a      	ands	r2, r1
 80009e0:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80009e2:	687b      	ldr	r3, [r7, #4]
 80009e4:	681b      	ldr	r3, [r3, #0]
 80009e6:	6859      	ldr	r1, [r3, #4]
 80009e8:	687b      	ldr	r3, [r7, #4]
 80009ea:	681b      	ldr	r3, [r3, #0]
 80009ec:	697a      	ldr	r2, [r7, #20]
 80009ee:	430a      	orrs	r2, r1
 80009f0:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80009f2:	687b      	ldr	r3, [r7, #4]
 80009f4:	795b      	ldrb	r3, [r3, #5]
 80009f6:	2b02      	cmp	r3, #2
 80009f8:	d131      	bne.n	8000a5e <GPIO_Init+0x322>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80009fa:	687b      	ldr	r3, [r7, #4]
 80009fc:	791b      	ldrb	r3, [r3, #4]
 80009fe:	08db      	lsrs	r3, r3, #3
 8000a00:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 8000a02:	687b      	ldr	r3, [r7, #4]
 8000a04:	791b      	ldrb	r3, [r3, #4]
 8000a06:	f003 0307 	and.w	r3, r3, #7
 8000a0a:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 8000a0c:	687b      	ldr	r3, [r7, #4]
 8000a0e:	681b      	ldr	r3, [r3, #0]
 8000a10:	7c3a      	ldrb	r2, [r7, #16]
 8000a12:	3208      	adds	r2, #8
 8000a14:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000a18:	7bfb      	ldrb	r3, [r7, #15]
 8000a1a:	009b      	lsls	r3, r3, #2
 8000a1c:	220f      	movs	r2, #15
 8000a1e:	fa02 f303 	lsl.w	r3, r2, r3
 8000a22:	43db      	mvns	r3, r3
 8000a24:	4618      	mov	r0, r3
 8000a26:	687b      	ldr	r3, [r7, #4]
 8000a28:	681b      	ldr	r3, [r3, #0]
 8000a2a:	7c3a      	ldrb	r2, [r7, #16]
 8000a2c:	4001      	ands	r1, r0
 8000a2e:	3208      	adds	r2, #8
 8000a30:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 8000a34:	687b      	ldr	r3, [r7, #4]
 8000a36:	681b      	ldr	r3, [r3, #0]
 8000a38:	7c3a      	ldrb	r2, [r7, #16]
 8000a3a:	3208      	adds	r2, #8
 8000a3c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000a40:	687b      	ldr	r3, [r7, #4]
 8000a42:	7a5b      	ldrb	r3, [r3, #9]
 8000a44:	461a      	mov	r2, r3
 8000a46:	7bfb      	ldrb	r3, [r7, #15]
 8000a48:	009b      	lsls	r3, r3, #2
 8000a4a:	fa02 f303 	lsl.w	r3, r2, r3
 8000a4e:	4618      	mov	r0, r3
 8000a50:	687b      	ldr	r3, [r7, #4]
 8000a52:	681b      	ldr	r3, [r3, #0]
 8000a54:	7c3a      	ldrb	r2, [r7, #16]
 8000a56:	4301      	orrs	r1, r0
 8000a58:	3208      	adds	r2, #8
 8000a5a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 8000a5e:	bf00      	nop
 8000a60:	3718      	adds	r7, #24
 8000a62:	46bd      	mov	sp, r7
 8000a64:	bd80      	pop	{r7, pc}
 8000a66:	bf00      	nop
 8000a68:	40023800 	.word	0x40023800
 8000a6c:	40013800 	.word	0x40013800
 8000a70:	40013c00 	.word	0x40013c00

08000a74 <GPIO_ReadFromInputPin>:
 *
 * @Note              -

 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000a74:	b480      	push	{r7}
 8000a76:	b085      	sub	sp, #20
 8000a78:	af00      	add	r7, sp, #0
 8000a7a:	6078      	str	r0, [r7, #4]
 8000a7c:	460b      	mov	r3, r1
 8000a7e:	70fb      	strb	r3, [r7, #3]
   uint8_t value;

   value = (uint8_t )((pGPIOx->IDR  >> PinNumber) & 0x00000001 ) ;
 8000a80:	687b      	ldr	r3, [r7, #4]
 8000a82:	691a      	ldr	r2, [r3, #16]
 8000a84:	78fb      	ldrb	r3, [r7, #3]
 8000a86:	fa22 f303 	lsr.w	r3, r2, r3
 8000a8a:	b2db      	uxtb	r3, r3
 8000a8c:	f003 0301 	and.w	r3, r3, #1
 8000a90:	73fb      	strb	r3, [r7, #15]

   return value;
 8000a92:	7bfb      	ldrb	r3, [r7, #15]
}
 8000a94:	4618      	mov	r0, r3
 8000a96:	3714      	adds	r7, #20
 8000a98:	46bd      	mov	sp, r7
 8000a9a:	bc80      	pop	{r7}
 8000a9c:	4770      	bx	lr
	...

08000aa0 <SPI_PeriClockControl>:
*
* @Note              -  none

*/
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi)
{
 8000aa0:	b480      	push	{r7}
 8000aa2:	b083      	sub	sp, #12
 8000aa4:	af00      	add	r7, sp, #0
 8000aa6:	6078      	str	r0, [r7, #4]
 8000aa8:	460b      	mov	r3, r1
 8000aaa:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000aac:	78fb      	ldrb	r3, [r7, #3]
 8000aae:	2b01      	cmp	r3, #1
 8000ab0:	d120      	bne.n	8000af4 <SPI_PeriClockControl+0x54>
	{
		if(pSPIx == SPI1)
 8000ab2:	687b      	ldr	r3, [r7, #4]
 8000ab4:	4a22      	ldr	r2, [pc, #136]	; (8000b40 <SPI_PeriClockControl+0xa0>)
 8000ab6:	4293      	cmp	r3, r2
 8000ab8:	d106      	bne.n	8000ac8 <SPI_PeriClockControl+0x28>
		{
			SPI1_PCLK_EN();
 8000aba:	4b22      	ldr	r3, [pc, #136]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000abc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000abe:	4a21      	ldr	r2, [pc, #132]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000ac0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000ac4:	6453      	str	r3, [r2, #68]	; 0x44
			SPI3_PCLK_DI();
		}

	}

}
 8000ac6:	e035      	b.n	8000b34 <SPI_PeriClockControl+0x94>
		else if (pSPIx == SPI2)
 8000ac8:	687b      	ldr	r3, [r7, #4]
 8000aca:	4a1f      	ldr	r2, [pc, #124]	; (8000b48 <SPI_PeriClockControl+0xa8>)
 8000acc:	4293      	cmp	r3, r2
 8000ace:	d106      	bne.n	8000ade <SPI_PeriClockControl+0x3e>
			SPI2_PCLK_EN();
 8000ad0:	4b1c      	ldr	r3, [pc, #112]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000ad2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ad4:	4a1b      	ldr	r2, [pc, #108]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000ad6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000ada:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000adc:	e02a      	b.n	8000b34 <SPI_PeriClockControl+0x94>
		else if (pSPIx == SPI3)
 8000ade:	687b      	ldr	r3, [r7, #4]
 8000ae0:	4a1a      	ldr	r2, [pc, #104]	; (8000b4c <SPI_PeriClockControl+0xac>)
 8000ae2:	4293      	cmp	r3, r2
 8000ae4:	d126      	bne.n	8000b34 <SPI_PeriClockControl+0x94>
			SPI3_PCLK_EN();
 8000ae6:	4b17      	ldr	r3, [pc, #92]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000ae8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000aea:	4a16      	ldr	r2, [pc, #88]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000aec:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000af0:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000af2:	e01f      	b.n	8000b34 <SPI_PeriClockControl+0x94>
		if(pSPIx == SPI1)
 8000af4:	687b      	ldr	r3, [r7, #4]
 8000af6:	4a12      	ldr	r2, [pc, #72]	; (8000b40 <SPI_PeriClockControl+0xa0>)
 8000af8:	4293      	cmp	r3, r2
 8000afa:	d106      	bne.n	8000b0a <SPI_PeriClockControl+0x6a>
			SPI1_PCLK_DI();
 8000afc:	4b11      	ldr	r3, [pc, #68]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000afe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b00:	4a10      	ldr	r2, [pc, #64]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000b02:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000b06:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000b08:	e014      	b.n	8000b34 <SPI_PeriClockControl+0x94>
		else if (pSPIx == SPI2)
 8000b0a:	687b      	ldr	r3, [r7, #4]
 8000b0c:	4a0e      	ldr	r2, [pc, #56]	; (8000b48 <SPI_PeriClockControl+0xa8>)
 8000b0e:	4293      	cmp	r3, r2
 8000b10:	d106      	bne.n	8000b20 <SPI_PeriClockControl+0x80>
			SPI2_PCLK_DI();
 8000b12:	4b0c      	ldr	r3, [pc, #48]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000b14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000b16:	4a0b      	ldr	r2, [pc, #44]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000b18:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000b1c:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000b1e:	e009      	b.n	8000b34 <SPI_PeriClockControl+0x94>
		else if (pSPIx == SPI3)
 8000b20:	687b      	ldr	r3, [r7, #4]
 8000b22:	4a0a      	ldr	r2, [pc, #40]	; (8000b4c <SPI_PeriClockControl+0xac>)
 8000b24:	4293      	cmp	r3, r2
 8000b26:	d105      	bne.n	8000b34 <SPI_PeriClockControl+0x94>
			SPI3_PCLK_DI();
 8000b28:	4b06      	ldr	r3, [pc, #24]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000b2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000b2c:	4a05      	ldr	r2, [pc, #20]	; (8000b44 <SPI_PeriClockControl+0xa4>)
 8000b2e:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000b32:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000b34:	bf00      	nop
 8000b36:	370c      	adds	r7, #12
 8000b38:	46bd      	mov	sp, r7
 8000b3a:	bc80      	pop	{r7}
 8000b3c:	4770      	bx	lr
 8000b3e:	bf00      	nop
 8000b40:	40013000 	.word	0x40013000
 8000b44:	40023800 	.word	0x40023800
 8000b48:	40003800 	.word	0x40003800
 8000b4c:	40003c00 	.word	0x40003c00

08000b50 <SPI_Init>:


void SPI_Init(SPI_Handle_t *pSPIHandle)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	b084      	sub	sp, #16
 8000b54:	af00      	add	r7, sp, #0
 8000b56:	6078      	str	r0, [r7, #4]
	SPI_PeriClockControl(pSPIHandle->pSPIx, ENABLE);
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	681b      	ldr	r3, [r3, #0]
 8000b5c:	2101      	movs	r1, #1
 8000b5e:	4618      	mov	r0, r3
 8000b60:	f7ff ff9e 	bl	8000aa0 <SPI_PeriClockControl>
	//first configure the SPI_CR1 register
	 uint32_t tempreg = 0;
 8000b64:	2300      	movs	r3, #0
 8000b66:	60fb      	str	r3, [r7, #12]
	 //enable clock



	 //1. configure the device mode
	 tempreg |= pSPIHandle->SPIConfig.SPI_DeviceMode << SPI_CR1_MSTR;
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	791b      	ldrb	r3, [r3, #4]
 8000b6c:	009b      	lsls	r3, r3, #2
 8000b6e:	461a      	mov	r2, r3
 8000b70:	68fb      	ldr	r3, [r7, #12]
 8000b72:	4313      	orrs	r3, r2
 8000b74:	60fb      	str	r3, [r7, #12]

	 //2. configure the bus

	 if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_FD)
 8000b76:	687b      	ldr	r3, [r7, #4]
 8000b78:	795b      	ldrb	r3, [r3, #5]
 8000b7a:	2b01      	cmp	r3, #1
 8000b7c:	d104      	bne.n	8000b88 <SPI_Init+0x38>
	 {
		 //bidi mode should be cleared
		 tempreg &= ~(1<<SPI_CR1_BIDIMODE);
 8000b7e:	68fb      	ldr	r3, [r7, #12]
 8000b80:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000b84:	60fb      	str	r3, [r7, #12]
 8000b86:	e014      	b.n	8000bb2 <SPI_Init+0x62>
	 }
	 else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_HD)
 8000b88:	687b      	ldr	r3, [r7, #4]
 8000b8a:	795b      	ldrb	r3, [r3, #5]
 8000b8c:	2b02      	cmp	r3, #2
 8000b8e:	d104      	bne.n	8000b9a <SPI_Init+0x4a>
	 {
		 //bidi mode should be set
		 tempreg |= (1<<SPI_CR1_BIDIMODE);
 8000b90:	68fb      	ldr	r3, [r7, #12]
 8000b92:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000b96:	60fb      	str	r3, [r7, #12]
 8000b98:	e00b      	b.n	8000bb2 <SPI_Init+0x62>
	 }
	 else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_SIMPLEX_RXONLY)
 8000b9a:	687b      	ldr	r3, [r7, #4]
 8000b9c:	795b      	ldrb	r3, [r3, #5]
 8000b9e:	2b03      	cmp	r3, #3
 8000ba0:	d107      	bne.n	8000bb2 <SPI_Init+0x62>
	 {
		 //bidi mode should be cleared
		 tempreg &= ~(1<<SPI_CR1_BIDIMODE);
 8000ba2:	68fb      	ldr	r3, [r7, #12]
 8000ba4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000ba8:	60fb      	str	r3, [r7, #12]
		 //rxonly mode should be cleared
		 tempreg |= (1<<SPI_CR1_RXONLY);
 8000baa:	68fb      	ldr	r3, [r7, #12]
 8000bac:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000bb0:	60fb      	str	r3, [r7, #12]
	 }

	 //3. Configure the spi clock speed(baud rate)
	 tempreg |= pSPIHandle->SPIConfig.SPI_SclkSpeed << SPI_CR1_BR ;
 8000bb2:	687b      	ldr	r3, [r7, #4]
 8000bb4:	799b      	ldrb	r3, [r3, #6]
 8000bb6:	00db      	lsls	r3, r3, #3
 8000bb8:	461a      	mov	r2, r3
 8000bba:	68fb      	ldr	r3, [r7, #12]
 8000bbc:	4313      	orrs	r3, r2
 8000bbe:	60fb      	str	r3, [r7, #12]

	 //4. Configure the DFF
	 tempreg |= pSPIHandle->SPIConfig.SPI_DFF << SPI_CR1_DFF;
 8000bc0:	687b      	ldr	r3, [r7, #4]
 8000bc2:	79db      	ldrb	r3, [r3, #7]
 8000bc4:	02db      	lsls	r3, r3, #11
 8000bc6:	461a      	mov	r2, r3
 8000bc8:	68fb      	ldr	r3, [r7, #12]
 8000bca:	4313      	orrs	r3, r2
 8000bcc:	60fb      	str	r3, [r7, #12]

	 //5. Configure the CPOL
	 tempreg |= pSPIHandle->SPIConfig.SPI_CPOL << SPI_CR1_CPOL;
 8000bce:	687b      	ldr	r3, [r7, #4]
 8000bd0:	7a1b      	ldrb	r3, [r3, #8]
 8000bd2:	005b      	lsls	r3, r3, #1
 8000bd4:	461a      	mov	r2, r3
 8000bd6:	68fb      	ldr	r3, [r7, #12]
 8000bd8:	4313      	orrs	r3, r2
 8000bda:	60fb      	str	r3, [r7, #12]

	 //6. Configure the CPHA
	 tempreg |= pSPIHandle->SPIConfig.SPI_CPHA << SPI_CR1_CPHA;
 8000bdc:	687b      	ldr	r3, [r7, #4]
 8000bde:	7a5b      	ldrb	r3, [r3, #9]
 8000be0:	461a      	mov	r2, r3
 8000be2:	68fb      	ldr	r3, [r7, #12]
 8000be4:	4313      	orrs	r3, r2
 8000be6:	60fb      	str	r3, [r7, #12]

	 tempreg |= pSPIHandle->SPIConfig.SPI_SSM << SPI_CR1_SSM;
 8000be8:	687b      	ldr	r3, [r7, #4]
 8000bea:	7a9b      	ldrb	r3, [r3, #10]
 8000bec:	025b      	lsls	r3, r3, #9
 8000bee:	461a      	mov	r2, r3
 8000bf0:	68fb      	ldr	r3, [r7, #12]
 8000bf2:	4313      	orrs	r3, r2
 8000bf4:	60fb      	str	r3, [r7, #12]
	 pSPIHandle->pSPIx->CR1 = tempreg;
 8000bf6:	687b      	ldr	r3, [r7, #4]
 8000bf8:	681b      	ldr	r3, [r3, #0]
 8000bfa:	68fa      	ldr	r2, [r7, #12]
 8000bfc:	601a      	str	r2, [r3, #0]

}
 8000bfe:	bf00      	nop
 8000c00:	3710      	adds	r7, #16
 8000c02:	46bd      	mov	sp, r7
 8000c04:	bd80      	pop	{r7, pc}

08000c06 <SPI_GetFlagStatus>:
//	}
}


uint8_t SPI_GetFlagStatus(SPI_RegDef_t *pSPIx, uint32_t FlagName)
{
 8000c06:	b480      	push	{r7}
 8000c08:	b083      	sub	sp, #12
 8000c0a:	af00      	add	r7, sp, #0
 8000c0c:	6078      	str	r0, [r7, #4]
 8000c0e:	6039      	str	r1, [r7, #0]
	if(pSPIx->SR & FlagName)
 8000c10:	687b      	ldr	r3, [r7, #4]
 8000c12:	689a      	ldr	r2, [r3, #8]
 8000c14:	683b      	ldr	r3, [r7, #0]
 8000c16:	4013      	ands	r3, r2
 8000c18:	2b00      	cmp	r3, #0
 8000c1a:	d001      	beq.n	8000c20 <SPI_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 8000c1c:	2301      	movs	r3, #1
 8000c1e:	e000      	b.n	8000c22 <SPI_GetFlagStatus+0x1c>
	}
	return FLAG_RESET;
 8000c20:	2300      	movs	r3, #0
}
 8000c22:	4618      	mov	r0, r3
 8000c24:	370c      	adds	r7, #12
 8000c26:	46bd      	mov	sp, r7
 8000c28:	bc80      	pop	{r7}
 8000c2a:	4770      	bx	lr

08000c2c <SPI_SendData>:


void SPI_SendData(SPI_RegDef_t *pSPIx, uint8_t *pTxBuffer, uint32_t Len)
{
 8000c2c:	b580      	push	{r7, lr}
 8000c2e:	b084      	sub	sp, #16
 8000c30:	af00      	add	r7, sp, #0
 8000c32:	60f8      	str	r0, [r7, #12]
 8000c34:	60b9      	str	r1, [r7, #8]
 8000c36:	607a      	str	r2, [r7, #4]
	while(Len > 0)
 8000c38:	e026      	b.n	8000c88 <SPI_SendData+0x5c>
	{
		//1. wait until TXE is set
		while(SPI_GetFlagStatus(pSPIx, SPI_TXE_FLAG) == FLAG_RESET)
		{
			printf("00\n");
 8000c3a:	4817      	ldr	r0, [pc, #92]	; (8000c98 <SPI_SendData+0x6c>)
 8000c3c:	f000 f95e 	bl	8000efc <puts>
		while(SPI_GetFlagStatus(pSPIx, SPI_TXE_FLAG) == FLAG_RESET)
 8000c40:	2102      	movs	r1, #2
 8000c42:	68f8      	ldr	r0, [r7, #12]
 8000c44:	f7ff ffdf 	bl	8000c06 <SPI_GetFlagStatus>
 8000c48:	4603      	mov	r3, r0
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	d0f5      	beq.n	8000c3a <SPI_SendData+0xe>
		}

		//2. CHECK DFF IN CR1
		if(pSPIx->CR1 & (1<<SPI_CR1_DFF))
 8000c4e:	68fb      	ldr	r3, [r7, #12]
 8000c50:	681b      	ldr	r3, [r3, #0]
 8000c52:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000c56:	2b00      	cmp	r3, #0
 8000c58:	d00b      	beq.n	8000c72 <SPI_SendData+0x46>
		{
			//16bit dff
			//load data to DR
			pSPIx->DR = *((uint16_t*)pTxBuffer);
 8000c5a:	68bb      	ldr	r3, [r7, #8]
 8000c5c:	881b      	ldrh	r3, [r3, #0]
 8000c5e:	461a      	mov	r2, r3
 8000c60:	68fb      	ldr	r3, [r7, #12]
 8000c62:	60da      	str	r2, [r3, #12]
			Len -= 2;
 8000c64:	687b      	ldr	r3, [r7, #4]
 8000c66:	3b02      	subs	r3, #2
 8000c68:	607b      	str	r3, [r7, #4]
			(uint16_t*)pTxBuffer++;
 8000c6a:	68bb      	ldr	r3, [r7, #8]
 8000c6c:	3301      	adds	r3, #1
 8000c6e:	60bb      	str	r3, [r7, #8]
 8000c70:	e00a      	b.n	8000c88 <SPI_SendData+0x5c>
		}
		else
		{
			pSPIx->DR = *(pTxBuffer);
 8000c72:	68bb      	ldr	r3, [r7, #8]
 8000c74:	781b      	ldrb	r3, [r3, #0]
 8000c76:	461a      	mov	r2, r3
 8000c78:	68fb      	ldr	r3, [r7, #12]
 8000c7a:	60da      	str	r2, [r3, #12]
			Len -= 1;
 8000c7c:	687b      	ldr	r3, [r7, #4]
 8000c7e:	3b01      	subs	r3, #1
 8000c80:	607b      	str	r3, [r7, #4]
			pTxBuffer++;
 8000c82:	68bb      	ldr	r3, [r7, #8]
 8000c84:	3301      	adds	r3, #1
 8000c86:	60bb      	str	r3, [r7, #8]
	while(Len > 0)
 8000c88:	687b      	ldr	r3, [r7, #4]
 8000c8a:	2b00      	cmp	r3, #0
 8000c8c:	d1d8      	bne.n	8000c40 <SPI_SendData+0x14>
		}

	}
}
 8000c8e:	bf00      	nop
 8000c90:	bf00      	nop
 8000c92:	3710      	adds	r7, #16
 8000c94:	46bd      	mov	sp, r7
 8000c96:	bd80      	pop	{r7, pc}
 8000c98:	080023c8 	.word	0x080023c8

08000c9c <SPI_ReceiveData>:

void SPI_ReceiveData(SPI_RegDef_t *pSPIx, uint8_t *pRxBuffer, uint32_t Len)
{
 8000c9c:	b580      	push	{r7, lr}
 8000c9e:	b084      	sub	sp, #16
 8000ca0:	af00      	add	r7, sp, #0
 8000ca2:	60f8      	str	r0, [r7, #12]
 8000ca4:	60b9      	str	r1, [r7, #8]
 8000ca6:	607a      	str	r2, [r7, #4]
	while(Len > 0)
 8000ca8:	e030      	b.n	8000d0c <SPI_ReceiveData+0x70>
	{
		printf("1\n");
 8000caa:	481c      	ldr	r0, [pc, #112]	; (8000d1c <SPI_ReceiveData+0x80>)
 8000cac:	f000 f926 	bl	8000efc <puts>
		//1. wait until RXNE is set

		while(SPI_GetFlagStatus(pSPIx, SPI_RXNE_FLAG) == FLAG_RESET)
 8000cb0:	e002      	b.n	8000cb8 <SPI_ReceiveData+0x1c>
		{
			printf("0\n");
 8000cb2:	481b      	ldr	r0, [pc, #108]	; (8000d20 <SPI_ReceiveData+0x84>)
 8000cb4:	f000 f922 	bl	8000efc <puts>
		while(SPI_GetFlagStatus(pSPIx, SPI_RXNE_FLAG) == FLAG_RESET)
 8000cb8:	2101      	movs	r1, #1
 8000cba:	68f8      	ldr	r0, [r7, #12]
 8000cbc:	f7ff ffa3 	bl	8000c06 <SPI_GetFlagStatus>
 8000cc0:	4603      	mov	r3, r0
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d0f5      	beq.n	8000cb2 <SPI_ReceiveData+0x16>
		}
		printf("2\n");
 8000cc6:	4817      	ldr	r0, [pc, #92]	; (8000d24 <SPI_ReceiveData+0x88>)
 8000cc8:	f000 f918 	bl	8000efc <puts>
		//2. CHECK DFF IN CR1
		if(pSPIx->CR1 & (1<<SPI_CR1_DFF))
 8000ccc:	68fb      	ldr	r3, [r7, #12]
 8000cce:	681b      	ldr	r3, [r3, #0]
 8000cd0:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000cd4:	2b00      	cmp	r3, #0
 8000cd6:	d00b      	beq.n	8000cf0 <SPI_ReceiveData+0x54>
		{
			//16bit dff
			//load data from DR to Rxbuffer
			*((uint16_t*)pRxBuffer) = pSPIx->DR;
 8000cd8:	68fb      	ldr	r3, [r7, #12]
 8000cda:	68db      	ldr	r3, [r3, #12]
 8000cdc:	b29a      	uxth	r2, r3
 8000cde:	68bb      	ldr	r3, [r7, #8]
 8000ce0:	801a      	strh	r2, [r3, #0]
			Len -= 2;
 8000ce2:	687b      	ldr	r3, [r7, #4]
 8000ce4:	3b02      	subs	r3, #2
 8000ce6:	607b      	str	r3, [r7, #4]
			(uint16_t*)pRxBuffer++;
 8000ce8:	68bb      	ldr	r3, [r7, #8]
 8000cea:	3301      	adds	r3, #1
 8000cec:	60bb      	str	r3, [r7, #8]
 8000cee:	e00d      	b.n	8000d0c <SPI_ReceiveData+0x70>
		}
		else
		{
			printf("3\n");
 8000cf0:	480d      	ldr	r0, [pc, #52]	; (8000d28 <SPI_ReceiveData+0x8c>)
 8000cf2:	f000 f903 	bl	8000efc <puts>
			*(pRxBuffer) = pSPIx->DR;
 8000cf6:	68fb      	ldr	r3, [r7, #12]
 8000cf8:	68db      	ldr	r3, [r3, #12]
 8000cfa:	b2da      	uxtb	r2, r3
 8000cfc:	68bb      	ldr	r3, [r7, #8]
 8000cfe:	701a      	strb	r2, [r3, #0]
			Len -= 1;
 8000d00:	687b      	ldr	r3, [r7, #4]
 8000d02:	3b01      	subs	r3, #1
 8000d04:	607b      	str	r3, [r7, #4]
			pRxBuffer++;
 8000d06:	68bb      	ldr	r3, [r7, #8]
 8000d08:	3301      	adds	r3, #1
 8000d0a:	60bb      	str	r3, [r7, #8]
	while(Len > 0)
 8000d0c:	687b      	ldr	r3, [r7, #4]
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d1cb      	bne.n	8000caa <SPI_ReceiveData+0xe>
		}

	}
}
 8000d12:	bf00      	nop
 8000d14:	bf00      	nop
 8000d16:	3710      	adds	r7, #16
 8000d18:	46bd      	mov	sp, r7
 8000d1a:	bd80      	pop	{r7, pc}
 8000d1c:	080023cc 	.word	0x080023cc
 8000d20:	080023d0 	.word	0x080023d0
 8000d24:	080023d4 	.word	0x080023d4
 8000d28:	080023d8 	.word	0x080023d8

08000d2c <SPI_PeripheralControl>:

void SPI_PeripheralControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi)
{
 8000d2c:	b480      	push	{r7}
 8000d2e:	b083      	sub	sp, #12
 8000d30:	af00      	add	r7, sp, #0
 8000d32:	6078      	str	r0, [r7, #4]
 8000d34:	460b      	mov	r3, r1
 8000d36:	70fb      	strb	r3, [r7, #3]
	if(EnorDi)
 8000d38:	78fb      	ldrb	r3, [r7, #3]
 8000d3a:	2b00      	cmp	r3, #0
 8000d3c:	d006      	beq.n	8000d4c <SPI_PeripheralControl+0x20>
	{
		pSPIx->CR1 |= (1 << SPI_CR1_SPE);
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	681b      	ldr	r3, [r3, #0]
 8000d42:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000d46:	687b      	ldr	r3, [r7, #4]
 8000d48:	601a      	str	r2, [r3, #0]
	}
	else
	{
		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
	}
}
 8000d4a:	e005      	b.n	8000d58 <SPI_PeripheralControl+0x2c>
		pSPIx->CR1 &= ~(1 << SPI_CR1_SPE);
 8000d4c:	687b      	ldr	r3, [r7, #4]
 8000d4e:	681b      	ldr	r3, [r3, #0]
 8000d50:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000d54:	687b      	ldr	r3, [r7, #4]
 8000d56:	601a      	str	r2, [r3, #0]
}
 8000d58:	bf00      	nop
 8000d5a:	370c      	adds	r7, #12
 8000d5c:	46bd      	mov	sp, r7
 8000d5e:	bc80      	pop	{r7}
 8000d60:	4770      	bx	lr

08000d62 <SPI_SSOEConfig>:
		pSPIx->CR1 &= ~(1 << SPI_CR1_SSI);
	}
}

void SPI_SSOEConfig(SPI_RegDef_t *pSPIx, uint8_t EnorDi)
{
 8000d62:	b480      	push	{r7}
 8000d64:	b083      	sub	sp, #12
 8000d66:	af00      	add	r7, sp, #0
 8000d68:	6078      	str	r0, [r7, #4]
 8000d6a:	460b      	mov	r3, r1
 8000d6c:	70fb      	strb	r3, [r7, #3]
	if(EnorDi)
 8000d6e:	78fb      	ldrb	r3, [r7, #3]
 8000d70:	2b00      	cmp	r3, #0
 8000d72:	d006      	beq.n	8000d82 <SPI_SSOEConfig+0x20>
	{
		pSPIx->CR2 |= (1 << SPI_CR2_SSOE);
 8000d74:	687b      	ldr	r3, [r7, #4]
 8000d76:	685b      	ldr	r3, [r3, #4]
 8000d78:	f043 0204 	orr.w	r2, r3, #4
 8000d7c:	687b      	ldr	r3, [r7, #4]
 8000d7e:	605a      	str	r2, [r3, #4]
	}
	else
	{
		pSPIx->CR2 &= ~(1 << SPI_CR2_SSOE);
	}
}
 8000d80:	e005      	b.n	8000d8e <SPI_SSOEConfig+0x2c>
		pSPIx->CR2 &= ~(1 << SPI_CR2_SSOE);
 8000d82:	687b      	ldr	r3, [r7, #4]
 8000d84:	685b      	ldr	r3, [r3, #4]
 8000d86:	f023 0204 	bic.w	r2, r3, #4
 8000d8a:	687b      	ldr	r3, [r7, #4]
 8000d8c:	605a      	str	r2, [r3, #4]
}
 8000d8e:	bf00      	nop
 8000d90:	370c      	adds	r7, #12
 8000d92:	46bd      	mov	sp, r7
 8000d94:	bc80      	pop	{r7}
 8000d96:	4770      	bx	lr

08000d98 <__libc_init_array>:
 8000d98:	b570      	push	{r4, r5, r6, lr}
 8000d9a:	4d0d      	ldr	r5, [pc, #52]	; (8000dd0 <__libc_init_array+0x38>)
 8000d9c:	4c0d      	ldr	r4, [pc, #52]	; (8000dd4 <__libc_init_array+0x3c>)
 8000d9e:	1b64      	subs	r4, r4, r5
 8000da0:	10a4      	asrs	r4, r4, #2
 8000da2:	2600      	movs	r6, #0
 8000da4:	42a6      	cmp	r6, r4
 8000da6:	d109      	bne.n	8000dbc <__libc_init_array+0x24>
 8000da8:	4d0b      	ldr	r5, [pc, #44]	; (8000dd8 <__libc_init_array+0x40>)
 8000daa:	4c0c      	ldr	r4, [pc, #48]	; (8000ddc <__libc_init_array+0x44>)
 8000dac:	f001 fae2 	bl	8002374 <_init>
 8000db0:	1b64      	subs	r4, r4, r5
 8000db2:	10a4      	asrs	r4, r4, #2
 8000db4:	2600      	movs	r6, #0
 8000db6:	42a6      	cmp	r6, r4
 8000db8:	d105      	bne.n	8000dc6 <__libc_init_array+0x2e>
 8000dba:	bd70      	pop	{r4, r5, r6, pc}
 8000dbc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000dc0:	4798      	blx	r3
 8000dc2:	3601      	adds	r6, #1
 8000dc4:	e7ee      	b.n	8000da4 <__libc_init_array+0xc>
 8000dc6:	f855 3b04 	ldr.w	r3, [r5], #4
 8000dca:	4798      	blx	r3
 8000dcc:	3601      	adds	r6, #1
 8000dce:	e7f2      	b.n	8000db6 <__libc_init_array+0x1e>
 8000dd0:	08002490 	.word	0x08002490
 8000dd4:	08002490 	.word	0x08002490
 8000dd8:	08002490 	.word	0x08002490
 8000ddc:	08002494 	.word	0x08002494

08000de0 <memset>:
 8000de0:	4402      	add	r2, r0
 8000de2:	4603      	mov	r3, r0
 8000de4:	4293      	cmp	r3, r2
 8000de6:	d100      	bne.n	8000dea <memset+0xa>
 8000de8:	4770      	bx	lr
 8000dea:	f803 1b01 	strb.w	r1, [r3], #1
 8000dee:	e7f9      	b.n	8000de4 <memset+0x4>

08000df0 <iprintf>:
 8000df0:	b40f      	push	{r0, r1, r2, r3}
 8000df2:	4b0a      	ldr	r3, [pc, #40]	; (8000e1c <iprintf+0x2c>)
 8000df4:	b513      	push	{r0, r1, r4, lr}
 8000df6:	681c      	ldr	r4, [r3, #0]
 8000df8:	b124      	cbz	r4, 8000e04 <iprintf+0x14>
 8000dfa:	69a3      	ldr	r3, [r4, #24]
 8000dfc:	b913      	cbnz	r3, 8000e04 <iprintf+0x14>
 8000dfe:	4620      	mov	r0, r4
 8000e00:	f000 fa5a 	bl	80012b8 <__sinit>
 8000e04:	ab05      	add	r3, sp, #20
 8000e06:	9a04      	ldr	r2, [sp, #16]
 8000e08:	68a1      	ldr	r1, [r4, #8]
 8000e0a:	9301      	str	r3, [sp, #4]
 8000e0c:	4620      	mov	r0, r4
 8000e0e:	f000 fc5f 	bl	80016d0 <_vfiprintf_r>
 8000e12:	b002      	add	sp, #8
 8000e14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000e18:	b004      	add	sp, #16
 8000e1a:	4770      	bx	lr
 8000e1c:	20000000 	.word	0x20000000

08000e20 <_puts_r>:
 8000e20:	b570      	push	{r4, r5, r6, lr}
 8000e22:	460e      	mov	r6, r1
 8000e24:	4605      	mov	r5, r0
 8000e26:	b118      	cbz	r0, 8000e30 <_puts_r+0x10>
 8000e28:	6983      	ldr	r3, [r0, #24]
 8000e2a:	b90b      	cbnz	r3, 8000e30 <_puts_r+0x10>
 8000e2c:	f000 fa44 	bl	80012b8 <__sinit>
 8000e30:	69ab      	ldr	r3, [r5, #24]
 8000e32:	68ac      	ldr	r4, [r5, #8]
 8000e34:	b913      	cbnz	r3, 8000e3c <_puts_r+0x1c>
 8000e36:	4628      	mov	r0, r5
 8000e38:	f000 fa3e 	bl	80012b8 <__sinit>
 8000e3c:	4b2c      	ldr	r3, [pc, #176]	; (8000ef0 <_puts_r+0xd0>)
 8000e3e:	429c      	cmp	r4, r3
 8000e40:	d120      	bne.n	8000e84 <_puts_r+0x64>
 8000e42:	686c      	ldr	r4, [r5, #4]
 8000e44:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000e46:	07db      	lsls	r3, r3, #31
 8000e48:	d405      	bmi.n	8000e56 <_puts_r+0x36>
 8000e4a:	89a3      	ldrh	r3, [r4, #12]
 8000e4c:	0598      	lsls	r0, r3, #22
 8000e4e:	d402      	bmi.n	8000e56 <_puts_r+0x36>
 8000e50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000e52:	f000 facf 	bl	80013f4 <__retarget_lock_acquire_recursive>
 8000e56:	89a3      	ldrh	r3, [r4, #12]
 8000e58:	0719      	lsls	r1, r3, #28
 8000e5a:	d51d      	bpl.n	8000e98 <_puts_r+0x78>
 8000e5c:	6923      	ldr	r3, [r4, #16]
 8000e5e:	b1db      	cbz	r3, 8000e98 <_puts_r+0x78>
 8000e60:	3e01      	subs	r6, #1
 8000e62:	68a3      	ldr	r3, [r4, #8]
 8000e64:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000e68:	3b01      	subs	r3, #1
 8000e6a:	60a3      	str	r3, [r4, #8]
 8000e6c:	bb39      	cbnz	r1, 8000ebe <_puts_r+0x9e>
 8000e6e:	2b00      	cmp	r3, #0
 8000e70:	da38      	bge.n	8000ee4 <_puts_r+0xc4>
 8000e72:	4622      	mov	r2, r4
 8000e74:	210a      	movs	r1, #10
 8000e76:	4628      	mov	r0, r5
 8000e78:	f000 f848 	bl	8000f0c <__swbuf_r>
 8000e7c:	3001      	adds	r0, #1
 8000e7e:	d011      	beq.n	8000ea4 <_puts_r+0x84>
 8000e80:	250a      	movs	r5, #10
 8000e82:	e011      	b.n	8000ea8 <_puts_r+0x88>
 8000e84:	4b1b      	ldr	r3, [pc, #108]	; (8000ef4 <_puts_r+0xd4>)
 8000e86:	429c      	cmp	r4, r3
 8000e88:	d101      	bne.n	8000e8e <_puts_r+0x6e>
 8000e8a:	68ac      	ldr	r4, [r5, #8]
 8000e8c:	e7da      	b.n	8000e44 <_puts_r+0x24>
 8000e8e:	4b1a      	ldr	r3, [pc, #104]	; (8000ef8 <_puts_r+0xd8>)
 8000e90:	429c      	cmp	r4, r3
 8000e92:	bf08      	it	eq
 8000e94:	68ec      	ldreq	r4, [r5, #12]
 8000e96:	e7d5      	b.n	8000e44 <_puts_r+0x24>
 8000e98:	4621      	mov	r1, r4
 8000e9a:	4628      	mov	r0, r5
 8000e9c:	f000 f888 	bl	8000fb0 <__swsetup_r>
 8000ea0:	2800      	cmp	r0, #0
 8000ea2:	d0dd      	beq.n	8000e60 <_puts_r+0x40>
 8000ea4:	f04f 35ff 	mov.w	r5, #4294967295
 8000ea8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000eaa:	07da      	lsls	r2, r3, #31
 8000eac:	d405      	bmi.n	8000eba <_puts_r+0x9a>
 8000eae:	89a3      	ldrh	r3, [r4, #12]
 8000eb0:	059b      	lsls	r3, r3, #22
 8000eb2:	d402      	bmi.n	8000eba <_puts_r+0x9a>
 8000eb4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000eb6:	f000 fa9e 	bl	80013f6 <__retarget_lock_release_recursive>
 8000eba:	4628      	mov	r0, r5
 8000ebc:	bd70      	pop	{r4, r5, r6, pc}
 8000ebe:	2b00      	cmp	r3, #0
 8000ec0:	da04      	bge.n	8000ecc <_puts_r+0xac>
 8000ec2:	69a2      	ldr	r2, [r4, #24]
 8000ec4:	429a      	cmp	r2, r3
 8000ec6:	dc06      	bgt.n	8000ed6 <_puts_r+0xb6>
 8000ec8:	290a      	cmp	r1, #10
 8000eca:	d004      	beq.n	8000ed6 <_puts_r+0xb6>
 8000ecc:	6823      	ldr	r3, [r4, #0]
 8000ece:	1c5a      	adds	r2, r3, #1
 8000ed0:	6022      	str	r2, [r4, #0]
 8000ed2:	7019      	strb	r1, [r3, #0]
 8000ed4:	e7c5      	b.n	8000e62 <_puts_r+0x42>
 8000ed6:	4622      	mov	r2, r4
 8000ed8:	4628      	mov	r0, r5
 8000eda:	f000 f817 	bl	8000f0c <__swbuf_r>
 8000ede:	3001      	adds	r0, #1
 8000ee0:	d1bf      	bne.n	8000e62 <_puts_r+0x42>
 8000ee2:	e7df      	b.n	8000ea4 <_puts_r+0x84>
 8000ee4:	6823      	ldr	r3, [r4, #0]
 8000ee6:	250a      	movs	r5, #10
 8000ee8:	1c5a      	adds	r2, r3, #1
 8000eea:	6022      	str	r2, [r4, #0]
 8000eec:	701d      	strb	r5, [r3, #0]
 8000eee:	e7db      	b.n	8000ea8 <_puts_r+0x88>
 8000ef0:	08002400 	.word	0x08002400
 8000ef4:	08002420 	.word	0x08002420
 8000ef8:	080023e0 	.word	0x080023e0

08000efc <puts>:
 8000efc:	4b02      	ldr	r3, [pc, #8]	; (8000f08 <puts+0xc>)
 8000efe:	4601      	mov	r1, r0
 8000f00:	6818      	ldr	r0, [r3, #0]
 8000f02:	f7ff bf8d 	b.w	8000e20 <_puts_r>
 8000f06:	bf00      	nop
 8000f08:	20000000 	.word	0x20000000

08000f0c <__swbuf_r>:
 8000f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f0e:	460e      	mov	r6, r1
 8000f10:	4614      	mov	r4, r2
 8000f12:	4605      	mov	r5, r0
 8000f14:	b118      	cbz	r0, 8000f1e <__swbuf_r+0x12>
 8000f16:	6983      	ldr	r3, [r0, #24]
 8000f18:	b90b      	cbnz	r3, 8000f1e <__swbuf_r+0x12>
 8000f1a:	f000 f9cd 	bl	80012b8 <__sinit>
 8000f1e:	4b21      	ldr	r3, [pc, #132]	; (8000fa4 <__swbuf_r+0x98>)
 8000f20:	429c      	cmp	r4, r3
 8000f22:	d12b      	bne.n	8000f7c <__swbuf_r+0x70>
 8000f24:	686c      	ldr	r4, [r5, #4]
 8000f26:	69a3      	ldr	r3, [r4, #24]
 8000f28:	60a3      	str	r3, [r4, #8]
 8000f2a:	89a3      	ldrh	r3, [r4, #12]
 8000f2c:	071a      	lsls	r2, r3, #28
 8000f2e:	d52f      	bpl.n	8000f90 <__swbuf_r+0x84>
 8000f30:	6923      	ldr	r3, [r4, #16]
 8000f32:	b36b      	cbz	r3, 8000f90 <__swbuf_r+0x84>
 8000f34:	6923      	ldr	r3, [r4, #16]
 8000f36:	6820      	ldr	r0, [r4, #0]
 8000f38:	1ac0      	subs	r0, r0, r3
 8000f3a:	6963      	ldr	r3, [r4, #20]
 8000f3c:	b2f6      	uxtb	r6, r6
 8000f3e:	4283      	cmp	r3, r0
 8000f40:	4637      	mov	r7, r6
 8000f42:	dc04      	bgt.n	8000f4e <__swbuf_r+0x42>
 8000f44:	4621      	mov	r1, r4
 8000f46:	4628      	mov	r0, r5
 8000f48:	f000 f922 	bl	8001190 <_fflush_r>
 8000f4c:	bb30      	cbnz	r0, 8000f9c <__swbuf_r+0x90>
 8000f4e:	68a3      	ldr	r3, [r4, #8]
 8000f50:	3b01      	subs	r3, #1
 8000f52:	60a3      	str	r3, [r4, #8]
 8000f54:	6823      	ldr	r3, [r4, #0]
 8000f56:	1c5a      	adds	r2, r3, #1
 8000f58:	6022      	str	r2, [r4, #0]
 8000f5a:	701e      	strb	r6, [r3, #0]
 8000f5c:	6963      	ldr	r3, [r4, #20]
 8000f5e:	3001      	adds	r0, #1
 8000f60:	4283      	cmp	r3, r0
 8000f62:	d004      	beq.n	8000f6e <__swbuf_r+0x62>
 8000f64:	89a3      	ldrh	r3, [r4, #12]
 8000f66:	07db      	lsls	r3, r3, #31
 8000f68:	d506      	bpl.n	8000f78 <__swbuf_r+0x6c>
 8000f6a:	2e0a      	cmp	r6, #10
 8000f6c:	d104      	bne.n	8000f78 <__swbuf_r+0x6c>
 8000f6e:	4621      	mov	r1, r4
 8000f70:	4628      	mov	r0, r5
 8000f72:	f000 f90d 	bl	8001190 <_fflush_r>
 8000f76:	b988      	cbnz	r0, 8000f9c <__swbuf_r+0x90>
 8000f78:	4638      	mov	r0, r7
 8000f7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f7c:	4b0a      	ldr	r3, [pc, #40]	; (8000fa8 <__swbuf_r+0x9c>)
 8000f7e:	429c      	cmp	r4, r3
 8000f80:	d101      	bne.n	8000f86 <__swbuf_r+0x7a>
 8000f82:	68ac      	ldr	r4, [r5, #8]
 8000f84:	e7cf      	b.n	8000f26 <__swbuf_r+0x1a>
 8000f86:	4b09      	ldr	r3, [pc, #36]	; (8000fac <__swbuf_r+0xa0>)
 8000f88:	429c      	cmp	r4, r3
 8000f8a:	bf08      	it	eq
 8000f8c:	68ec      	ldreq	r4, [r5, #12]
 8000f8e:	e7ca      	b.n	8000f26 <__swbuf_r+0x1a>
 8000f90:	4621      	mov	r1, r4
 8000f92:	4628      	mov	r0, r5
 8000f94:	f000 f80c 	bl	8000fb0 <__swsetup_r>
 8000f98:	2800      	cmp	r0, #0
 8000f9a:	d0cb      	beq.n	8000f34 <__swbuf_r+0x28>
 8000f9c:	f04f 37ff 	mov.w	r7, #4294967295
 8000fa0:	e7ea      	b.n	8000f78 <__swbuf_r+0x6c>
 8000fa2:	bf00      	nop
 8000fa4:	08002400 	.word	0x08002400
 8000fa8:	08002420 	.word	0x08002420
 8000fac:	080023e0 	.word	0x080023e0

08000fb0 <__swsetup_r>:
 8000fb0:	4b32      	ldr	r3, [pc, #200]	; (800107c <__swsetup_r+0xcc>)
 8000fb2:	b570      	push	{r4, r5, r6, lr}
 8000fb4:	681d      	ldr	r5, [r3, #0]
 8000fb6:	4606      	mov	r6, r0
 8000fb8:	460c      	mov	r4, r1
 8000fba:	b125      	cbz	r5, 8000fc6 <__swsetup_r+0x16>
 8000fbc:	69ab      	ldr	r3, [r5, #24]
 8000fbe:	b913      	cbnz	r3, 8000fc6 <__swsetup_r+0x16>
 8000fc0:	4628      	mov	r0, r5
 8000fc2:	f000 f979 	bl	80012b8 <__sinit>
 8000fc6:	4b2e      	ldr	r3, [pc, #184]	; (8001080 <__swsetup_r+0xd0>)
 8000fc8:	429c      	cmp	r4, r3
 8000fca:	d10f      	bne.n	8000fec <__swsetup_r+0x3c>
 8000fcc:	686c      	ldr	r4, [r5, #4]
 8000fce:	89a3      	ldrh	r3, [r4, #12]
 8000fd0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000fd4:	0719      	lsls	r1, r3, #28
 8000fd6:	d42c      	bmi.n	8001032 <__swsetup_r+0x82>
 8000fd8:	06dd      	lsls	r5, r3, #27
 8000fda:	d411      	bmi.n	8001000 <__swsetup_r+0x50>
 8000fdc:	2309      	movs	r3, #9
 8000fde:	6033      	str	r3, [r6, #0]
 8000fe0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000fe4:	81a3      	strh	r3, [r4, #12]
 8000fe6:	f04f 30ff 	mov.w	r0, #4294967295
 8000fea:	e03e      	b.n	800106a <__swsetup_r+0xba>
 8000fec:	4b25      	ldr	r3, [pc, #148]	; (8001084 <__swsetup_r+0xd4>)
 8000fee:	429c      	cmp	r4, r3
 8000ff0:	d101      	bne.n	8000ff6 <__swsetup_r+0x46>
 8000ff2:	68ac      	ldr	r4, [r5, #8]
 8000ff4:	e7eb      	b.n	8000fce <__swsetup_r+0x1e>
 8000ff6:	4b24      	ldr	r3, [pc, #144]	; (8001088 <__swsetup_r+0xd8>)
 8000ff8:	429c      	cmp	r4, r3
 8000ffa:	bf08      	it	eq
 8000ffc:	68ec      	ldreq	r4, [r5, #12]
 8000ffe:	e7e6      	b.n	8000fce <__swsetup_r+0x1e>
 8001000:	0758      	lsls	r0, r3, #29
 8001002:	d512      	bpl.n	800102a <__swsetup_r+0x7a>
 8001004:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001006:	b141      	cbz	r1, 800101a <__swsetup_r+0x6a>
 8001008:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800100c:	4299      	cmp	r1, r3
 800100e:	d002      	beq.n	8001016 <__swsetup_r+0x66>
 8001010:	4630      	mov	r0, r6
 8001012:	f000 fa57 	bl	80014c4 <_free_r>
 8001016:	2300      	movs	r3, #0
 8001018:	6363      	str	r3, [r4, #52]	; 0x34
 800101a:	89a3      	ldrh	r3, [r4, #12]
 800101c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001020:	81a3      	strh	r3, [r4, #12]
 8001022:	2300      	movs	r3, #0
 8001024:	6063      	str	r3, [r4, #4]
 8001026:	6923      	ldr	r3, [r4, #16]
 8001028:	6023      	str	r3, [r4, #0]
 800102a:	89a3      	ldrh	r3, [r4, #12]
 800102c:	f043 0308 	orr.w	r3, r3, #8
 8001030:	81a3      	strh	r3, [r4, #12]
 8001032:	6923      	ldr	r3, [r4, #16]
 8001034:	b94b      	cbnz	r3, 800104a <__swsetup_r+0x9a>
 8001036:	89a3      	ldrh	r3, [r4, #12]
 8001038:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800103c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001040:	d003      	beq.n	800104a <__swsetup_r+0x9a>
 8001042:	4621      	mov	r1, r4
 8001044:	4630      	mov	r0, r6
 8001046:	f000 f9fd 	bl	8001444 <__smakebuf_r>
 800104a:	89a0      	ldrh	r0, [r4, #12]
 800104c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001050:	f010 0301 	ands.w	r3, r0, #1
 8001054:	d00a      	beq.n	800106c <__swsetup_r+0xbc>
 8001056:	2300      	movs	r3, #0
 8001058:	60a3      	str	r3, [r4, #8]
 800105a:	6963      	ldr	r3, [r4, #20]
 800105c:	425b      	negs	r3, r3
 800105e:	61a3      	str	r3, [r4, #24]
 8001060:	6923      	ldr	r3, [r4, #16]
 8001062:	b943      	cbnz	r3, 8001076 <__swsetup_r+0xc6>
 8001064:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001068:	d1ba      	bne.n	8000fe0 <__swsetup_r+0x30>
 800106a:	bd70      	pop	{r4, r5, r6, pc}
 800106c:	0781      	lsls	r1, r0, #30
 800106e:	bf58      	it	pl
 8001070:	6963      	ldrpl	r3, [r4, #20]
 8001072:	60a3      	str	r3, [r4, #8]
 8001074:	e7f4      	b.n	8001060 <__swsetup_r+0xb0>
 8001076:	2000      	movs	r0, #0
 8001078:	e7f7      	b.n	800106a <__swsetup_r+0xba>
 800107a:	bf00      	nop
 800107c:	20000000 	.word	0x20000000
 8001080:	08002400 	.word	0x08002400
 8001084:	08002420 	.word	0x08002420
 8001088:	080023e0 	.word	0x080023e0

0800108c <__sflush_r>:
 800108c:	898a      	ldrh	r2, [r1, #12]
 800108e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001090:	4605      	mov	r5, r0
 8001092:	0710      	lsls	r0, r2, #28
 8001094:	460c      	mov	r4, r1
 8001096:	d457      	bmi.n	8001148 <__sflush_r+0xbc>
 8001098:	684b      	ldr	r3, [r1, #4]
 800109a:	2b00      	cmp	r3, #0
 800109c:	dc04      	bgt.n	80010a8 <__sflush_r+0x1c>
 800109e:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80010a0:	2b00      	cmp	r3, #0
 80010a2:	dc01      	bgt.n	80010a8 <__sflush_r+0x1c>
 80010a4:	2000      	movs	r0, #0
 80010a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010aa:	2e00      	cmp	r6, #0
 80010ac:	d0fa      	beq.n	80010a4 <__sflush_r+0x18>
 80010ae:	2300      	movs	r3, #0
 80010b0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80010b4:	682f      	ldr	r7, [r5, #0]
 80010b6:	602b      	str	r3, [r5, #0]
 80010b8:	d032      	beq.n	8001120 <__sflush_r+0x94>
 80010ba:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80010bc:	89a3      	ldrh	r3, [r4, #12]
 80010be:	075a      	lsls	r2, r3, #29
 80010c0:	d505      	bpl.n	80010ce <__sflush_r+0x42>
 80010c2:	6863      	ldr	r3, [r4, #4]
 80010c4:	1ac0      	subs	r0, r0, r3
 80010c6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80010c8:	b10b      	cbz	r3, 80010ce <__sflush_r+0x42>
 80010ca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010cc:	1ac0      	subs	r0, r0, r3
 80010ce:	2300      	movs	r3, #0
 80010d0:	4602      	mov	r2, r0
 80010d2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010d4:	6a21      	ldr	r1, [r4, #32]
 80010d6:	4628      	mov	r0, r5
 80010d8:	47b0      	blx	r6
 80010da:	1c43      	adds	r3, r0, #1
 80010dc:	89a3      	ldrh	r3, [r4, #12]
 80010de:	d106      	bne.n	80010ee <__sflush_r+0x62>
 80010e0:	6829      	ldr	r1, [r5, #0]
 80010e2:	291d      	cmp	r1, #29
 80010e4:	d82c      	bhi.n	8001140 <__sflush_r+0xb4>
 80010e6:	4a29      	ldr	r2, [pc, #164]	; (800118c <__sflush_r+0x100>)
 80010e8:	40ca      	lsrs	r2, r1
 80010ea:	07d6      	lsls	r6, r2, #31
 80010ec:	d528      	bpl.n	8001140 <__sflush_r+0xb4>
 80010ee:	2200      	movs	r2, #0
 80010f0:	6062      	str	r2, [r4, #4]
 80010f2:	04d9      	lsls	r1, r3, #19
 80010f4:	6922      	ldr	r2, [r4, #16]
 80010f6:	6022      	str	r2, [r4, #0]
 80010f8:	d504      	bpl.n	8001104 <__sflush_r+0x78>
 80010fa:	1c42      	adds	r2, r0, #1
 80010fc:	d101      	bne.n	8001102 <__sflush_r+0x76>
 80010fe:	682b      	ldr	r3, [r5, #0]
 8001100:	b903      	cbnz	r3, 8001104 <__sflush_r+0x78>
 8001102:	6560      	str	r0, [r4, #84]	; 0x54
 8001104:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001106:	602f      	str	r7, [r5, #0]
 8001108:	2900      	cmp	r1, #0
 800110a:	d0cb      	beq.n	80010a4 <__sflush_r+0x18>
 800110c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001110:	4299      	cmp	r1, r3
 8001112:	d002      	beq.n	800111a <__sflush_r+0x8e>
 8001114:	4628      	mov	r0, r5
 8001116:	f000 f9d5 	bl	80014c4 <_free_r>
 800111a:	2000      	movs	r0, #0
 800111c:	6360      	str	r0, [r4, #52]	; 0x34
 800111e:	e7c2      	b.n	80010a6 <__sflush_r+0x1a>
 8001120:	6a21      	ldr	r1, [r4, #32]
 8001122:	2301      	movs	r3, #1
 8001124:	4628      	mov	r0, r5
 8001126:	47b0      	blx	r6
 8001128:	1c41      	adds	r1, r0, #1
 800112a:	d1c7      	bne.n	80010bc <__sflush_r+0x30>
 800112c:	682b      	ldr	r3, [r5, #0]
 800112e:	2b00      	cmp	r3, #0
 8001130:	d0c4      	beq.n	80010bc <__sflush_r+0x30>
 8001132:	2b1d      	cmp	r3, #29
 8001134:	d001      	beq.n	800113a <__sflush_r+0xae>
 8001136:	2b16      	cmp	r3, #22
 8001138:	d101      	bne.n	800113e <__sflush_r+0xb2>
 800113a:	602f      	str	r7, [r5, #0]
 800113c:	e7b2      	b.n	80010a4 <__sflush_r+0x18>
 800113e:	89a3      	ldrh	r3, [r4, #12]
 8001140:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001144:	81a3      	strh	r3, [r4, #12]
 8001146:	e7ae      	b.n	80010a6 <__sflush_r+0x1a>
 8001148:	690f      	ldr	r7, [r1, #16]
 800114a:	2f00      	cmp	r7, #0
 800114c:	d0aa      	beq.n	80010a4 <__sflush_r+0x18>
 800114e:	0793      	lsls	r3, r2, #30
 8001150:	680e      	ldr	r6, [r1, #0]
 8001152:	bf08      	it	eq
 8001154:	694b      	ldreq	r3, [r1, #20]
 8001156:	600f      	str	r7, [r1, #0]
 8001158:	bf18      	it	ne
 800115a:	2300      	movne	r3, #0
 800115c:	1bf6      	subs	r6, r6, r7
 800115e:	608b      	str	r3, [r1, #8]
 8001160:	2e00      	cmp	r6, #0
 8001162:	dd9f      	ble.n	80010a4 <__sflush_r+0x18>
 8001164:	6a21      	ldr	r1, [r4, #32]
 8001166:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800116a:	4633      	mov	r3, r6
 800116c:	463a      	mov	r2, r7
 800116e:	4628      	mov	r0, r5
 8001170:	47e0      	blx	ip
 8001172:	2800      	cmp	r0, #0
 8001174:	dc06      	bgt.n	8001184 <__sflush_r+0xf8>
 8001176:	89a3      	ldrh	r3, [r4, #12]
 8001178:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800117c:	81a3      	strh	r3, [r4, #12]
 800117e:	f04f 30ff 	mov.w	r0, #4294967295
 8001182:	e790      	b.n	80010a6 <__sflush_r+0x1a>
 8001184:	4407      	add	r7, r0
 8001186:	1a36      	subs	r6, r6, r0
 8001188:	e7ea      	b.n	8001160 <__sflush_r+0xd4>
 800118a:	bf00      	nop
 800118c:	20400001 	.word	0x20400001

08001190 <_fflush_r>:
 8001190:	b538      	push	{r3, r4, r5, lr}
 8001192:	690b      	ldr	r3, [r1, #16]
 8001194:	4605      	mov	r5, r0
 8001196:	460c      	mov	r4, r1
 8001198:	b913      	cbnz	r3, 80011a0 <_fflush_r+0x10>
 800119a:	2500      	movs	r5, #0
 800119c:	4628      	mov	r0, r5
 800119e:	bd38      	pop	{r3, r4, r5, pc}
 80011a0:	b118      	cbz	r0, 80011aa <_fflush_r+0x1a>
 80011a2:	6983      	ldr	r3, [r0, #24]
 80011a4:	b90b      	cbnz	r3, 80011aa <_fflush_r+0x1a>
 80011a6:	f000 f887 	bl	80012b8 <__sinit>
 80011aa:	4b14      	ldr	r3, [pc, #80]	; (80011fc <_fflush_r+0x6c>)
 80011ac:	429c      	cmp	r4, r3
 80011ae:	d11b      	bne.n	80011e8 <_fflush_r+0x58>
 80011b0:	686c      	ldr	r4, [r5, #4]
 80011b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011b6:	2b00      	cmp	r3, #0
 80011b8:	d0ef      	beq.n	800119a <_fflush_r+0xa>
 80011ba:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80011bc:	07d0      	lsls	r0, r2, #31
 80011be:	d404      	bmi.n	80011ca <_fflush_r+0x3a>
 80011c0:	0599      	lsls	r1, r3, #22
 80011c2:	d402      	bmi.n	80011ca <_fflush_r+0x3a>
 80011c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011c6:	f000 f915 	bl	80013f4 <__retarget_lock_acquire_recursive>
 80011ca:	4628      	mov	r0, r5
 80011cc:	4621      	mov	r1, r4
 80011ce:	f7ff ff5d 	bl	800108c <__sflush_r>
 80011d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80011d4:	07da      	lsls	r2, r3, #31
 80011d6:	4605      	mov	r5, r0
 80011d8:	d4e0      	bmi.n	800119c <_fflush_r+0xc>
 80011da:	89a3      	ldrh	r3, [r4, #12]
 80011dc:	059b      	lsls	r3, r3, #22
 80011de:	d4dd      	bmi.n	800119c <_fflush_r+0xc>
 80011e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011e2:	f000 f908 	bl	80013f6 <__retarget_lock_release_recursive>
 80011e6:	e7d9      	b.n	800119c <_fflush_r+0xc>
 80011e8:	4b05      	ldr	r3, [pc, #20]	; (8001200 <_fflush_r+0x70>)
 80011ea:	429c      	cmp	r4, r3
 80011ec:	d101      	bne.n	80011f2 <_fflush_r+0x62>
 80011ee:	68ac      	ldr	r4, [r5, #8]
 80011f0:	e7df      	b.n	80011b2 <_fflush_r+0x22>
 80011f2:	4b04      	ldr	r3, [pc, #16]	; (8001204 <_fflush_r+0x74>)
 80011f4:	429c      	cmp	r4, r3
 80011f6:	bf08      	it	eq
 80011f8:	68ec      	ldreq	r4, [r5, #12]
 80011fa:	e7da      	b.n	80011b2 <_fflush_r+0x22>
 80011fc:	08002400 	.word	0x08002400
 8001200:	08002420 	.word	0x08002420
 8001204:	080023e0 	.word	0x080023e0

08001208 <std>:
 8001208:	2300      	movs	r3, #0
 800120a:	b510      	push	{r4, lr}
 800120c:	4604      	mov	r4, r0
 800120e:	e9c0 3300 	strd	r3, r3, [r0]
 8001212:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001216:	6083      	str	r3, [r0, #8]
 8001218:	8181      	strh	r1, [r0, #12]
 800121a:	6643      	str	r3, [r0, #100]	; 0x64
 800121c:	81c2      	strh	r2, [r0, #14]
 800121e:	6183      	str	r3, [r0, #24]
 8001220:	4619      	mov	r1, r3
 8001222:	2208      	movs	r2, #8
 8001224:	305c      	adds	r0, #92	; 0x5c
 8001226:	f7ff fddb 	bl	8000de0 <memset>
 800122a:	4b05      	ldr	r3, [pc, #20]	; (8001240 <std+0x38>)
 800122c:	6263      	str	r3, [r4, #36]	; 0x24
 800122e:	4b05      	ldr	r3, [pc, #20]	; (8001244 <std+0x3c>)
 8001230:	62a3      	str	r3, [r4, #40]	; 0x28
 8001232:	4b05      	ldr	r3, [pc, #20]	; (8001248 <std+0x40>)
 8001234:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001236:	4b05      	ldr	r3, [pc, #20]	; (800124c <std+0x44>)
 8001238:	6224      	str	r4, [r4, #32]
 800123a:	6323      	str	r3, [r4, #48]	; 0x30
 800123c:	bd10      	pop	{r4, pc}
 800123e:	bf00      	nop
 8001240:	08001c79 	.word	0x08001c79
 8001244:	08001c9b 	.word	0x08001c9b
 8001248:	08001cd3 	.word	0x08001cd3
 800124c:	08001cf7 	.word	0x08001cf7

08001250 <_cleanup_r>:
 8001250:	4901      	ldr	r1, [pc, #4]	; (8001258 <_cleanup_r+0x8>)
 8001252:	f000 b8af 	b.w	80013b4 <_fwalk_reent>
 8001256:	bf00      	nop
 8001258:	08001191 	.word	0x08001191

0800125c <__sfmoreglue>:
 800125c:	b570      	push	{r4, r5, r6, lr}
 800125e:	2268      	movs	r2, #104	; 0x68
 8001260:	1e4d      	subs	r5, r1, #1
 8001262:	4355      	muls	r5, r2
 8001264:	460e      	mov	r6, r1
 8001266:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800126a:	f000 f995 	bl	8001598 <_malloc_r>
 800126e:	4604      	mov	r4, r0
 8001270:	b140      	cbz	r0, 8001284 <__sfmoreglue+0x28>
 8001272:	2100      	movs	r1, #0
 8001274:	e9c0 1600 	strd	r1, r6, [r0]
 8001278:	300c      	adds	r0, #12
 800127a:	60a0      	str	r0, [r4, #8]
 800127c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001280:	f7ff fdae 	bl	8000de0 <memset>
 8001284:	4620      	mov	r0, r4
 8001286:	bd70      	pop	{r4, r5, r6, pc}

08001288 <__sfp_lock_acquire>:
 8001288:	4801      	ldr	r0, [pc, #4]	; (8001290 <__sfp_lock_acquire+0x8>)
 800128a:	f000 b8b3 	b.w	80013f4 <__retarget_lock_acquire_recursive>
 800128e:	bf00      	nop
 8001290:	2000008d 	.word	0x2000008d

08001294 <__sfp_lock_release>:
 8001294:	4801      	ldr	r0, [pc, #4]	; (800129c <__sfp_lock_release+0x8>)
 8001296:	f000 b8ae 	b.w	80013f6 <__retarget_lock_release_recursive>
 800129a:	bf00      	nop
 800129c:	2000008d 	.word	0x2000008d

080012a0 <__sinit_lock_acquire>:
 80012a0:	4801      	ldr	r0, [pc, #4]	; (80012a8 <__sinit_lock_acquire+0x8>)
 80012a2:	f000 b8a7 	b.w	80013f4 <__retarget_lock_acquire_recursive>
 80012a6:	bf00      	nop
 80012a8:	2000008e 	.word	0x2000008e

080012ac <__sinit_lock_release>:
 80012ac:	4801      	ldr	r0, [pc, #4]	; (80012b4 <__sinit_lock_release+0x8>)
 80012ae:	f000 b8a2 	b.w	80013f6 <__retarget_lock_release_recursive>
 80012b2:	bf00      	nop
 80012b4:	2000008e 	.word	0x2000008e

080012b8 <__sinit>:
 80012b8:	b510      	push	{r4, lr}
 80012ba:	4604      	mov	r4, r0
 80012bc:	f7ff fff0 	bl	80012a0 <__sinit_lock_acquire>
 80012c0:	69a3      	ldr	r3, [r4, #24]
 80012c2:	b11b      	cbz	r3, 80012cc <__sinit+0x14>
 80012c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80012c8:	f7ff bff0 	b.w	80012ac <__sinit_lock_release>
 80012cc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80012d0:	6523      	str	r3, [r4, #80]	; 0x50
 80012d2:	4b13      	ldr	r3, [pc, #76]	; (8001320 <__sinit+0x68>)
 80012d4:	4a13      	ldr	r2, [pc, #76]	; (8001324 <__sinit+0x6c>)
 80012d6:	681b      	ldr	r3, [r3, #0]
 80012d8:	62a2      	str	r2, [r4, #40]	; 0x28
 80012da:	42a3      	cmp	r3, r4
 80012dc:	bf04      	itt	eq
 80012de:	2301      	moveq	r3, #1
 80012e0:	61a3      	streq	r3, [r4, #24]
 80012e2:	4620      	mov	r0, r4
 80012e4:	f000 f820 	bl	8001328 <__sfp>
 80012e8:	6060      	str	r0, [r4, #4]
 80012ea:	4620      	mov	r0, r4
 80012ec:	f000 f81c 	bl	8001328 <__sfp>
 80012f0:	60a0      	str	r0, [r4, #8]
 80012f2:	4620      	mov	r0, r4
 80012f4:	f000 f818 	bl	8001328 <__sfp>
 80012f8:	2200      	movs	r2, #0
 80012fa:	60e0      	str	r0, [r4, #12]
 80012fc:	2104      	movs	r1, #4
 80012fe:	6860      	ldr	r0, [r4, #4]
 8001300:	f7ff ff82 	bl	8001208 <std>
 8001304:	68a0      	ldr	r0, [r4, #8]
 8001306:	2201      	movs	r2, #1
 8001308:	2109      	movs	r1, #9
 800130a:	f7ff ff7d 	bl	8001208 <std>
 800130e:	68e0      	ldr	r0, [r4, #12]
 8001310:	2202      	movs	r2, #2
 8001312:	2112      	movs	r1, #18
 8001314:	f7ff ff78 	bl	8001208 <std>
 8001318:	2301      	movs	r3, #1
 800131a:	61a3      	str	r3, [r4, #24]
 800131c:	e7d2      	b.n	80012c4 <__sinit+0xc>
 800131e:	bf00      	nop
 8001320:	080023dc 	.word	0x080023dc
 8001324:	08001251 	.word	0x08001251

08001328 <__sfp>:
 8001328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800132a:	4607      	mov	r7, r0
 800132c:	f7ff ffac 	bl	8001288 <__sfp_lock_acquire>
 8001330:	4b1e      	ldr	r3, [pc, #120]	; (80013ac <__sfp+0x84>)
 8001332:	681e      	ldr	r6, [r3, #0]
 8001334:	69b3      	ldr	r3, [r6, #24]
 8001336:	b913      	cbnz	r3, 800133e <__sfp+0x16>
 8001338:	4630      	mov	r0, r6
 800133a:	f7ff ffbd 	bl	80012b8 <__sinit>
 800133e:	3648      	adds	r6, #72	; 0x48
 8001340:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001344:	3b01      	subs	r3, #1
 8001346:	d503      	bpl.n	8001350 <__sfp+0x28>
 8001348:	6833      	ldr	r3, [r6, #0]
 800134a:	b30b      	cbz	r3, 8001390 <__sfp+0x68>
 800134c:	6836      	ldr	r6, [r6, #0]
 800134e:	e7f7      	b.n	8001340 <__sfp+0x18>
 8001350:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001354:	b9d5      	cbnz	r5, 800138c <__sfp+0x64>
 8001356:	4b16      	ldr	r3, [pc, #88]	; (80013b0 <__sfp+0x88>)
 8001358:	60e3      	str	r3, [r4, #12]
 800135a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800135e:	6665      	str	r5, [r4, #100]	; 0x64
 8001360:	f000 f847 	bl	80013f2 <__retarget_lock_init_recursive>
 8001364:	f7ff ff96 	bl	8001294 <__sfp_lock_release>
 8001368:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800136c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8001370:	6025      	str	r5, [r4, #0]
 8001372:	61a5      	str	r5, [r4, #24]
 8001374:	2208      	movs	r2, #8
 8001376:	4629      	mov	r1, r5
 8001378:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800137c:	f7ff fd30 	bl	8000de0 <memset>
 8001380:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001384:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8001388:	4620      	mov	r0, r4
 800138a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800138c:	3468      	adds	r4, #104	; 0x68
 800138e:	e7d9      	b.n	8001344 <__sfp+0x1c>
 8001390:	2104      	movs	r1, #4
 8001392:	4638      	mov	r0, r7
 8001394:	f7ff ff62 	bl	800125c <__sfmoreglue>
 8001398:	4604      	mov	r4, r0
 800139a:	6030      	str	r0, [r6, #0]
 800139c:	2800      	cmp	r0, #0
 800139e:	d1d5      	bne.n	800134c <__sfp+0x24>
 80013a0:	f7ff ff78 	bl	8001294 <__sfp_lock_release>
 80013a4:	230c      	movs	r3, #12
 80013a6:	603b      	str	r3, [r7, #0]
 80013a8:	e7ee      	b.n	8001388 <__sfp+0x60>
 80013aa:	bf00      	nop
 80013ac:	080023dc 	.word	0x080023dc
 80013b0:	ffff0001 	.word	0xffff0001

080013b4 <_fwalk_reent>:
 80013b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80013b8:	4606      	mov	r6, r0
 80013ba:	4688      	mov	r8, r1
 80013bc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80013c0:	2700      	movs	r7, #0
 80013c2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80013c6:	f1b9 0901 	subs.w	r9, r9, #1
 80013ca:	d505      	bpl.n	80013d8 <_fwalk_reent+0x24>
 80013cc:	6824      	ldr	r4, [r4, #0]
 80013ce:	2c00      	cmp	r4, #0
 80013d0:	d1f7      	bne.n	80013c2 <_fwalk_reent+0xe>
 80013d2:	4638      	mov	r0, r7
 80013d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80013d8:	89ab      	ldrh	r3, [r5, #12]
 80013da:	2b01      	cmp	r3, #1
 80013dc:	d907      	bls.n	80013ee <_fwalk_reent+0x3a>
 80013de:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80013e2:	3301      	adds	r3, #1
 80013e4:	d003      	beq.n	80013ee <_fwalk_reent+0x3a>
 80013e6:	4629      	mov	r1, r5
 80013e8:	4630      	mov	r0, r6
 80013ea:	47c0      	blx	r8
 80013ec:	4307      	orrs	r7, r0
 80013ee:	3568      	adds	r5, #104	; 0x68
 80013f0:	e7e9      	b.n	80013c6 <_fwalk_reent+0x12>

080013f2 <__retarget_lock_init_recursive>:
 80013f2:	4770      	bx	lr

080013f4 <__retarget_lock_acquire_recursive>:
 80013f4:	4770      	bx	lr

080013f6 <__retarget_lock_release_recursive>:
 80013f6:	4770      	bx	lr

080013f8 <__swhatbuf_r>:
 80013f8:	b570      	push	{r4, r5, r6, lr}
 80013fa:	460e      	mov	r6, r1
 80013fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001400:	2900      	cmp	r1, #0
 8001402:	b096      	sub	sp, #88	; 0x58
 8001404:	4614      	mov	r4, r2
 8001406:	461d      	mov	r5, r3
 8001408:	da08      	bge.n	800141c <__swhatbuf_r+0x24>
 800140a:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800140e:	2200      	movs	r2, #0
 8001410:	602a      	str	r2, [r5, #0]
 8001412:	061a      	lsls	r2, r3, #24
 8001414:	d410      	bmi.n	8001438 <__swhatbuf_r+0x40>
 8001416:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800141a:	e00e      	b.n	800143a <__swhatbuf_r+0x42>
 800141c:	466a      	mov	r2, sp
 800141e:	f000 fc91 	bl	8001d44 <_fstat_r>
 8001422:	2800      	cmp	r0, #0
 8001424:	dbf1      	blt.n	800140a <__swhatbuf_r+0x12>
 8001426:	9a01      	ldr	r2, [sp, #4]
 8001428:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800142c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001430:	425a      	negs	r2, r3
 8001432:	415a      	adcs	r2, r3
 8001434:	602a      	str	r2, [r5, #0]
 8001436:	e7ee      	b.n	8001416 <__swhatbuf_r+0x1e>
 8001438:	2340      	movs	r3, #64	; 0x40
 800143a:	2000      	movs	r0, #0
 800143c:	6023      	str	r3, [r4, #0]
 800143e:	b016      	add	sp, #88	; 0x58
 8001440:	bd70      	pop	{r4, r5, r6, pc}
	...

08001444 <__smakebuf_r>:
 8001444:	898b      	ldrh	r3, [r1, #12]
 8001446:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001448:	079d      	lsls	r5, r3, #30
 800144a:	4606      	mov	r6, r0
 800144c:	460c      	mov	r4, r1
 800144e:	d507      	bpl.n	8001460 <__smakebuf_r+0x1c>
 8001450:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001454:	6023      	str	r3, [r4, #0]
 8001456:	6123      	str	r3, [r4, #16]
 8001458:	2301      	movs	r3, #1
 800145a:	6163      	str	r3, [r4, #20]
 800145c:	b002      	add	sp, #8
 800145e:	bd70      	pop	{r4, r5, r6, pc}
 8001460:	ab01      	add	r3, sp, #4
 8001462:	466a      	mov	r2, sp
 8001464:	f7ff ffc8 	bl	80013f8 <__swhatbuf_r>
 8001468:	9900      	ldr	r1, [sp, #0]
 800146a:	4605      	mov	r5, r0
 800146c:	4630      	mov	r0, r6
 800146e:	f000 f893 	bl	8001598 <_malloc_r>
 8001472:	b948      	cbnz	r0, 8001488 <__smakebuf_r+0x44>
 8001474:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001478:	059a      	lsls	r2, r3, #22
 800147a:	d4ef      	bmi.n	800145c <__smakebuf_r+0x18>
 800147c:	f023 0303 	bic.w	r3, r3, #3
 8001480:	f043 0302 	orr.w	r3, r3, #2
 8001484:	81a3      	strh	r3, [r4, #12]
 8001486:	e7e3      	b.n	8001450 <__smakebuf_r+0xc>
 8001488:	4b0d      	ldr	r3, [pc, #52]	; (80014c0 <__smakebuf_r+0x7c>)
 800148a:	62b3      	str	r3, [r6, #40]	; 0x28
 800148c:	89a3      	ldrh	r3, [r4, #12]
 800148e:	6020      	str	r0, [r4, #0]
 8001490:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001494:	81a3      	strh	r3, [r4, #12]
 8001496:	9b00      	ldr	r3, [sp, #0]
 8001498:	6163      	str	r3, [r4, #20]
 800149a:	9b01      	ldr	r3, [sp, #4]
 800149c:	6120      	str	r0, [r4, #16]
 800149e:	b15b      	cbz	r3, 80014b8 <__smakebuf_r+0x74>
 80014a0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014a4:	4630      	mov	r0, r6
 80014a6:	f000 fc5f 	bl	8001d68 <_isatty_r>
 80014aa:	b128      	cbz	r0, 80014b8 <__smakebuf_r+0x74>
 80014ac:	89a3      	ldrh	r3, [r4, #12]
 80014ae:	f023 0303 	bic.w	r3, r3, #3
 80014b2:	f043 0301 	orr.w	r3, r3, #1
 80014b6:	81a3      	strh	r3, [r4, #12]
 80014b8:	89a0      	ldrh	r0, [r4, #12]
 80014ba:	4305      	orrs	r5, r0
 80014bc:	81a5      	strh	r5, [r4, #12]
 80014be:	e7cd      	b.n	800145c <__smakebuf_r+0x18>
 80014c0:	08001251 	.word	0x08001251

080014c4 <_free_r>:
 80014c4:	b538      	push	{r3, r4, r5, lr}
 80014c6:	4605      	mov	r5, r0
 80014c8:	2900      	cmp	r1, #0
 80014ca:	d041      	beq.n	8001550 <_free_r+0x8c>
 80014cc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80014d0:	1f0c      	subs	r4, r1, #4
 80014d2:	2b00      	cmp	r3, #0
 80014d4:	bfb8      	it	lt
 80014d6:	18e4      	addlt	r4, r4, r3
 80014d8:	f000 fc68 	bl	8001dac <__malloc_lock>
 80014dc:	4a1d      	ldr	r2, [pc, #116]	; (8001554 <_free_r+0x90>)
 80014de:	6813      	ldr	r3, [r2, #0]
 80014e0:	b933      	cbnz	r3, 80014f0 <_free_r+0x2c>
 80014e2:	6063      	str	r3, [r4, #4]
 80014e4:	6014      	str	r4, [r2, #0]
 80014e6:	4628      	mov	r0, r5
 80014e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80014ec:	f000 bc64 	b.w	8001db8 <__malloc_unlock>
 80014f0:	42a3      	cmp	r3, r4
 80014f2:	d908      	bls.n	8001506 <_free_r+0x42>
 80014f4:	6820      	ldr	r0, [r4, #0]
 80014f6:	1821      	adds	r1, r4, r0
 80014f8:	428b      	cmp	r3, r1
 80014fa:	bf01      	itttt	eq
 80014fc:	6819      	ldreq	r1, [r3, #0]
 80014fe:	685b      	ldreq	r3, [r3, #4]
 8001500:	1809      	addeq	r1, r1, r0
 8001502:	6021      	streq	r1, [r4, #0]
 8001504:	e7ed      	b.n	80014e2 <_free_r+0x1e>
 8001506:	461a      	mov	r2, r3
 8001508:	685b      	ldr	r3, [r3, #4]
 800150a:	b10b      	cbz	r3, 8001510 <_free_r+0x4c>
 800150c:	42a3      	cmp	r3, r4
 800150e:	d9fa      	bls.n	8001506 <_free_r+0x42>
 8001510:	6811      	ldr	r1, [r2, #0]
 8001512:	1850      	adds	r0, r2, r1
 8001514:	42a0      	cmp	r0, r4
 8001516:	d10b      	bne.n	8001530 <_free_r+0x6c>
 8001518:	6820      	ldr	r0, [r4, #0]
 800151a:	4401      	add	r1, r0
 800151c:	1850      	adds	r0, r2, r1
 800151e:	4283      	cmp	r3, r0
 8001520:	6011      	str	r1, [r2, #0]
 8001522:	d1e0      	bne.n	80014e6 <_free_r+0x22>
 8001524:	6818      	ldr	r0, [r3, #0]
 8001526:	685b      	ldr	r3, [r3, #4]
 8001528:	6053      	str	r3, [r2, #4]
 800152a:	4401      	add	r1, r0
 800152c:	6011      	str	r1, [r2, #0]
 800152e:	e7da      	b.n	80014e6 <_free_r+0x22>
 8001530:	d902      	bls.n	8001538 <_free_r+0x74>
 8001532:	230c      	movs	r3, #12
 8001534:	602b      	str	r3, [r5, #0]
 8001536:	e7d6      	b.n	80014e6 <_free_r+0x22>
 8001538:	6820      	ldr	r0, [r4, #0]
 800153a:	1821      	adds	r1, r4, r0
 800153c:	428b      	cmp	r3, r1
 800153e:	bf04      	itt	eq
 8001540:	6819      	ldreq	r1, [r3, #0]
 8001542:	685b      	ldreq	r3, [r3, #4]
 8001544:	6063      	str	r3, [r4, #4]
 8001546:	bf04      	itt	eq
 8001548:	1809      	addeq	r1, r1, r0
 800154a:	6021      	streq	r1, [r4, #0]
 800154c:	6054      	str	r4, [r2, #4]
 800154e:	e7ca      	b.n	80014e6 <_free_r+0x22>
 8001550:	bd38      	pop	{r3, r4, r5, pc}
 8001552:	bf00      	nop
 8001554:	20000090 	.word	0x20000090

08001558 <sbrk_aligned>:
 8001558:	b570      	push	{r4, r5, r6, lr}
 800155a:	4e0e      	ldr	r6, [pc, #56]	; (8001594 <sbrk_aligned+0x3c>)
 800155c:	460c      	mov	r4, r1
 800155e:	6831      	ldr	r1, [r6, #0]
 8001560:	4605      	mov	r5, r0
 8001562:	b911      	cbnz	r1, 800156a <sbrk_aligned+0x12>
 8001564:	f000 fb78 	bl	8001c58 <_sbrk_r>
 8001568:	6030      	str	r0, [r6, #0]
 800156a:	4621      	mov	r1, r4
 800156c:	4628      	mov	r0, r5
 800156e:	f000 fb73 	bl	8001c58 <_sbrk_r>
 8001572:	1c43      	adds	r3, r0, #1
 8001574:	d00a      	beq.n	800158c <sbrk_aligned+0x34>
 8001576:	1cc4      	adds	r4, r0, #3
 8001578:	f024 0403 	bic.w	r4, r4, #3
 800157c:	42a0      	cmp	r0, r4
 800157e:	d007      	beq.n	8001590 <sbrk_aligned+0x38>
 8001580:	1a21      	subs	r1, r4, r0
 8001582:	4628      	mov	r0, r5
 8001584:	f000 fb68 	bl	8001c58 <_sbrk_r>
 8001588:	3001      	adds	r0, #1
 800158a:	d101      	bne.n	8001590 <sbrk_aligned+0x38>
 800158c:	f04f 34ff 	mov.w	r4, #4294967295
 8001590:	4620      	mov	r0, r4
 8001592:	bd70      	pop	{r4, r5, r6, pc}
 8001594:	20000094 	.word	0x20000094

08001598 <_malloc_r>:
 8001598:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800159c:	1ccd      	adds	r5, r1, #3
 800159e:	f025 0503 	bic.w	r5, r5, #3
 80015a2:	3508      	adds	r5, #8
 80015a4:	2d0c      	cmp	r5, #12
 80015a6:	bf38      	it	cc
 80015a8:	250c      	movcc	r5, #12
 80015aa:	2d00      	cmp	r5, #0
 80015ac:	4607      	mov	r7, r0
 80015ae:	db01      	blt.n	80015b4 <_malloc_r+0x1c>
 80015b0:	42a9      	cmp	r1, r5
 80015b2:	d905      	bls.n	80015c0 <_malloc_r+0x28>
 80015b4:	230c      	movs	r3, #12
 80015b6:	603b      	str	r3, [r7, #0]
 80015b8:	2600      	movs	r6, #0
 80015ba:	4630      	mov	r0, r6
 80015bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80015c0:	4e2e      	ldr	r6, [pc, #184]	; (800167c <_malloc_r+0xe4>)
 80015c2:	f000 fbf3 	bl	8001dac <__malloc_lock>
 80015c6:	6833      	ldr	r3, [r6, #0]
 80015c8:	461c      	mov	r4, r3
 80015ca:	bb34      	cbnz	r4, 800161a <_malloc_r+0x82>
 80015cc:	4629      	mov	r1, r5
 80015ce:	4638      	mov	r0, r7
 80015d0:	f7ff ffc2 	bl	8001558 <sbrk_aligned>
 80015d4:	1c43      	adds	r3, r0, #1
 80015d6:	4604      	mov	r4, r0
 80015d8:	d14d      	bne.n	8001676 <_malloc_r+0xde>
 80015da:	6834      	ldr	r4, [r6, #0]
 80015dc:	4626      	mov	r6, r4
 80015de:	2e00      	cmp	r6, #0
 80015e0:	d140      	bne.n	8001664 <_malloc_r+0xcc>
 80015e2:	6823      	ldr	r3, [r4, #0]
 80015e4:	4631      	mov	r1, r6
 80015e6:	4638      	mov	r0, r7
 80015e8:	eb04 0803 	add.w	r8, r4, r3
 80015ec:	f000 fb34 	bl	8001c58 <_sbrk_r>
 80015f0:	4580      	cmp	r8, r0
 80015f2:	d13a      	bne.n	800166a <_malloc_r+0xd2>
 80015f4:	6821      	ldr	r1, [r4, #0]
 80015f6:	3503      	adds	r5, #3
 80015f8:	1a6d      	subs	r5, r5, r1
 80015fa:	f025 0503 	bic.w	r5, r5, #3
 80015fe:	3508      	adds	r5, #8
 8001600:	2d0c      	cmp	r5, #12
 8001602:	bf38      	it	cc
 8001604:	250c      	movcc	r5, #12
 8001606:	4629      	mov	r1, r5
 8001608:	4638      	mov	r0, r7
 800160a:	f7ff ffa5 	bl	8001558 <sbrk_aligned>
 800160e:	3001      	adds	r0, #1
 8001610:	d02b      	beq.n	800166a <_malloc_r+0xd2>
 8001612:	6823      	ldr	r3, [r4, #0]
 8001614:	442b      	add	r3, r5
 8001616:	6023      	str	r3, [r4, #0]
 8001618:	e00e      	b.n	8001638 <_malloc_r+0xa0>
 800161a:	6822      	ldr	r2, [r4, #0]
 800161c:	1b52      	subs	r2, r2, r5
 800161e:	d41e      	bmi.n	800165e <_malloc_r+0xc6>
 8001620:	2a0b      	cmp	r2, #11
 8001622:	d916      	bls.n	8001652 <_malloc_r+0xba>
 8001624:	1961      	adds	r1, r4, r5
 8001626:	42a3      	cmp	r3, r4
 8001628:	6025      	str	r5, [r4, #0]
 800162a:	bf18      	it	ne
 800162c:	6059      	strne	r1, [r3, #4]
 800162e:	6863      	ldr	r3, [r4, #4]
 8001630:	bf08      	it	eq
 8001632:	6031      	streq	r1, [r6, #0]
 8001634:	5162      	str	r2, [r4, r5]
 8001636:	604b      	str	r3, [r1, #4]
 8001638:	4638      	mov	r0, r7
 800163a:	f104 060b 	add.w	r6, r4, #11
 800163e:	f000 fbbb 	bl	8001db8 <__malloc_unlock>
 8001642:	f026 0607 	bic.w	r6, r6, #7
 8001646:	1d23      	adds	r3, r4, #4
 8001648:	1af2      	subs	r2, r6, r3
 800164a:	d0b6      	beq.n	80015ba <_malloc_r+0x22>
 800164c:	1b9b      	subs	r3, r3, r6
 800164e:	50a3      	str	r3, [r4, r2]
 8001650:	e7b3      	b.n	80015ba <_malloc_r+0x22>
 8001652:	6862      	ldr	r2, [r4, #4]
 8001654:	42a3      	cmp	r3, r4
 8001656:	bf0c      	ite	eq
 8001658:	6032      	streq	r2, [r6, #0]
 800165a:	605a      	strne	r2, [r3, #4]
 800165c:	e7ec      	b.n	8001638 <_malloc_r+0xa0>
 800165e:	4623      	mov	r3, r4
 8001660:	6864      	ldr	r4, [r4, #4]
 8001662:	e7b2      	b.n	80015ca <_malloc_r+0x32>
 8001664:	4634      	mov	r4, r6
 8001666:	6876      	ldr	r6, [r6, #4]
 8001668:	e7b9      	b.n	80015de <_malloc_r+0x46>
 800166a:	230c      	movs	r3, #12
 800166c:	603b      	str	r3, [r7, #0]
 800166e:	4638      	mov	r0, r7
 8001670:	f000 fba2 	bl	8001db8 <__malloc_unlock>
 8001674:	e7a1      	b.n	80015ba <_malloc_r+0x22>
 8001676:	6025      	str	r5, [r4, #0]
 8001678:	e7de      	b.n	8001638 <_malloc_r+0xa0>
 800167a:	bf00      	nop
 800167c:	20000090 	.word	0x20000090

08001680 <__sfputc_r>:
 8001680:	6893      	ldr	r3, [r2, #8]
 8001682:	3b01      	subs	r3, #1
 8001684:	2b00      	cmp	r3, #0
 8001686:	b410      	push	{r4}
 8001688:	6093      	str	r3, [r2, #8]
 800168a:	da07      	bge.n	800169c <__sfputc_r+0x1c>
 800168c:	6994      	ldr	r4, [r2, #24]
 800168e:	42a3      	cmp	r3, r4
 8001690:	db01      	blt.n	8001696 <__sfputc_r+0x16>
 8001692:	290a      	cmp	r1, #10
 8001694:	d102      	bne.n	800169c <__sfputc_r+0x1c>
 8001696:	bc10      	pop	{r4}
 8001698:	f7ff bc38 	b.w	8000f0c <__swbuf_r>
 800169c:	6813      	ldr	r3, [r2, #0]
 800169e:	1c58      	adds	r0, r3, #1
 80016a0:	6010      	str	r0, [r2, #0]
 80016a2:	7019      	strb	r1, [r3, #0]
 80016a4:	4608      	mov	r0, r1
 80016a6:	bc10      	pop	{r4}
 80016a8:	4770      	bx	lr

080016aa <__sfputs_r>:
 80016aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016ac:	4606      	mov	r6, r0
 80016ae:	460f      	mov	r7, r1
 80016b0:	4614      	mov	r4, r2
 80016b2:	18d5      	adds	r5, r2, r3
 80016b4:	42ac      	cmp	r4, r5
 80016b6:	d101      	bne.n	80016bc <__sfputs_r+0x12>
 80016b8:	2000      	movs	r0, #0
 80016ba:	e007      	b.n	80016cc <__sfputs_r+0x22>
 80016bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80016c0:	463a      	mov	r2, r7
 80016c2:	4630      	mov	r0, r6
 80016c4:	f7ff ffdc 	bl	8001680 <__sfputc_r>
 80016c8:	1c43      	adds	r3, r0, #1
 80016ca:	d1f3      	bne.n	80016b4 <__sfputs_r+0xa>
 80016cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080016d0 <_vfiprintf_r>:
 80016d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80016d4:	460d      	mov	r5, r1
 80016d6:	b09d      	sub	sp, #116	; 0x74
 80016d8:	4614      	mov	r4, r2
 80016da:	4698      	mov	r8, r3
 80016dc:	4606      	mov	r6, r0
 80016de:	b118      	cbz	r0, 80016e8 <_vfiprintf_r+0x18>
 80016e0:	6983      	ldr	r3, [r0, #24]
 80016e2:	b90b      	cbnz	r3, 80016e8 <_vfiprintf_r+0x18>
 80016e4:	f7ff fde8 	bl	80012b8 <__sinit>
 80016e8:	4b89      	ldr	r3, [pc, #548]	; (8001910 <_vfiprintf_r+0x240>)
 80016ea:	429d      	cmp	r5, r3
 80016ec:	d11b      	bne.n	8001726 <_vfiprintf_r+0x56>
 80016ee:	6875      	ldr	r5, [r6, #4]
 80016f0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80016f2:	07d9      	lsls	r1, r3, #31
 80016f4:	d405      	bmi.n	8001702 <_vfiprintf_r+0x32>
 80016f6:	89ab      	ldrh	r3, [r5, #12]
 80016f8:	059a      	lsls	r2, r3, #22
 80016fa:	d402      	bmi.n	8001702 <_vfiprintf_r+0x32>
 80016fc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80016fe:	f7ff fe79 	bl	80013f4 <__retarget_lock_acquire_recursive>
 8001702:	89ab      	ldrh	r3, [r5, #12]
 8001704:	071b      	lsls	r3, r3, #28
 8001706:	d501      	bpl.n	800170c <_vfiprintf_r+0x3c>
 8001708:	692b      	ldr	r3, [r5, #16]
 800170a:	b9eb      	cbnz	r3, 8001748 <_vfiprintf_r+0x78>
 800170c:	4629      	mov	r1, r5
 800170e:	4630      	mov	r0, r6
 8001710:	f7ff fc4e 	bl	8000fb0 <__swsetup_r>
 8001714:	b1c0      	cbz	r0, 8001748 <_vfiprintf_r+0x78>
 8001716:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001718:	07dc      	lsls	r4, r3, #31
 800171a:	d50e      	bpl.n	800173a <_vfiprintf_r+0x6a>
 800171c:	f04f 30ff 	mov.w	r0, #4294967295
 8001720:	b01d      	add	sp, #116	; 0x74
 8001722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001726:	4b7b      	ldr	r3, [pc, #492]	; (8001914 <_vfiprintf_r+0x244>)
 8001728:	429d      	cmp	r5, r3
 800172a:	d101      	bne.n	8001730 <_vfiprintf_r+0x60>
 800172c:	68b5      	ldr	r5, [r6, #8]
 800172e:	e7df      	b.n	80016f0 <_vfiprintf_r+0x20>
 8001730:	4b79      	ldr	r3, [pc, #484]	; (8001918 <_vfiprintf_r+0x248>)
 8001732:	429d      	cmp	r5, r3
 8001734:	bf08      	it	eq
 8001736:	68f5      	ldreq	r5, [r6, #12]
 8001738:	e7da      	b.n	80016f0 <_vfiprintf_r+0x20>
 800173a:	89ab      	ldrh	r3, [r5, #12]
 800173c:	0598      	lsls	r0, r3, #22
 800173e:	d4ed      	bmi.n	800171c <_vfiprintf_r+0x4c>
 8001740:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001742:	f7ff fe58 	bl	80013f6 <__retarget_lock_release_recursive>
 8001746:	e7e9      	b.n	800171c <_vfiprintf_r+0x4c>
 8001748:	2300      	movs	r3, #0
 800174a:	9309      	str	r3, [sp, #36]	; 0x24
 800174c:	2320      	movs	r3, #32
 800174e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001752:	f8cd 800c 	str.w	r8, [sp, #12]
 8001756:	2330      	movs	r3, #48	; 0x30
 8001758:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800191c <_vfiprintf_r+0x24c>
 800175c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001760:	f04f 0901 	mov.w	r9, #1
 8001764:	4623      	mov	r3, r4
 8001766:	469a      	mov	sl, r3
 8001768:	f813 2b01 	ldrb.w	r2, [r3], #1
 800176c:	b10a      	cbz	r2, 8001772 <_vfiprintf_r+0xa2>
 800176e:	2a25      	cmp	r2, #37	; 0x25
 8001770:	d1f9      	bne.n	8001766 <_vfiprintf_r+0x96>
 8001772:	ebba 0b04 	subs.w	fp, sl, r4
 8001776:	d00b      	beq.n	8001790 <_vfiprintf_r+0xc0>
 8001778:	465b      	mov	r3, fp
 800177a:	4622      	mov	r2, r4
 800177c:	4629      	mov	r1, r5
 800177e:	4630      	mov	r0, r6
 8001780:	f7ff ff93 	bl	80016aa <__sfputs_r>
 8001784:	3001      	adds	r0, #1
 8001786:	f000 80aa 	beq.w	80018de <_vfiprintf_r+0x20e>
 800178a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800178c:	445a      	add	r2, fp
 800178e:	9209      	str	r2, [sp, #36]	; 0x24
 8001790:	f89a 3000 	ldrb.w	r3, [sl]
 8001794:	2b00      	cmp	r3, #0
 8001796:	f000 80a2 	beq.w	80018de <_vfiprintf_r+0x20e>
 800179a:	2300      	movs	r3, #0
 800179c:	f04f 32ff 	mov.w	r2, #4294967295
 80017a0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80017a4:	f10a 0a01 	add.w	sl, sl, #1
 80017a8:	9304      	str	r3, [sp, #16]
 80017aa:	9307      	str	r3, [sp, #28]
 80017ac:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80017b0:	931a      	str	r3, [sp, #104]	; 0x68
 80017b2:	4654      	mov	r4, sl
 80017b4:	2205      	movs	r2, #5
 80017b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80017ba:	4858      	ldr	r0, [pc, #352]	; (800191c <_vfiprintf_r+0x24c>)
 80017bc:	f7fe fd18 	bl	80001f0 <memchr>
 80017c0:	9a04      	ldr	r2, [sp, #16]
 80017c2:	b9d8      	cbnz	r0, 80017fc <_vfiprintf_r+0x12c>
 80017c4:	06d1      	lsls	r1, r2, #27
 80017c6:	bf44      	itt	mi
 80017c8:	2320      	movmi	r3, #32
 80017ca:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80017ce:	0713      	lsls	r3, r2, #28
 80017d0:	bf44      	itt	mi
 80017d2:	232b      	movmi	r3, #43	; 0x2b
 80017d4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80017d8:	f89a 3000 	ldrb.w	r3, [sl]
 80017dc:	2b2a      	cmp	r3, #42	; 0x2a
 80017de:	d015      	beq.n	800180c <_vfiprintf_r+0x13c>
 80017e0:	9a07      	ldr	r2, [sp, #28]
 80017e2:	4654      	mov	r4, sl
 80017e4:	2000      	movs	r0, #0
 80017e6:	f04f 0c0a 	mov.w	ip, #10
 80017ea:	4621      	mov	r1, r4
 80017ec:	f811 3b01 	ldrb.w	r3, [r1], #1
 80017f0:	3b30      	subs	r3, #48	; 0x30
 80017f2:	2b09      	cmp	r3, #9
 80017f4:	d94e      	bls.n	8001894 <_vfiprintf_r+0x1c4>
 80017f6:	b1b0      	cbz	r0, 8001826 <_vfiprintf_r+0x156>
 80017f8:	9207      	str	r2, [sp, #28]
 80017fa:	e014      	b.n	8001826 <_vfiprintf_r+0x156>
 80017fc:	eba0 0308 	sub.w	r3, r0, r8
 8001800:	fa09 f303 	lsl.w	r3, r9, r3
 8001804:	4313      	orrs	r3, r2
 8001806:	9304      	str	r3, [sp, #16]
 8001808:	46a2      	mov	sl, r4
 800180a:	e7d2      	b.n	80017b2 <_vfiprintf_r+0xe2>
 800180c:	9b03      	ldr	r3, [sp, #12]
 800180e:	1d19      	adds	r1, r3, #4
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	9103      	str	r1, [sp, #12]
 8001814:	2b00      	cmp	r3, #0
 8001816:	bfbb      	ittet	lt
 8001818:	425b      	neglt	r3, r3
 800181a:	f042 0202 	orrlt.w	r2, r2, #2
 800181e:	9307      	strge	r3, [sp, #28]
 8001820:	9307      	strlt	r3, [sp, #28]
 8001822:	bfb8      	it	lt
 8001824:	9204      	strlt	r2, [sp, #16]
 8001826:	7823      	ldrb	r3, [r4, #0]
 8001828:	2b2e      	cmp	r3, #46	; 0x2e
 800182a:	d10c      	bne.n	8001846 <_vfiprintf_r+0x176>
 800182c:	7863      	ldrb	r3, [r4, #1]
 800182e:	2b2a      	cmp	r3, #42	; 0x2a
 8001830:	d135      	bne.n	800189e <_vfiprintf_r+0x1ce>
 8001832:	9b03      	ldr	r3, [sp, #12]
 8001834:	1d1a      	adds	r2, r3, #4
 8001836:	681b      	ldr	r3, [r3, #0]
 8001838:	9203      	str	r2, [sp, #12]
 800183a:	2b00      	cmp	r3, #0
 800183c:	bfb8      	it	lt
 800183e:	f04f 33ff 	movlt.w	r3, #4294967295
 8001842:	3402      	adds	r4, #2
 8001844:	9305      	str	r3, [sp, #20]
 8001846:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8001920 <_vfiprintf_r+0x250>
 800184a:	7821      	ldrb	r1, [r4, #0]
 800184c:	2203      	movs	r2, #3
 800184e:	4650      	mov	r0, sl
 8001850:	f7fe fcce 	bl	80001f0 <memchr>
 8001854:	b140      	cbz	r0, 8001868 <_vfiprintf_r+0x198>
 8001856:	2340      	movs	r3, #64	; 0x40
 8001858:	eba0 000a 	sub.w	r0, r0, sl
 800185c:	fa03 f000 	lsl.w	r0, r3, r0
 8001860:	9b04      	ldr	r3, [sp, #16]
 8001862:	4303      	orrs	r3, r0
 8001864:	3401      	adds	r4, #1
 8001866:	9304      	str	r3, [sp, #16]
 8001868:	f814 1b01 	ldrb.w	r1, [r4], #1
 800186c:	482d      	ldr	r0, [pc, #180]	; (8001924 <_vfiprintf_r+0x254>)
 800186e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001872:	2206      	movs	r2, #6
 8001874:	f7fe fcbc 	bl	80001f0 <memchr>
 8001878:	2800      	cmp	r0, #0
 800187a:	d03f      	beq.n	80018fc <_vfiprintf_r+0x22c>
 800187c:	4b2a      	ldr	r3, [pc, #168]	; (8001928 <_vfiprintf_r+0x258>)
 800187e:	bb1b      	cbnz	r3, 80018c8 <_vfiprintf_r+0x1f8>
 8001880:	9b03      	ldr	r3, [sp, #12]
 8001882:	3307      	adds	r3, #7
 8001884:	f023 0307 	bic.w	r3, r3, #7
 8001888:	3308      	adds	r3, #8
 800188a:	9303      	str	r3, [sp, #12]
 800188c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800188e:	443b      	add	r3, r7
 8001890:	9309      	str	r3, [sp, #36]	; 0x24
 8001892:	e767      	b.n	8001764 <_vfiprintf_r+0x94>
 8001894:	fb0c 3202 	mla	r2, ip, r2, r3
 8001898:	460c      	mov	r4, r1
 800189a:	2001      	movs	r0, #1
 800189c:	e7a5      	b.n	80017ea <_vfiprintf_r+0x11a>
 800189e:	2300      	movs	r3, #0
 80018a0:	3401      	adds	r4, #1
 80018a2:	9305      	str	r3, [sp, #20]
 80018a4:	4619      	mov	r1, r3
 80018a6:	f04f 0c0a 	mov.w	ip, #10
 80018aa:	4620      	mov	r0, r4
 80018ac:	f810 2b01 	ldrb.w	r2, [r0], #1
 80018b0:	3a30      	subs	r2, #48	; 0x30
 80018b2:	2a09      	cmp	r2, #9
 80018b4:	d903      	bls.n	80018be <_vfiprintf_r+0x1ee>
 80018b6:	2b00      	cmp	r3, #0
 80018b8:	d0c5      	beq.n	8001846 <_vfiprintf_r+0x176>
 80018ba:	9105      	str	r1, [sp, #20]
 80018bc:	e7c3      	b.n	8001846 <_vfiprintf_r+0x176>
 80018be:	fb0c 2101 	mla	r1, ip, r1, r2
 80018c2:	4604      	mov	r4, r0
 80018c4:	2301      	movs	r3, #1
 80018c6:	e7f0      	b.n	80018aa <_vfiprintf_r+0x1da>
 80018c8:	ab03      	add	r3, sp, #12
 80018ca:	9300      	str	r3, [sp, #0]
 80018cc:	462a      	mov	r2, r5
 80018ce:	4b17      	ldr	r3, [pc, #92]	; (800192c <_vfiprintf_r+0x25c>)
 80018d0:	a904      	add	r1, sp, #16
 80018d2:	4630      	mov	r0, r6
 80018d4:	f3af 8000 	nop.w
 80018d8:	4607      	mov	r7, r0
 80018da:	1c78      	adds	r0, r7, #1
 80018dc:	d1d6      	bne.n	800188c <_vfiprintf_r+0x1bc>
 80018de:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80018e0:	07d9      	lsls	r1, r3, #31
 80018e2:	d405      	bmi.n	80018f0 <_vfiprintf_r+0x220>
 80018e4:	89ab      	ldrh	r3, [r5, #12]
 80018e6:	059a      	lsls	r2, r3, #22
 80018e8:	d402      	bmi.n	80018f0 <_vfiprintf_r+0x220>
 80018ea:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80018ec:	f7ff fd83 	bl	80013f6 <__retarget_lock_release_recursive>
 80018f0:	89ab      	ldrh	r3, [r5, #12]
 80018f2:	065b      	lsls	r3, r3, #25
 80018f4:	f53f af12 	bmi.w	800171c <_vfiprintf_r+0x4c>
 80018f8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80018fa:	e711      	b.n	8001720 <_vfiprintf_r+0x50>
 80018fc:	ab03      	add	r3, sp, #12
 80018fe:	9300      	str	r3, [sp, #0]
 8001900:	462a      	mov	r2, r5
 8001902:	4b0a      	ldr	r3, [pc, #40]	; (800192c <_vfiprintf_r+0x25c>)
 8001904:	a904      	add	r1, sp, #16
 8001906:	4630      	mov	r0, r6
 8001908:	f000 f880 	bl	8001a0c <_printf_i>
 800190c:	e7e4      	b.n	80018d8 <_vfiprintf_r+0x208>
 800190e:	bf00      	nop
 8001910:	08002400 	.word	0x08002400
 8001914:	08002420 	.word	0x08002420
 8001918:	080023e0 	.word	0x080023e0
 800191c:	08002440 	.word	0x08002440
 8001920:	08002446 	.word	0x08002446
 8001924:	0800244a 	.word	0x0800244a
 8001928:	00000000 	.word	0x00000000
 800192c:	080016ab 	.word	0x080016ab

08001930 <_printf_common>:
 8001930:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001934:	4616      	mov	r6, r2
 8001936:	4699      	mov	r9, r3
 8001938:	688a      	ldr	r2, [r1, #8]
 800193a:	690b      	ldr	r3, [r1, #16]
 800193c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001940:	4293      	cmp	r3, r2
 8001942:	bfb8      	it	lt
 8001944:	4613      	movlt	r3, r2
 8001946:	6033      	str	r3, [r6, #0]
 8001948:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800194c:	4607      	mov	r7, r0
 800194e:	460c      	mov	r4, r1
 8001950:	b10a      	cbz	r2, 8001956 <_printf_common+0x26>
 8001952:	3301      	adds	r3, #1
 8001954:	6033      	str	r3, [r6, #0]
 8001956:	6823      	ldr	r3, [r4, #0]
 8001958:	0699      	lsls	r1, r3, #26
 800195a:	bf42      	ittt	mi
 800195c:	6833      	ldrmi	r3, [r6, #0]
 800195e:	3302      	addmi	r3, #2
 8001960:	6033      	strmi	r3, [r6, #0]
 8001962:	6825      	ldr	r5, [r4, #0]
 8001964:	f015 0506 	ands.w	r5, r5, #6
 8001968:	d106      	bne.n	8001978 <_printf_common+0x48>
 800196a:	f104 0a19 	add.w	sl, r4, #25
 800196e:	68e3      	ldr	r3, [r4, #12]
 8001970:	6832      	ldr	r2, [r6, #0]
 8001972:	1a9b      	subs	r3, r3, r2
 8001974:	42ab      	cmp	r3, r5
 8001976:	dc26      	bgt.n	80019c6 <_printf_common+0x96>
 8001978:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800197c:	1e13      	subs	r3, r2, #0
 800197e:	6822      	ldr	r2, [r4, #0]
 8001980:	bf18      	it	ne
 8001982:	2301      	movne	r3, #1
 8001984:	0692      	lsls	r2, r2, #26
 8001986:	d42b      	bmi.n	80019e0 <_printf_common+0xb0>
 8001988:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800198c:	4649      	mov	r1, r9
 800198e:	4638      	mov	r0, r7
 8001990:	47c0      	blx	r8
 8001992:	3001      	adds	r0, #1
 8001994:	d01e      	beq.n	80019d4 <_printf_common+0xa4>
 8001996:	6823      	ldr	r3, [r4, #0]
 8001998:	68e5      	ldr	r5, [r4, #12]
 800199a:	6832      	ldr	r2, [r6, #0]
 800199c:	f003 0306 	and.w	r3, r3, #6
 80019a0:	2b04      	cmp	r3, #4
 80019a2:	bf08      	it	eq
 80019a4:	1aad      	subeq	r5, r5, r2
 80019a6:	68a3      	ldr	r3, [r4, #8]
 80019a8:	6922      	ldr	r2, [r4, #16]
 80019aa:	bf0c      	ite	eq
 80019ac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80019b0:	2500      	movne	r5, #0
 80019b2:	4293      	cmp	r3, r2
 80019b4:	bfc4      	itt	gt
 80019b6:	1a9b      	subgt	r3, r3, r2
 80019b8:	18ed      	addgt	r5, r5, r3
 80019ba:	2600      	movs	r6, #0
 80019bc:	341a      	adds	r4, #26
 80019be:	42b5      	cmp	r5, r6
 80019c0:	d11a      	bne.n	80019f8 <_printf_common+0xc8>
 80019c2:	2000      	movs	r0, #0
 80019c4:	e008      	b.n	80019d8 <_printf_common+0xa8>
 80019c6:	2301      	movs	r3, #1
 80019c8:	4652      	mov	r2, sl
 80019ca:	4649      	mov	r1, r9
 80019cc:	4638      	mov	r0, r7
 80019ce:	47c0      	blx	r8
 80019d0:	3001      	adds	r0, #1
 80019d2:	d103      	bne.n	80019dc <_printf_common+0xac>
 80019d4:	f04f 30ff 	mov.w	r0, #4294967295
 80019d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80019dc:	3501      	adds	r5, #1
 80019de:	e7c6      	b.n	800196e <_printf_common+0x3e>
 80019e0:	18e1      	adds	r1, r4, r3
 80019e2:	1c5a      	adds	r2, r3, #1
 80019e4:	2030      	movs	r0, #48	; 0x30
 80019e6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80019ea:	4422      	add	r2, r4
 80019ec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80019f0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80019f4:	3302      	adds	r3, #2
 80019f6:	e7c7      	b.n	8001988 <_printf_common+0x58>
 80019f8:	2301      	movs	r3, #1
 80019fa:	4622      	mov	r2, r4
 80019fc:	4649      	mov	r1, r9
 80019fe:	4638      	mov	r0, r7
 8001a00:	47c0      	blx	r8
 8001a02:	3001      	adds	r0, #1
 8001a04:	d0e6      	beq.n	80019d4 <_printf_common+0xa4>
 8001a06:	3601      	adds	r6, #1
 8001a08:	e7d9      	b.n	80019be <_printf_common+0x8e>
	...

08001a0c <_printf_i>:
 8001a0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001a10:	7e0f      	ldrb	r7, [r1, #24]
 8001a12:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001a14:	2f78      	cmp	r7, #120	; 0x78
 8001a16:	4691      	mov	r9, r2
 8001a18:	4680      	mov	r8, r0
 8001a1a:	460c      	mov	r4, r1
 8001a1c:	469a      	mov	sl, r3
 8001a1e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001a22:	d807      	bhi.n	8001a34 <_printf_i+0x28>
 8001a24:	2f62      	cmp	r7, #98	; 0x62
 8001a26:	d80a      	bhi.n	8001a3e <_printf_i+0x32>
 8001a28:	2f00      	cmp	r7, #0
 8001a2a:	f000 80d8 	beq.w	8001bde <_printf_i+0x1d2>
 8001a2e:	2f58      	cmp	r7, #88	; 0x58
 8001a30:	f000 80a3 	beq.w	8001b7a <_printf_i+0x16e>
 8001a34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001a38:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001a3c:	e03a      	b.n	8001ab4 <_printf_i+0xa8>
 8001a3e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001a42:	2b15      	cmp	r3, #21
 8001a44:	d8f6      	bhi.n	8001a34 <_printf_i+0x28>
 8001a46:	a101      	add	r1, pc, #4	; (adr r1, 8001a4c <_printf_i+0x40>)
 8001a48:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001a4c:	08001aa5 	.word	0x08001aa5
 8001a50:	08001ab9 	.word	0x08001ab9
 8001a54:	08001a35 	.word	0x08001a35
 8001a58:	08001a35 	.word	0x08001a35
 8001a5c:	08001a35 	.word	0x08001a35
 8001a60:	08001a35 	.word	0x08001a35
 8001a64:	08001ab9 	.word	0x08001ab9
 8001a68:	08001a35 	.word	0x08001a35
 8001a6c:	08001a35 	.word	0x08001a35
 8001a70:	08001a35 	.word	0x08001a35
 8001a74:	08001a35 	.word	0x08001a35
 8001a78:	08001bc5 	.word	0x08001bc5
 8001a7c:	08001ae9 	.word	0x08001ae9
 8001a80:	08001ba7 	.word	0x08001ba7
 8001a84:	08001a35 	.word	0x08001a35
 8001a88:	08001a35 	.word	0x08001a35
 8001a8c:	08001be7 	.word	0x08001be7
 8001a90:	08001a35 	.word	0x08001a35
 8001a94:	08001ae9 	.word	0x08001ae9
 8001a98:	08001a35 	.word	0x08001a35
 8001a9c:	08001a35 	.word	0x08001a35
 8001aa0:	08001baf 	.word	0x08001baf
 8001aa4:	682b      	ldr	r3, [r5, #0]
 8001aa6:	1d1a      	adds	r2, r3, #4
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	602a      	str	r2, [r5, #0]
 8001aac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001ab0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001ab4:	2301      	movs	r3, #1
 8001ab6:	e0a3      	b.n	8001c00 <_printf_i+0x1f4>
 8001ab8:	6820      	ldr	r0, [r4, #0]
 8001aba:	6829      	ldr	r1, [r5, #0]
 8001abc:	0606      	lsls	r6, r0, #24
 8001abe:	f101 0304 	add.w	r3, r1, #4
 8001ac2:	d50a      	bpl.n	8001ada <_printf_i+0xce>
 8001ac4:	680e      	ldr	r6, [r1, #0]
 8001ac6:	602b      	str	r3, [r5, #0]
 8001ac8:	2e00      	cmp	r6, #0
 8001aca:	da03      	bge.n	8001ad4 <_printf_i+0xc8>
 8001acc:	232d      	movs	r3, #45	; 0x2d
 8001ace:	4276      	negs	r6, r6
 8001ad0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001ad4:	485e      	ldr	r0, [pc, #376]	; (8001c50 <_printf_i+0x244>)
 8001ad6:	230a      	movs	r3, #10
 8001ad8:	e019      	b.n	8001b0e <_printf_i+0x102>
 8001ada:	680e      	ldr	r6, [r1, #0]
 8001adc:	602b      	str	r3, [r5, #0]
 8001ade:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001ae2:	bf18      	it	ne
 8001ae4:	b236      	sxthne	r6, r6
 8001ae6:	e7ef      	b.n	8001ac8 <_printf_i+0xbc>
 8001ae8:	682b      	ldr	r3, [r5, #0]
 8001aea:	6820      	ldr	r0, [r4, #0]
 8001aec:	1d19      	adds	r1, r3, #4
 8001aee:	6029      	str	r1, [r5, #0]
 8001af0:	0601      	lsls	r1, r0, #24
 8001af2:	d501      	bpl.n	8001af8 <_printf_i+0xec>
 8001af4:	681e      	ldr	r6, [r3, #0]
 8001af6:	e002      	b.n	8001afe <_printf_i+0xf2>
 8001af8:	0646      	lsls	r6, r0, #25
 8001afa:	d5fb      	bpl.n	8001af4 <_printf_i+0xe8>
 8001afc:	881e      	ldrh	r6, [r3, #0]
 8001afe:	4854      	ldr	r0, [pc, #336]	; (8001c50 <_printf_i+0x244>)
 8001b00:	2f6f      	cmp	r7, #111	; 0x6f
 8001b02:	bf0c      	ite	eq
 8001b04:	2308      	moveq	r3, #8
 8001b06:	230a      	movne	r3, #10
 8001b08:	2100      	movs	r1, #0
 8001b0a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001b0e:	6865      	ldr	r5, [r4, #4]
 8001b10:	60a5      	str	r5, [r4, #8]
 8001b12:	2d00      	cmp	r5, #0
 8001b14:	bfa2      	ittt	ge
 8001b16:	6821      	ldrge	r1, [r4, #0]
 8001b18:	f021 0104 	bicge.w	r1, r1, #4
 8001b1c:	6021      	strge	r1, [r4, #0]
 8001b1e:	b90e      	cbnz	r6, 8001b24 <_printf_i+0x118>
 8001b20:	2d00      	cmp	r5, #0
 8001b22:	d04d      	beq.n	8001bc0 <_printf_i+0x1b4>
 8001b24:	4615      	mov	r5, r2
 8001b26:	fbb6 f1f3 	udiv	r1, r6, r3
 8001b2a:	fb03 6711 	mls	r7, r3, r1, r6
 8001b2e:	5dc7      	ldrb	r7, [r0, r7]
 8001b30:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001b34:	4637      	mov	r7, r6
 8001b36:	42bb      	cmp	r3, r7
 8001b38:	460e      	mov	r6, r1
 8001b3a:	d9f4      	bls.n	8001b26 <_printf_i+0x11a>
 8001b3c:	2b08      	cmp	r3, #8
 8001b3e:	d10b      	bne.n	8001b58 <_printf_i+0x14c>
 8001b40:	6823      	ldr	r3, [r4, #0]
 8001b42:	07de      	lsls	r6, r3, #31
 8001b44:	d508      	bpl.n	8001b58 <_printf_i+0x14c>
 8001b46:	6923      	ldr	r3, [r4, #16]
 8001b48:	6861      	ldr	r1, [r4, #4]
 8001b4a:	4299      	cmp	r1, r3
 8001b4c:	bfde      	ittt	le
 8001b4e:	2330      	movle	r3, #48	; 0x30
 8001b50:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001b54:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001b58:	1b52      	subs	r2, r2, r5
 8001b5a:	6122      	str	r2, [r4, #16]
 8001b5c:	f8cd a000 	str.w	sl, [sp]
 8001b60:	464b      	mov	r3, r9
 8001b62:	aa03      	add	r2, sp, #12
 8001b64:	4621      	mov	r1, r4
 8001b66:	4640      	mov	r0, r8
 8001b68:	f7ff fee2 	bl	8001930 <_printf_common>
 8001b6c:	3001      	adds	r0, #1
 8001b6e:	d14c      	bne.n	8001c0a <_printf_i+0x1fe>
 8001b70:	f04f 30ff 	mov.w	r0, #4294967295
 8001b74:	b004      	add	sp, #16
 8001b76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001b7a:	4835      	ldr	r0, [pc, #212]	; (8001c50 <_printf_i+0x244>)
 8001b7c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001b80:	6829      	ldr	r1, [r5, #0]
 8001b82:	6823      	ldr	r3, [r4, #0]
 8001b84:	f851 6b04 	ldr.w	r6, [r1], #4
 8001b88:	6029      	str	r1, [r5, #0]
 8001b8a:	061d      	lsls	r5, r3, #24
 8001b8c:	d514      	bpl.n	8001bb8 <_printf_i+0x1ac>
 8001b8e:	07df      	lsls	r7, r3, #31
 8001b90:	bf44      	itt	mi
 8001b92:	f043 0320 	orrmi.w	r3, r3, #32
 8001b96:	6023      	strmi	r3, [r4, #0]
 8001b98:	b91e      	cbnz	r6, 8001ba2 <_printf_i+0x196>
 8001b9a:	6823      	ldr	r3, [r4, #0]
 8001b9c:	f023 0320 	bic.w	r3, r3, #32
 8001ba0:	6023      	str	r3, [r4, #0]
 8001ba2:	2310      	movs	r3, #16
 8001ba4:	e7b0      	b.n	8001b08 <_printf_i+0xfc>
 8001ba6:	6823      	ldr	r3, [r4, #0]
 8001ba8:	f043 0320 	orr.w	r3, r3, #32
 8001bac:	6023      	str	r3, [r4, #0]
 8001bae:	2378      	movs	r3, #120	; 0x78
 8001bb0:	4828      	ldr	r0, [pc, #160]	; (8001c54 <_printf_i+0x248>)
 8001bb2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001bb6:	e7e3      	b.n	8001b80 <_printf_i+0x174>
 8001bb8:	0659      	lsls	r1, r3, #25
 8001bba:	bf48      	it	mi
 8001bbc:	b2b6      	uxthmi	r6, r6
 8001bbe:	e7e6      	b.n	8001b8e <_printf_i+0x182>
 8001bc0:	4615      	mov	r5, r2
 8001bc2:	e7bb      	b.n	8001b3c <_printf_i+0x130>
 8001bc4:	682b      	ldr	r3, [r5, #0]
 8001bc6:	6826      	ldr	r6, [r4, #0]
 8001bc8:	6961      	ldr	r1, [r4, #20]
 8001bca:	1d18      	adds	r0, r3, #4
 8001bcc:	6028      	str	r0, [r5, #0]
 8001bce:	0635      	lsls	r5, r6, #24
 8001bd0:	681b      	ldr	r3, [r3, #0]
 8001bd2:	d501      	bpl.n	8001bd8 <_printf_i+0x1cc>
 8001bd4:	6019      	str	r1, [r3, #0]
 8001bd6:	e002      	b.n	8001bde <_printf_i+0x1d2>
 8001bd8:	0670      	lsls	r0, r6, #25
 8001bda:	d5fb      	bpl.n	8001bd4 <_printf_i+0x1c8>
 8001bdc:	8019      	strh	r1, [r3, #0]
 8001bde:	2300      	movs	r3, #0
 8001be0:	6123      	str	r3, [r4, #16]
 8001be2:	4615      	mov	r5, r2
 8001be4:	e7ba      	b.n	8001b5c <_printf_i+0x150>
 8001be6:	682b      	ldr	r3, [r5, #0]
 8001be8:	1d1a      	adds	r2, r3, #4
 8001bea:	602a      	str	r2, [r5, #0]
 8001bec:	681d      	ldr	r5, [r3, #0]
 8001bee:	6862      	ldr	r2, [r4, #4]
 8001bf0:	2100      	movs	r1, #0
 8001bf2:	4628      	mov	r0, r5
 8001bf4:	f7fe fafc 	bl	80001f0 <memchr>
 8001bf8:	b108      	cbz	r0, 8001bfe <_printf_i+0x1f2>
 8001bfa:	1b40      	subs	r0, r0, r5
 8001bfc:	6060      	str	r0, [r4, #4]
 8001bfe:	6863      	ldr	r3, [r4, #4]
 8001c00:	6123      	str	r3, [r4, #16]
 8001c02:	2300      	movs	r3, #0
 8001c04:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c08:	e7a8      	b.n	8001b5c <_printf_i+0x150>
 8001c0a:	6923      	ldr	r3, [r4, #16]
 8001c0c:	462a      	mov	r2, r5
 8001c0e:	4649      	mov	r1, r9
 8001c10:	4640      	mov	r0, r8
 8001c12:	47d0      	blx	sl
 8001c14:	3001      	adds	r0, #1
 8001c16:	d0ab      	beq.n	8001b70 <_printf_i+0x164>
 8001c18:	6823      	ldr	r3, [r4, #0]
 8001c1a:	079b      	lsls	r3, r3, #30
 8001c1c:	d413      	bmi.n	8001c46 <_printf_i+0x23a>
 8001c1e:	68e0      	ldr	r0, [r4, #12]
 8001c20:	9b03      	ldr	r3, [sp, #12]
 8001c22:	4298      	cmp	r0, r3
 8001c24:	bfb8      	it	lt
 8001c26:	4618      	movlt	r0, r3
 8001c28:	e7a4      	b.n	8001b74 <_printf_i+0x168>
 8001c2a:	2301      	movs	r3, #1
 8001c2c:	4632      	mov	r2, r6
 8001c2e:	4649      	mov	r1, r9
 8001c30:	4640      	mov	r0, r8
 8001c32:	47d0      	blx	sl
 8001c34:	3001      	adds	r0, #1
 8001c36:	d09b      	beq.n	8001b70 <_printf_i+0x164>
 8001c38:	3501      	adds	r5, #1
 8001c3a:	68e3      	ldr	r3, [r4, #12]
 8001c3c:	9903      	ldr	r1, [sp, #12]
 8001c3e:	1a5b      	subs	r3, r3, r1
 8001c40:	42ab      	cmp	r3, r5
 8001c42:	dcf2      	bgt.n	8001c2a <_printf_i+0x21e>
 8001c44:	e7eb      	b.n	8001c1e <_printf_i+0x212>
 8001c46:	2500      	movs	r5, #0
 8001c48:	f104 0619 	add.w	r6, r4, #25
 8001c4c:	e7f5      	b.n	8001c3a <_printf_i+0x22e>
 8001c4e:	bf00      	nop
 8001c50:	08002451 	.word	0x08002451
 8001c54:	08002462 	.word	0x08002462

08001c58 <_sbrk_r>:
 8001c58:	b538      	push	{r3, r4, r5, lr}
 8001c5a:	4d06      	ldr	r5, [pc, #24]	; (8001c74 <_sbrk_r+0x1c>)
 8001c5c:	2300      	movs	r3, #0
 8001c5e:	4604      	mov	r4, r0
 8001c60:	4608      	mov	r0, r1
 8001c62:	602b      	str	r3, [r5, #0]
 8001c64:	f000 f9b8 	bl	8001fd8 <_sbrk>
 8001c68:	1c43      	adds	r3, r0, #1
 8001c6a:	d102      	bne.n	8001c72 <_sbrk_r+0x1a>
 8001c6c:	682b      	ldr	r3, [r5, #0]
 8001c6e:	b103      	cbz	r3, 8001c72 <_sbrk_r+0x1a>
 8001c70:	6023      	str	r3, [r4, #0]
 8001c72:	bd38      	pop	{r3, r4, r5, pc}
 8001c74:	20000098 	.word	0x20000098

08001c78 <__sread>:
 8001c78:	b510      	push	{r4, lr}
 8001c7a:	460c      	mov	r4, r1
 8001c7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001c80:	f000 f8a0 	bl	8001dc4 <_read_r>
 8001c84:	2800      	cmp	r0, #0
 8001c86:	bfab      	itete	ge
 8001c88:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001c8a:	89a3      	ldrhlt	r3, [r4, #12]
 8001c8c:	181b      	addge	r3, r3, r0
 8001c8e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001c92:	bfac      	ite	ge
 8001c94:	6563      	strge	r3, [r4, #84]	; 0x54
 8001c96:	81a3      	strhlt	r3, [r4, #12]
 8001c98:	bd10      	pop	{r4, pc}

08001c9a <__swrite>:
 8001c9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001c9e:	461f      	mov	r7, r3
 8001ca0:	898b      	ldrh	r3, [r1, #12]
 8001ca2:	05db      	lsls	r3, r3, #23
 8001ca4:	4605      	mov	r5, r0
 8001ca6:	460c      	mov	r4, r1
 8001ca8:	4616      	mov	r6, r2
 8001caa:	d505      	bpl.n	8001cb8 <__swrite+0x1e>
 8001cac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001cb0:	2302      	movs	r3, #2
 8001cb2:	2200      	movs	r2, #0
 8001cb4:	f000 f868 	bl	8001d88 <_lseek_r>
 8001cb8:	89a3      	ldrh	r3, [r4, #12]
 8001cba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001cbe:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001cc2:	81a3      	strh	r3, [r4, #12]
 8001cc4:	4632      	mov	r2, r6
 8001cc6:	463b      	mov	r3, r7
 8001cc8:	4628      	mov	r0, r5
 8001cca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001cce:	f000 b817 	b.w	8001d00 <_write_r>

08001cd2 <__sseek>:
 8001cd2:	b510      	push	{r4, lr}
 8001cd4:	460c      	mov	r4, r1
 8001cd6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001cda:	f000 f855 	bl	8001d88 <_lseek_r>
 8001cde:	1c43      	adds	r3, r0, #1
 8001ce0:	89a3      	ldrh	r3, [r4, #12]
 8001ce2:	bf15      	itete	ne
 8001ce4:	6560      	strne	r0, [r4, #84]	; 0x54
 8001ce6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001cea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001cee:	81a3      	strheq	r3, [r4, #12]
 8001cf0:	bf18      	it	ne
 8001cf2:	81a3      	strhne	r3, [r4, #12]
 8001cf4:	bd10      	pop	{r4, pc}

08001cf6 <__sclose>:
 8001cf6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001cfa:	f000 b813 	b.w	8001d24 <_close_r>
	...

08001d00 <_write_r>:
 8001d00:	b538      	push	{r3, r4, r5, lr}
 8001d02:	4d07      	ldr	r5, [pc, #28]	; (8001d20 <_write_r+0x20>)
 8001d04:	4604      	mov	r4, r0
 8001d06:	4608      	mov	r0, r1
 8001d08:	4611      	mov	r1, r2
 8001d0a:	2200      	movs	r2, #0
 8001d0c:	602a      	str	r2, [r5, #0]
 8001d0e:	461a      	mov	r2, r3
 8001d10:	f000 f90f 	bl	8001f32 <_write>
 8001d14:	1c43      	adds	r3, r0, #1
 8001d16:	d102      	bne.n	8001d1e <_write_r+0x1e>
 8001d18:	682b      	ldr	r3, [r5, #0]
 8001d1a:	b103      	cbz	r3, 8001d1e <_write_r+0x1e>
 8001d1c:	6023      	str	r3, [r4, #0]
 8001d1e:	bd38      	pop	{r3, r4, r5, pc}
 8001d20:	20000098 	.word	0x20000098

08001d24 <_close_r>:
 8001d24:	b538      	push	{r3, r4, r5, lr}
 8001d26:	4d06      	ldr	r5, [pc, #24]	; (8001d40 <_close_r+0x1c>)
 8001d28:	2300      	movs	r3, #0
 8001d2a:	4604      	mov	r4, r0
 8001d2c:	4608      	mov	r0, r1
 8001d2e:	602b      	str	r3, [r5, #0]
 8001d30:	f000 f92c 	bl	8001f8c <_close>
 8001d34:	1c43      	adds	r3, r0, #1
 8001d36:	d102      	bne.n	8001d3e <_close_r+0x1a>
 8001d38:	682b      	ldr	r3, [r5, #0]
 8001d3a:	b103      	cbz	r3, 8001d3e <_close_r+0x1a>
 8001d3c:	6023      	str	r3, [r4, #0]
 8001d3e:	bd38      	pop	{r3, r4, r5, pc}
 8001d40:	20000098 	.word	0x20000098

08001d44 <_fstat_r>:
 8001d44:	b538      	push	{r3, r4, r5, lr}
 8001d46:	4d07      	ldr	r5, [pc, #28]	; (8001d64 <_fstat_r+0x20>)
 8001d48:	2300      	movs	r3, #0
 8001d4a:	4604      	mov	r4, r0
 8001d4c:	4608      	mov	r0, r1
 8001d4e:	4611      	mov	r1, r2
 8001d50:	602b      	str	r3, [r5, #0]
 8001d52:	f000 f986 	bl	8002062 <_fstat>
 8001d56:	1c43      	adds	r3, r0, #1
 8001d58:	d102      	bne.n	8001d60 <_fstat_r+0x1c>
 8001d5a:	682b      	ldr	r3, [r5, #0]
 8001d5c:	b103      	cbz	r3, 8001d60 <_fstat_r+0x1c>
 8001d5e:	6023      	str	r3, [r4, #0]
 8001d60:	bd38      	pop	{r3, r4, r5, pc}
 8001d62:	bf00      	nop
 8001d64:	20000098 	.word	0x20000098

08001d68 <_isatty_r>:
 8001d68:	b538      	push	{r3, r4, r5, lr}
 8001d6a:	4d06      	ldr	r5, [pc, #24]	; (8001d84 <_isatty_r+0x1c>)
 8001d6c:	2300      	movs	r3, #0
 8001d6e:	4604      	mov	r4, r0
 8001d70:	4608      	mov	r0, r1
 8001d72:	602b      	str	r3, [r5, #0]
 8001d74:	f000 fadc 	bl	8002330 <_isatty>
 8001d78:	1c43      	adds	r3, r0, #1
 8001d7a:	d102      	bne.n	8001d82 <_isatty_r+0x1a>
 8001d7c:	682b      	ldr	r3, [r5, #0]
 8001d7e:	b103      	cbz	r3, 8001d82 <_isatty_r+0x1a>
 8001d80:	6023      	str	r3, [r4, #0]
 8001d82:	bd38      	pop	{r3, r4, r5, pc}
 8001d84:	20000098 	.word	0x20000098

08001d88 <_lseek_r>:
 8001d88:	b538      	push	{r3, r4, r5, lr}
 8001d8a:	4d07      	ldr	r5, [pc, #28]	; (8001da8 <_lseek_r+0x20>)
 8001d8c:	4604      	mov	r4, r0
 8001d8e:	4608      	mov	r0, r1
 8001d90:	4611      	mov	r1, r2
 8001d92:	2200      	movs	r2, #0
 8001d94:	602a      	str	r2, [r5, #0]
 8001d96:	461a      	mov	r2, r3
 8001d98:	f000 f8b9 	bl	8001f0e <_lseek>
 8001d9c:	1c43      	adds	r3, r0, #1
 8001d9e:	d102      	bne.n	8001da6 <_lseek_r+0x1e>
 8001da0:	682b      	ldr	r3, [r5, #0]
 8001da2:	b103      	cbz	r3, 8001da6 <_lseek_r+0x1e>
 8001da4:	6023      	str	r3, [r4, #0]
 8001da6:	bd38      	pop	{r3, r4, r5, pc}
 8001da8:	20000098 	.word	0x20000098

08001dac <__malloc_lock>:
 8001dac:	4801      	ldr	r0, [pc, #4]	; (8001db4 <__malloc_lock+0x8>)
 8001dae:	f7ff bb21 	b.w	80013f4 <__retarget_lock_acquire_recursive>
 8001db2:	bf00      	nop
 8001db4:	2000008c 	.word	0x2000008c

08001db8 <__malloc_unlock>:
 8001db8:	4801      	ldr	r0, [pc, #4]	; (8001dc0 <__malloc_unlock+0x8>)
 8001dba:	f7ff bb1c 	b.w	80013f6 <__retarget_lock_release_recursive>
 8001dbe:	bf00      	nop
 8001dc0:	2000008c 	.word	0x2000008c

08001dc4 <_read_r>:
 8001dc4:	b538      	push	{r3, r4, r5, lr}
 8001dc6:	4d07      	ldr	r5, [pc, #28]	; (8001de4 <_read_r+0x20>)
 8001dc8:	4604      	mov	r4, r0
 8001dca:	4608      	mov	r0, r1
 8001dcc:	4611      	mov	r1, r2
 8001dce:	2200      	movs	r2, #0
 8001dd0:	602a      	str	r2, [r5, #0]
 8001dd2:	461a      	mov	r2, r3
 8001dd4:	f000 f845 	bl	8001e62 <_read>
 8001dd8:	1c43      	adds	r3, r0, #1
 8001dda:	d102      	bne.n	8001de2 <_read_r+0x1e>
 8001ddc:	682b      	ldr	r3, [r5, #0]
 8001dde:	b103      	cbz	r3, 8001de2 <_read_r+0x1e>
 8001de0:	6023      	str	r3, [r4, #0]
 8001de2:	bd38      	pop	{r3, r4, r5, pc}
 8001de4:	20000098 	.word	0x20000098

08001de8 <findslot>:
 8001de8:	4b0a      	ldr	r3, [pc, #40]	; (8001e14 <findslot+0x2c>)
 8001dea:	b510      	push	{r4, lr}
 8001dec:	4604      	mov	r4, r0
 8001dee:	6818      	ldr	r0, [r3, #0]
 8001df0:	b118      	cbz	r0, 8001dfa <findslot+0x12>
 8001df2:	6983      	ldr	r3, [r0, #24]
 8001df4:	b90b      	cbnz	r3, 8001dfa <findslot+0x12>
 8001df6:	f7ff fa5f 	bl	80012b8 <__sinit>
 8001dfa:	2c13      	cmp	r4, #19
 8001dfc:	d807      	bhi.n	8001e0e <findslot+0x26>
 8001dfe:	4806      	ldr	r0, [pc, #24]	; (8001e18 <findslot+0x30>)
 8001e00:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8001e04:	3201      	adds	r2, #1
 8001e06:	d002      	beq.n	8001e0e <findslot+0x26>
 8001e08:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8001e0c:	bd10      	pop	{r4, pc}
 8001e0e:	2000      	movs	r0, #0
 8001e10:	e7fc      	b.n	8001e0c <findslot+0x24>
 8001e12:	bf00      	nop
 8001e14:	20000000 	.word	0x20000000
 8001e18:	200000ac 	.word	0x200000ac

08001e1c <error>:
 8001e1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001e1e:	4604      	mov	r4, r0
 8001e20:	f000 faa2 	bl	8002368 <__errno>
 8001e24:	2613      	movs	r6, #19
 8001e26:	4605      	mov	r5, r0
 8001e28:	2700      	movs	r7, #0
 8001e2a:	4630      	mov	r0, r6
 8001e2c:	4639      	mov	r1, r7
 8001e2e:	beab      	bkpt	0x00ab
 8001e30:	4606      	mov	r6, r0
 8001e32:	602e      	str	r6, [r5, #0]
 8001e34:	4620      	mov	r0, r4
 8001e36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001e38 <checkerror>:
 8001e38:	1c43      	adds	r3, r0, #1
 8001e3a:	d101      	bne.n	8001e40 <checkerror+0x8>
 8001e3c:	f7ff bfee 	b.w	8001e1c <error>
 8001e40:	4770      	bx	lr

08001e42 <_swiread>:
 8001e42:	b530      	push	{r4, r5, lr}
 8001e44:	b085      	sub	sp, #20
 8001e46:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001e4a:	9203      	str	r2, [sp, #12]
 8001e4c:	2406      	movs	r4, #6
 8001e4e:	ad01      	add	r5, sp, #4
 8001e50:	4620      	mov	r0, r4
 8001e52:	4629      	mov	r1, r5
 8001e54:	beab      	bkpt	0x00ab
 8001e56:	4604      	mov	r4, r0
 8001e58:	4620      	mov	r0, r4
 8001e5a:	f7ff ffed 	bl	8001e38 <checkerror>
 8001e5e:	b005      	add	sp, #20
 8001e60:	bd30      	pop	{r4, r5, pc}

08001e62 <_read>:
 8001e62:	b570      	push	{r4, r5, r6, lr}
 8001e64:	460e      	mov	r6, r1
 8001e66:	4615      	mov	r5, r2
 8001e68:	f7ff ffbe 	bl	8001de8 <findslot>
 8001e6c:	4604      	mov	r4, r0
 8001e6e:	b930      	cbnz	r0, 8001e7e <_read+0x1c>
 8001e70:	f000 fa7a 	bl	8002368 <__errno>
 8001e74:	2309      	movs	r3, #9
 8001e76:	6003      	str	r3, [r0, #0]
 8001e78:	f04f 30ff 	mov.w	r0, #4294967295
 8001e7c:	bd70      	pop	{r4, r5, r6, pc}
 8001e7e:	6800      	ldr	r0, [r0, #0]
 8001e80:	462a      	mov	r2, r5
 8001e82:	4631      	mov	r1, r6
 8001e84:	f7ff ffdd 	bl	8001e42 <_swiread>
 8001e88:	1c43      	adds	r3, r0, #1
 8001e8a:	bf1f      	itttt	ne
 8001e8c:	6863      	ldrne	r3, [r4, #4]
 8001e8e:	1a28      	subne	r0, r5, r0
 8001e90:	181b      	addne	r3, r3, r0
 8001e92:	6063      	strne	r3, [r4, #4]
 8001e94:	e7f2      	b.n	8001e7c <_read+0x1a>

08001e96 <_swilseek>:
 8001e96:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001e98:	460c      	mov	r4, r1
 8001e9a:	4616      	mov	r6, r2
 8001e9c:	f7ff ffa4 	bl	8001de8 <findslot>
 8001ea0:	4605      	mov	r5, r0
 8001ea2:	b940      	cbnz	r0, 8001eb6 <_swilseek+0x20>
 8001ea4:	f000 fa60 	bl	8002368 <__errno>
 8001ea8:	2309      	movs	r3, #9
 8001eaa:	6003      	str	r3, [r0, #0]
 8001eac:	f04f 34ff 	mov.w	r4, #4294967295
 8001eb0:	4620      	mov	r0, r4
 8001eb2:	b003      	add	sp, #12
 8001eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001eb6:	2e02      	cmp	r6, #2
 8001eb8:	d903      	bls.n	8001ec2 <_swilseek+0x2c>
 8001eba:	f000 fa55 	bl	8002368 <__errno>
 8001ebe:	2316      	movs	r3, #22
 8001ec0:	e7f3      	b.n	8001eaa <_swilseek+0x14>
 8001ec2:	2e01      	cmp	r6, #1
 8001ec4:	d112      	bne.n	8001eec <_swilseek+0x56>
 8001ec6:	6843      	ldr	r3, [r0, #4]
 8001ec8:	18e4      	adds	r4, r4, r3
 8001eca:	d4f6      	bmi.n	8001eba <_swilseek+0x24>
 8001ecc:	682b      	ldr	r3, [r5, #0]
 8001ece:	260a      	movs	r6, #10
 8001ed0:	e9cd 3400 	strd	r3, r4, [sp]
 8001ed4:	466f      	mov	r7, sp
 8001ed6:	4630      	mov	r0, r6
 8001ed8:	4639      	mov	r1, r7
 8001eda:	beab      	bkpt	0x00ab
 8001edc:	4606      	mov	r6, r0
 8001ede:	4630      	mov	r0, r6
 8001ee0:	f7ff ffaa 	bl	8001e38 <checkerror>
 8001ee4:	2800      	cmp	r0, #0
 8001ee6:	dbe1      	blt.n	8001eac <_swilseek+0x16>
 8001ee8:	606c      	str	r4, [r5, #4]
 8001eea:	e7e1      	b.n	8001eb0 <_swilseek+0x1a>
 8001eec:	2e02      	cmp	r6, #2
 8001eee:	d1ed      	bne.n	8001ecc <_swilseek+0x36>
 8001ef0:	6803      	ldr	r3, [r0, #0]
 8001ef2:	9300      	str	r3, [sp, #0]
 8001ef4:	260c      	movs	r6, #12
 8001ef6:	466f      	mov	r7, sp
 8001ef8:	4630      	mov	r0, r6
 8001efa:	4639      	mov	r1, r7
 8001efc:	beab      	bkpt	0x00ab
 8001efe:	4606      	mov	r6, r0
 8001f00:	4630      	mov	r0, r6
 8001f02:	f7ff ff99 	bl	8001e38 <checkerror>
 8001f06:	1c43      	adds	r3, r0, #1
 8001f08:	d0d0      	beq.n	8001eac <_swilseek+0x16>
 8001f0a:	4404      	add	r4, r0
 8001f0c:	e7de      	b.n	8001ecc <_swilseek+0x36>

08001f0e <_lseek>:
 8001f0e:	f7ff bfc2 	b.w	8001e96 <_swilseek>

08001f12 <_swiwrite>:
 8001f12:	b530      	push	{r4, r5, lr}
 8001f14:	b085      	sub	sp, #20
 8001f16:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001f1a:	9203      	str	r2, [sp, #12]
 8001f1c:	2405      	movs	r4, #5
 8001f1e:	ad01      	add	r5, sp, #4
 8001f20:	4620      	mov	r0, r4
 8001f22:	4629      	mov	r1, r5
 8001f24:	beab      	bkpt	0x00ab
 8001f26:	4604      	mov	r4, r0
 8001f28:	4620      	mov	r0, r4
 8001f2a:	f7ff ff85 	bl	8001e38 <checkerror>
 8001f2e:	b005      	add	sp, #20
 8001f30:	bd30      	pop	{r4, r5, pc}

08001f32 <_write>:
 8001f32:	b570      	push	{r4, r5, r6, lr}
 8001f34:	460e      	mov	r6, r1
 8001f36:	4615      	mov	r5, r2
 8001f38:	f7ff ff56 	bl	8001de8 <findslot>
 8001f3c:	4604      	mov	r4, r0
 8001f3e:	b930      	cbnz	r0, 8001f4e <_write+0x1c>
 8001f40:	f000 fa12 	bl	8002368 <__errno>
 8001f44:	2309      	movs	r3, #9
 8001f46:	6003      	str	r3, [r0, #0]
 8001f48:	f04f 30ff 	mov.w	r0, #4294967295
 8001f4c:	bd70      	pop	{r4, r5, r6, pc}
 8001f4e:	6800      	ldr	r0, [r0, #0]
 8001f50:	462a      	mov	r2, r5
 8001f52:	4631      	mov	r1, r6
 8001f54:	f7ff ffdd 	bl	8001f12 <_swiwrite>
 8001f58:	1e03      	subs	r3, r0, #0
 8001f5a:	dbf5      	blt.n	8001f48 <_write+0x16>
 8001f5c:	6862      	ldr	r2, [r4, #4]
 8001f5e:	1ae8      	subs	r0, r5, r3
 8001f60:	4402      	add	r2, r0
 8001f62:	42ab      	cmp	r3, r5
 8001f64:	6062      	str	r2, [r4, #4]
 8001f66:	d1f1      	bne.n	8001f4c <_write+0x1a>
 8001f68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001f6c:	2000      	movs	r0, #0
 8001f6e:	f7ff bf55 	b.w	8001e1c <error>

08001f72 <_swiclose>:
 8001f72:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001f74:	2402      	movs	r4, #2
 8001f76:	9001      	str	r0, [sp, #4]
 8001f78:	ad01      	add	r5, sp, #4
 8001f7a:	4620      	mov	r0, r4
 8001f7c:	4629      	mov	r1, r5
 8001f7e:	beab      	bkpt	0x00ab
 8001f80:	4604      	mov	r4, r0
 8001f82:	4620      	mov	r0, r4
 8001f84:	f7ff ff58 	bl	8001e38 <checkerror>
 8001f88:	b003      	add	sp, #12
 8001f8a:	bd30      	pop	{r4, r5, pc}

08001f8c <_close>:
 8001f8c:	b538      	push	{r3, r4, r5, lr}
 8001f8e:	4605      	mov	r5, r0
 8001f90:	f7ff ff2a 	bl	8001de8 <findslot>
 8001f94:	4604      	mov	r4, r0
 8001f96:	b930      	cbnz	r0, 8001fa6 <_close+0x1a>
 8001f98:	f000 f9e6 	bl	8002368 <__errno>
 8001f9c:	2309      	movs	r3, #9
 8001f9e:	6003      	str	r3, [r0, #0]
 8001fa0:	f04f 30ff 	mov.w	r0, #4294967295
 8001fa4:	bd38      	pop	{r3, r4, r5, pc}
 8001fa6:	3d01      	subs	r5, #1
 8001fa8:	2d01      	cmp	r5, #1
 8001faa:	d809      	bhi.n	8001fc0 <_close+0x34>
 8001fac:	4b09      	ldr	r3, [pc, #36]	; (8001fd4 <_close+0x48>)
 8001fae:	689a      	ldr	r2, [r3, #8]
 8001fb0:	691b      	ldr	r3, [r3, #16]
 8001fb2:	429a      	cmp	r2, r3
 8001fb4:	d104      	bne.n	8001fc0 <_close+0x34>
 8001fb6:	f04f 33ff 	mov.w	r3, #4294967295
 8001fba:	6003      	str	r3, [r0, #0]
 8001fbc:	2000      	movs	r0, #0
 8001fbe:	e7f1      	b.n	8001fa4 <_close+0x18>
 8001fc0:	6820      	ldr	r0, [r4, #0]
 8001fc2:	f7ff ffd6 	bl	8001f72 <_swiclose>
 8001fc6:	2800      	cmp	r0, #0
 8001fc8:	d1ec      	bne.n	8001fa4 <_close+0x18>
 8001fca:	f04f 33ff 	mov.w	r3, #4294967295
 8001fce:	6023      	str	r3, [r4, #0]
 8001fd0:	e7e8      	b.n	8001fa4 <_close+0x18>
 8001fd2:	bf00      	nop
 8001fd4:	200000ac 	.word	0x200000ac

08001fd8 <_sbrk>:
 8001fd8:	4a0d      	ldr	r2, [pc, #52]	; (8002010 <_sbrk+0x38>)
 8001fda:	6811      	ldr	r1, [r2, #0]
 8001fdc:	b510      	push	{r4, lr}
 8001fde:	4603      	mov	r3, r0
 8001fe0:	b909      	cbnz	r1, 8001fe6 <_sbrk+0xe>
 8001fe2:	490c      	ldr	r1, [pc, #48]	; (8002014 <_sbrk+0x3c>)
 8001fe4:	6011      	str	r1, [r2, #0]
 8001fe6:	6810      	ldr	r0, [r2, #0]
 8001fe8:	4669      	mov	r1, sp
 8001fea:	4403      	add	r3, r0
 8001fec:	428b      	cmp	r3, r1
 8001fee:	d806      	bhi.n	8001ffe <_sbrk+0x26>
 8001ff0:	4909      	ldr	r1, [pc, #36]	; (8002018 <_sbrk+0x40>)
 8001ff2:	4c0a      	ldr	r4, [pc, #40]	; (800201c <_sbrk+0x44>)
 8001ff4:	6809      	ldr	r1, [r1, #0]
 8001ff6:	42a1      	cmp	r1, r4
 8001ff8:	d008      	beq.n	800200c <_sbrk+0x34>
 8001ffa:	428b      	cmp	r3, r1
 8001ffc:	d906      	bls.n	800200c <_sbrk+0x34>
 8001ffe:	f000 f9b3 	bl	8002368 <__errno>
 8002002:	230c      	movs	r3, #12
 8002004:	6003      	str	r3, [r0, #0]
 8002006:	f04f 30ff 	mov.w	r0, #4294967295
 800200a:	bd10      	pop	{r4, pc}
 800200c:	6013      	str	r3, [r2, #0]
 800200e:	e7fc      	b.n	800200a <_sbrk+0x32>
 8002010:	2000009c 	.word	0x2000009c
 8002014:	20000150 	.word	0x20000150
 8002018:	20000064 	.word	0x20000064
 800201c:	cafedead 	.word	0xcafedead

08002020 <_swistat>:
 8002020:	b570      	push	{r4, r5, r6, lr}
 8002022:	460c      	mov	r4, r1
 8002024:	f7ff fee0 	bl	8001de8 <findslot>
 8002028:	4605      	mov	r5, r0
 800202a:	b930      	cbnz	r0, 800203a <_swistat+0x1a>
 800202c:	f000 f99c 	bl	8002368 <__errno>
 8002030:	2309      	movs	r3, #9
 8002032:	6003      	str	r3, [r0, #0]
 8002034:	f04f 30ff 	mov.w	r0, #4294967295
 8002038:	bd70      	pop	{r4, r5, r6, pc}
 800203a:	6863      	ldr	r3, [r4, #4]
 800203c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002040:	6063      	str	r3, [r4, #4]
 8002042:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002046:	64a3      	str	r3, [r4, #72]	; 0x48
 8002048:	260c      	movs	r6, #12
 800204a:	4630      	mov	r0, r6
 800204c:	4629      	mov	r1, r5
 800204e:	beab      	bkpt	0x00ab
 8002050:	4605      	mov	r5, r0
 8002052:	4628      	mov	r0, r5
 8002054:	f7ff fef0 	bl	8001e38 <checkerror>
 8002058:	1c43      	adds	r3, r0, #1
 800205a:	bf1c      	itt	ne
 800205c:	6120      	strne	r0, [r4, #16]
 800205e:	2000      	movne	r0, #0
 8002060:	e7ea      	b.n	8002038 <_swistat+0x18>

08002062 <_fstat>:
 8002062:	460b      	mov	r3, r1
 8002064:	b510      	push	{r4, lr}
 8002066:	2100      	movs	r1, #0
 8002068:	4604      	mov	r4, r0
 800206a:	2258      	movs	r2, #88	; 0x58
 800206c:	4618      	mov	r0, r3
 800206e:	f7fe feb7 	bl	8000de0 <memset>
 8002072:	4601      	mov	r1, r0
 8002074:	4620      	mov	r0, r4
 8002076:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800207a:	f7ff bfd1 	b.w	8002020 <_swistat>

0800207e <_stat>:
 800207e:	b538      	push	{r3, r4, r5, lr}
 8002080:	460d      	mov	r5, r1
 8002082:	4604      	mov	r4, r0
 8002084:	2258      	movs	r2, #88	; 0x58
 8002086:	2100      	movs	r1, #0
 8002088:	4628      	mov	r0, r5
 800208a:	f7fe fea9 	bl	8000de0 <memset>
 800208e:	4620      	mov	r0, r4
 8002090:	2100      	movs	r1, #0
 8002092:	f000 f811 	bl	80020b8 <_swiopen>
 8002096:	1c43      	adds	r3, r0, #1
 8002098:	4604      	mov	r4, r0
 800209a:	d00b      	beq.n	80020b4 <_stat+0x36>
 800209c:	686b      	ldr	r3, [r5, #4]
 800209e:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 80020a2:	606b      	str	r3, [r5, #4]
 80020a4:	4629      	mov	r1, r5
 80020a6:	f7ff ffbb 	bl	8002020 <_swistat>
 80020aa:	4605      	mov	r5, r0
 80020ac:	4620      	mov	r0, r4
 80020ae:	f7ff ff6d 	bl	8001f8c <_close>
 80020b2:	462c      	mov	r4, r5
 80020b4:	4620      	mov	r0, r4
 80020b6:	bd38      	pop	{r3, r4, r5, pc}

080020b8 <_swiopen>:
 80020b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020bc:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8002168 <_swiopen+0xb0>
 80020c0:	b097      	sub	sp, #92	; 0x5c
 80020c2:	4607      	mov	r7, r0
 80020c4:	460e      	mov	r6, r1
 80020c6:	2500      	movs	r5, #0
 80020c8:	f858 4035 	ldr.w	r4, [r8, r5, lsl #3]
 80020cc:	1c61      	adds	r1, r4, #1
 80020ce:	d037      	beq.n	8002140 <_swiopen+0x88>
 80020d0:	3501      	adds	r5, #1
 80020d2:	2d14      	cmp	r5, #20
 80020d4:	d1f8      	bne.n	80020c8 <_swiopen+0x10>
 80020d6:	f000 f947 	bl	8002368 <__errno>
 80020da:	2318      	movs	r3, #24
 80020dc:	6003      	str	r3, [r0, #0]
 80020de:	f04f 34ff 	mov.w	r4, #4294967295
 80020e2:	e03d      	b.n	8002160 <_swiopen+0xa8>
 80020e4:	f3c6 4400 	ubfx	r4, r6, #16, #1
 80020e8:	f240 6301 	movw	r3, #1537	; 0x601
 80020ec:	07b2      	lsls	r2, r6, #30
 80020ee:	bf48      	it	mi
 80020f0:	f044 0402 	orrmi.w	r4, r4, #2
 80020f4:	421e      	tst	r6, r3
 80020f6:	bf18      	it	ne
 80020f8:	f044 0404 	orrne.w	r4, r4, #4
 80020fc:	0733      	lsls	r3, r6, #28
 80020fe:	bf48      	it	mi
 8002100:	f024 0404 	bicmi.w	r4, r4, #4
 8002104:	4638      	mov	r0, r7
 8002106:	bf48      	it	mi
 8002108:	f044 0408 	orrmi.w	r4, r4, #8
 800210c:	9700      	str	r7, [sp, #0]
 800210e:	f7fe f8bf 	bl	8000290 <strlen>
 8002112:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8002116:	2401      	movs	r4, #1
 8002118:	4620      	mov	r0, r4
 800211a:	4649      	mov	r1, r9
 800211c:	beab      	bkpt	0x00ab
 800211e:	4604      	mov	r4, r0
 8002120:	2c00      	cmp	r4, #0
 8002122:	db08      	blt.n	8002136 <_swiopen+0x7e>
 8002124:	f848 4035 	str.w	r4, [r8, r5, lsl #3]
 8002128:	eb08 08c5 	add.w	r8, r8, r5, lsl #3
 800212c:	2300      	movs	r3, #0
 800212e:	f8c8 3004 	str.w	r3, [r8, #4]
 8002132:	462c      	mov	r4, r5
 8002134:	e014      	b.n	8002160 <_swiopen+0xa8>
 8002136:	4620      	mov	r0, r4
 8002138:	f7ff fe70 	bl	8001e1c <error>
 800213c:	4604      	mov	r4, r0
 800213e:	e00f      	b.n	8002160 <_swiopen+0xa8>
 8002140:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 8002144:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8002148:	46e9      	mov	r9, sp
 800214a:	d1cb      	bne.n	80020e4 <_swiopen+0x2c>
 800214c:	4649      	mov	r1, r9
 800214e:	4638      	mov	r0, r7
 8002150:	f7ff ff95 	bl	800207e <_stat>
 8002154:	3001      	adds	r0, #1
 8002156:	d0c5      	beq.n	80020e4 <_swiopen+0x2c>
 8002158:	f000 f906 	bl	8002368 <__errno>
 800215c:	2311      	movs	r3, #17
 800215e:	6003      	str	r3, [r0, #0]
 8002160:	4620      	mov	r0, r4
 8002162:	b017      	add	sp, #92	; 0x5c
 8002164:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002168:	200000ac 	.word	0x200000ac

0800216c <_get_semihosting_exts>:
 800216c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002170:	4606      	mov	r6, r0
 8002172:	460f      	mov	r7, r1
 8002174:	482a      	ldr	r0, [pc, #168]	; (8002220 <_get_semihosting_exts+0xb4>)
 8002176:	2100      	movs	r1, #0
 8002178:	4615      	mov	r5, r2
 800217a:	f7ff ff9d 	bl	80020b8 <_swiopen>
 800217e:	462a      	mov	r2, r5
 8002180:	4604      	mov	r4, r0
 8002182:	2100      	movs	r1, #0
 8002184:	4630      	mov	r0, r6
 8002186:	f7fe fe2b 	bl	8000de0 <memset>
 800218a:	1c63      	adds	r3, r4, #1
 800218c:	d016      	beq.n	80021bc <_get_semihosting_exts+0x50>
 800218e:	4620      	mov	r0, r4
 8002190:	f7ff fe2a 	bl	8001de8 <findslot>
 8002194:	f04f 080c 	mov.w	r8, #12
 8002198:	4681      	mov	r9, r0
 800219a:	4640      	mov	r0, r8
 800219c:	4649      	mov	r1, r9
 800219e:	beab      	bkpt	0x00ab
 80021a0:	4680      	mov	r8, r0
 80021a2:	4640      	mov	r0, r8
 80021a4:	f7ff fe48 	bl	8001e38 <checkerror>
 80021a8:	2803      	cmp	r0, #3
 80021aa:	dd02      	ble.n	80021b2 <_get_semihosting_exts+0x46>
 80021ac:	1ec3      	subs	r3, r0, #3
 80021ae:	42ab      	cmp	r3, r5
 80021b0:	dc08      	bgt.n	80021c4 <_get_semihosting_exts+0x58>
 80021b2:	4620      	mov	r0, r4
 80021b4:	f7ff feea 	bl	8001f8c <_close>
 80021b8:	f04f 34ff 	mov.w	r4, #4294967295
 80021bc:	4620      	mov	r0, r4
 80021be:	b003      	add	sp, #12
 80021c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80021c4:	2204      	movs	r2, #4
 80021c6:	eb0d 0102 	add.w	r1, sp, r2
 80021ca:	4620      	mov	r0, r4
 80021cc:	f7ff fe49 	bl	8001e62 <_read>
 80021d0:	2803      	cmp	r0, #3
 80021d2:	ddee      	ble.n	80021b2 <_get_semihosting_exts+0x46>
 80021d4:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80021d8:	2b53      	cmp	r3, #83	; 0x53
 80021da:	d1ea      	bne.n	80021b2 <_get_semihosting_exts+0x46>
 80021dc:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80021e0:	2b48      	cmp	r3, #72	; 0x48
 80021e2:	d1e6      	bne.n	80021b2 <_get_semihosting_exts+0x46>
 80021e4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80021e8:	2b46      	cmp	r3, #70	; 0x46
 80021ea:	d1e2      	bne.n	80021b2 <_get_semihosting_exts+0x46>
 80021ec:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80021f0:	2b42      	cmp	r3, #66	; 0x42
 80021f2:	d1de      	bne.n	80021b2 <_get_semihosting_exts+0x46>
 80021f4:	2201      	movs	r2, #1
 80021f6:	4639      	mov	r1, r7
 80021f8:	4620      	mov	r0, r4
 80021fa:	f7ff fe4c 	bl	8001e96 <_swilseek>
 80021fe:	2800      	cmp	r0, #0
 8002200:	dbd7      	blt.n	80021b2 <_get_semihosting_exts+0x46>
 8002202:	462a      	mov	r2, r5
 8002204:	4631      	mov	r1, r6
 8002206:	4620      	mov	r0, r4
 8002208:	f7ff fe2b 	bl	8001e62 <_read>
 800220c:	4605      	mov	r5, r0
 800220e:	4620      	mov	r0, r4
 8002210:	f7ff febc 	bl	8001f8c <_close>
 8002214:	4628      	mov	r0, r5
 8002216:	f7ff fe0f 	bl	8001e38 <checkerror>
 800221a:	4604      	mov	r4, r0
 800221c:	e7ce      	b.n	80021bc <_get_semihosting_exts+0x50>
 800221e:	bf00      	nop
 8002220:	08002473 	.word	0x08002473

08002224 <initialise_semihosting_exts>:
 8002224:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002226:	4d0a      	ldr	r5, [pc, #40]	; (8002250 <initialise_semihosting_exts+0x2c>)
 8002228:	4c0a      	ldr	r4, [pc, #40]	; (8002254 <initialise_semihosting_exts+0x30>)
 800222a:	2100      	movs	r1, #0
 800222c:	2201      	movs	r2, #1
 800222e:	a801      	add	r0, sp, #4
 8002230:	6029      	str	r1, [r5, #0]
 8002232:	6022      	str	r2, [r4, #0]
 8002234:	f7ff ff9a 	bl	800216c <_get_semihosting_exts>
 8002238:	2800      	cmp	r0, #0
 800223a:	dd07      	ble.n	800224c <initialise_semihosting_exts+0x28>
 800223c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002240:	f003 0201 	and.w	r2, r3, #1
 8002244:	f003 0302 	and.w	r3, r3, #2
 8002248:	602a      	str	r2, [r5, #0]
 800224a:	6023      	str	r3, [r4, #0]
 800224c:	b003      	add	sp, #12
 800224e:	bd30      	pop	{r4, r5, pc}
 8002250:	20000068 	.word	0x20000068
 8002254:	2000006c 	.word	0x2000006c

08002258 <_has_ext_stdout_stderr>:
 8002258:	b510      	push	{r4, lr}
 800225a:	4c04      	ldr	r4, [pc, #16]	; (800226c <_has_ext_stdout_stderr+0x14>)
 800225c:	6823      	ldr	r3, [r4, #0]
 800225e:	2b00      	cmp	r3, #0
 8002260:	da01      	bge.n	8002266 <_has_ext_stdout_stderr+0xe>
 8002262:	f7ff ffdf 	bl	8002224 <initialise_semihosting_exts>
 8002266:	6820      	ldr	r0, [r4, #0]
 8002268:	bd10      	pop	{r4, pc}
 800226a:	bf00      	nop
 800226c:	2000006c 	.word	0x2000006c

08002270 <initialise_monitor_handles>:
 8002270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002274:	b085      	sub	sp, #20
 8002276:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 800231c <initialise_monitor_handles+0xac>
 800227a:	f8cd 9004 	str.w	r9, [sp, #4]
 800227e:	2303      	movs	r3, #3
 8002280:	2400      	movs	r4, #0
 8002282:	9303      	str	r3, [sp, #12]
 8002284:	af01      	add	r7, sp, #4
 8002286:	9402      	str	r4, [sp, #8]
 8002288:	2501      	movs	r5, #1
 800228a:	4628      	mov	r0, r5
 800228c:	4639      	mov	r1, r7
 800228e:	beab      	bkpt	0x00ab
 8002290:	4605      	mov	r5, r0
 8002292:	f8df 808c 	ldr.w	r8, [pc, #140]	; 8002320 <initialise_monitor_handles+0xb0>
 8002296:	4623      	mov	r3, r4
 8002298:	4c22      	ldr	r4, [pc, #136]	; (8002324 <initialise_monitor_handles+0xb4>)
 800229a:	f8c8 5000 	str.w	r5, [r8]
 800229e:	f04f 32ff 	mov.w	r2, #4294967295
 80022a2:	f844 2033 	str.w	r2, [r4, r3, lsl #3]
 80022a6:	3301      	adds	r3, #1
 80022a8:	2b14      	cmp	r3, #20
 80022aa:	d1fa      	bne.n	80022a2 <initialise_monitor_handles+0x32>
 80022ac:	f7ff ffd4 	bl	8002258 <_has_ext_stdout_stderr>
 80022b0:	4d1d      	ldr	r5, [pc, #116]	; (8002328 <initialise_monitor_handles+0xb8>)
 80022b2:	b1d0      	cbz	r0, 80022ea <initialise_monitor_handles+0x7a>
 80022b4:	f04f 0a03 	mov.w	sl, #3
 80022b8:	2304      	movs	r3, #4
 80022ba:	f8cd 9004 	str.w	r9, [sp, #4]
 80022be:	2601      	movs	r6, #1
 80022c0:	f8cd a00c 	str.w	sl, [sp, #12]
 80022c4:	9302      	str	r3, [sp, #8]
 80022c6:	4630      	mov	r0, r6
 80022c8:	4639      	mov	r1, r7
 80022ca:	beab      	bkpt	0x00ab
 80022cc:	4683      	mov	fp, r0
 80022ce:	4b17      	ldr	r3, [pc, #92]	; (800232c <initialise_monitor_handles+0xbc>)
 80022d0:	f8cd 9004 	str.w	r9, [sp, #4]
 80022d4:	f8c3 b000 	str.w	fp, [r3]
 80022d8:	2308      	movs	r3, #8
 80022da:	f8cd a00c 	str.w	sl, [sp, #12]
 80022de:	9302      	str	r3, [sp, #8]
 80022e0:	4630      	mov	r0, r6
 80022e2:	4639      	mov	r1, r7
 80022e4:	beab      	bkpt	0x00ab
 80022e6:	4606      	mov	r6, r0
 80022e8:	602e      	str	r6, [r5, #0]
 80022ea:	682b      	ldr	r3, [r5, #0]
 80022ec:	3301      	adds	r3, #1
 80022ee:	bf02      	ittt	eq
 80022f0:	4b0e      	ldreq	r3, [pc, #56]	; (800232c <initialise_monitor_handles+0xbc>)
 80022f2:	681b      	ldreq	r3, [r3, #0]
 80022f4:	602b      	streq	r3, [r5, #0]
 80022f6:	2600      	movs	r6, #0
 80022f8:	f8d8 3000 	ldr.w	r3, [r8]
 80022fc:	6023      	str	r3, [r4, #0]
 80022fe:	6066      	str	r6, [r4, #4]
 8002300:	f7ff ffaa 	bl	8002258 <_has_ext_stdout_stderr>
 8002304:	b130      	cbz	r0, 8002314 <initialise_monitor_handles+0xa4>
 8002306:	4b09      	ldr	r3, [pc, #36]	; (800232c <initialise_monitor_handles+0xbc>)
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	e9c4 3602 	strd	r3, r6, [r4, #8]
 800230e:	682b      	ldr	r3, [r5, #0]
 8002310:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8002314:	b005      	add	sp, #20
 8002316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800231a:	bf00      	nop
 800231c:	08002489 	.word	0x08002489
 8002320:	200000a4 	.word	0x200000a4
 8002324:	200000ac 	.word	0x200000ac
 8002328:	200000a0 	.word	0x200000a0
 800232c:	200000a8 	.word	0x200000a8

08002330 <_isatty>:
 8002330:	b570      	push	{r4, r5, r6, lr}
 8002332:	f7ff fd59 	bl	8001de8 <findslot>
 8002336:	2509      	movs	r5, #9
 8002338:	4604      	mov	r4, r0
 800233a:	b920      	cbnz	r0, 8002346 <_isatty+0x16>
 800233c:	f000 f814 	bl	8002368 <__errno>
 8002340:	6005      	str	r5, [r0, #0]
 8002342:	4620      	mov	r0, r4
 8002344:	bd70      	pop	{r4, r5, r6, pc}
 8002346:	4628      	mov	r0, r5
 8002348:	4621      	mov	r1, r4
 800234a:	beab      	bkpt	0x00ab
 800234c:	4604      	mov	r4, r0
 800234e:	2c01      	cmp	r4, #1
 8002350:	d0f7      	beq.n	8002342 <_isatty+0x12>
 8002352:	f000 f809 	bl	8002368 <__errno>
 8002356:	2400      	movs	r4, #0
 8002358:	4605      	mov	r5, r0
 800235a:	2613      	movs	r6, #19
 800235c:	4630      	mov	r0, r6
 800235e:	4621      	mov	r1, r4
 8002360:	beab      	bkpt	0x00ab
 8002362:	4606      	mov	r6, r0
 8002364:	602e      	str	r6, [r5, #0]
 8002366:	e7ec      	b.n	8002342 <_isatty+0x12>

08002368 <__errno>:
 8002368:	4b01      	ldr	r3, [pc, #4]	; (8002370 <__errno+0x8>)
 800236a:	6818      	ldr	r0, [r3, #0]
 800236c:	4770      	bx	lr
 800236e:	bf00      	nop
 8002370:	20000000 	.word	0x20000000

08002374 <_init>:
 8002374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002376:	bf00      	nop
 8002378:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800237a:	bc08      	pop	{r3}
 800237c:	469e      	mov	lr, r3
 800237e:	4770      	bx	lr

08002380 <_fini>:
 8002380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002382:	bf00      	nop
 8002384:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002386:	bc08      	pop	{r3}
 8002388:	469e      	mov	lr, r3
 800238a:	4770      	bx	lr
